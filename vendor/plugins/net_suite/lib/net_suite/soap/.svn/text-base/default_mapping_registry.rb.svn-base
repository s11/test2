# 
#  default_mapping_registry.rb
#  administration
#  
#  Created by John Meredith on 2008-11-24.
#  Copyright 2008 CDX Global. All rights reserved.
# 
require 'net_suite/soap/default.rb'
require 'soap/mapping'

module NetSuite
  module SOAP
    module DefaultMappingRegistry
      EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
      LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
      NsAccounting_2008_1ListsWebservicesNetsuiteCom = "urn:accounting_2008_1.lists.webservices.netsuite.com"
      NsBank_2008_1TransactionsWebservicesNetsuiteCom = "urn:bank_2008_1.transactions.webservices.netsuite.com"
      NsCommon_2008_1PlatformWebservicesNetsuiteCom = "urn:common_2008_1.platform.webservices.netsuite.com"
      NsCommunication_2008_1GeneralWebservicesNetsuiteCom = "urn:communication_2008_1.general.webservices.netsuite.com"
      NsCore_2008_1PlatformWebservicesNetsuiteCom = "urn:core_2008_1.platform.webservices.netsuite.com"
      NsCustomers_2008_1TransactionsWebservicesNetsuiteCom = "urn:customers_2008_1.transactions.webservices.netsuite.com"
      NsCustomization_2008_1SetupWebservicesNetsuiteCom = "urn:customization_2008_1.setup.webservices.netsuite.com"
      NsEmployees_2008_1ListsWebservicesNetsuiteCom = "urn:employees_2008_1.lists.webservices.netsuite.com"
      NsEmployees_2008_1TransactionsWebservicesNetsuiteCom = "urn:employees_2008_1.transactions.webservices.netsuite.com"
      NsFaults_2008_1PlatformWebservicesNetsuiteCom = "urn:faults_2008_1.platform.webservices.netsuite.com"
      NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom = "urn:filecabinet_2008_1.documents.webservices.netsuite.com"
      NsGeneral_2008_1TransactionsWebservicesNetsuiteCom = "urn:general_2008_1.transactions.webservices.netsuite.com"
      NsInventory_2008_1TransactionsWebservicesNetsuiteCom = "urn:inventory_2008_1.transactions.webservices.netsuite.com"
      NsMarketing_2008_1ListsWebservicesNetsuiteCom = "urn:marketing_2008_1.lists.webservices.netsuite.com"
      NsMessages_2008_1PlatformWebservicesNetsuiteCom = "urn:messages_2008_1.platform.webservices.netsuite.com"
      NsPurchases_2008_1TransactionsWebservicesNetsuiteCom = "urn:purchases_2008_1.transactions.webservices.netsuite.com"
      NsRelationships_2008_1ListsWebservicesNetsuiteCom = "urn:relationships_2008_1.lists.webservices.netsuite.com"
      NsSales_2008_1TransactionsWebservicesNetsuiteCom = "urn:sales_2008_1.transactions.webservices.netsuite.com"
      NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom = "urn:scheduling_2008_1.activities.webservices.netsuite.com"
      NsSupport_2008_1ListsWebservicesNetsuiteCom = "urn:support_2008_1.lists.webservices.netsuite.com"
      NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom = "urn:types.accounting_2008_1.lists.webservices.netsuite.com"
      NsTypesBank_2008_1TransactionsWebservicesNetsuiteCom = "urn:types.bank_2008_1.transactions.webservices.netsuite.com"
      NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom = "urn:types.common_2008_1.platform.webservices.netsuite.com"
      NsTypesCommunication_2008_1GeneralWebservicesNetsuiteCom = "urn:types.communication_2008_1.general.webservices.netsuite.com"
      NsTypesCore_2008_1PlatformWebservicesNetsuiteCom = "urn:types.core_2008_1.platform.webservices.netsuite.com"
      NsTypesCustomers_2008_1TransactionsWebservicesNetsuiteCom = "urn:types.customers_2008_1.transactions.webservices.netsuite.com"
      NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom = "urn:types.customization_2008_1.setup.webservices.netsuite.com"
      NsTypesEmployees_2008_1ListsWebservicesNetsuiteCom = "urn:types.employees_2008_1.lists.webservices.netsuite.com"
      NsTypesFaults_2008_1PlatformWebservicesNetsuiteCom = "urn:types.faults_2008_1.platform.webservices.netsuite.com"
      NsTypesFilecabinet_2008_1DocumentsWebservicesNetsuiteCom = "urn:types.filecabinet_2008_1.documents.webservices.netsuite.com"
      NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom = "urn:types.marketing_2008_1.lists.webservices.netsuite.com"
      NsTypesPurchases_2008_1TransactionsWebservicesNetsuiteCom = "urn:types.purchases_2008_1.transactions.webservices.netsuite.com"
      NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom = "urn:types.relationships_2008_1.lists.webservices.netsuite.com"
      NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom = "urn:types.sales_2008_1.transactions.webservices.netsuite.com"
      NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom = "urn:types.scheduling_2008_1.activities.webservices.netsuite.com"
      NsTypesSupport_2008_1ListsWebservicesNetsuiteCom = "urn:types.support_2008_1.lists.webservices.netsuite.com"
      NsTypesWebsite_2008_1ListsWebservicesNetsuiteCom = "urn:types.website_2008_1.lists.webservices.netsuite.com"
      NsWebsite_2008_1ListsWebservicesNetsuiteCom = "urn:website_2008_1.lists.webservices.netsuite.com"

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Passport,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Passport"),
        :schema_element => [
          ["email", "SOAP::SOAPString"],
          ["password", "SOAP::SOAPString"],
          ["account", "SOAP::SOAPString"],
          ["role", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SsoCredentials,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SsoCredentials"),
        :schema_element => [
          ["email", "SOAP::SOAPString"],
          ["password", "SOAP::SOAPString"],
          ["account", "SOAP::SOAPString"],
          ["role", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["authenticationToken", "SOAP::SOAPString"],
          ["partnerId", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ChangePasswordOrEmailCredentials,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailCredentials"),
        :schema_element => [
          ["currentPassword", "SOAP::SOAPString"],
          ["newEmail", "SOAP::SOAPString"],
          ["newEmail2", "SOAP::SOAPString"],
          ["newPassword", "SOAP::SOAPString", [0, 1]],
          ["newPassword2", "SOAP::SOAPString", [0, 1]],
          ["justThisAccount", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::StatusDetail,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "StatusDetail"),
        :schema_element => [
          ["code", "NetSuite::SOAP::StatusDetailCodeType"],
          ["message", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "type") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Status,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Status"),
        :schema_element => [
          ["statusDetail", "NetSuite::SOAP::StatusDetail[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "isSuccess") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::WsRole,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "WsRole"),
        :schema_element => [
          ["role", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::WsRoleList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "WsRoleList"),
        :schema_element => [
          ["wsRole", "NetSuite::SOAP::WsRole[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::NullField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "NullField"),
        :schema_element => [
          ["name", "SOAP::SOAPString[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["pageSize", "SOAP::SOAPInt", [0, 1]],
          ["totalPages", "SOAP::SOAPInt", [0, 1]],
          ["pageIndex", "SOAP::SOAPInt", [0, 1]],
          ["recordList", "NetSuite::SOAP::RecordList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AsyncStatusResult"),
        :schema_element => [
          ["jobId", "SOAP::SOAPString"],
          ["status", "NetSuite::SOAP::AsyncStatusType"],
          ["percentCompleted", "SOAP::SOAPDouble"],
          ["estRemainingDuration", "SOAP::SOAPDouble"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetAllResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetAllResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["recordList", "NetSuite::SOAP::RecordList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetCustomizationResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["recordList", "NetSuite::SOAP::RecordList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["recordRefList", "NetSuite::SOAP::RecordRefList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::RecordList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "RecordList"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::RecordRefList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "RecordRefList"),
        :schema_element => [
          ["recordRef", "NetSuite::SOAP::RecordRef[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::RecordRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "RecordRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "BaseRef"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "type") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomRecordRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "BaseRef"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InitializeRecord,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "InitializeRecord"),
        :schema_element => [
          ["type", "NetSuite::SOAP::InitializeType"],
          ["reference", "NetSuite::SOAP::InitializeRef"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InitializeRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "InitializeRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "BaseRef"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "type") => "SOAP::SOAPString",
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetAllRecord,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetAllRecord"),
        :schema_element => [],
        :schema_attribute => {
          XSD::QName.new(nil, "recordType") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomizationType,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomizationType"),
        :schema_element => [],
        :schema_attribute => {
          XSD::QName.new(nil, "getCustomizationType") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetSelectValueField"),
        :schema_element => [
          ["searchCriteria", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "fieldType") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ListOrRecordRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ListOrRecordRef"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LongCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "LongCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPLong"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DoubleCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "DoubleCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPDouble"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::BooleanCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "BooleanCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPBoolean"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::StringCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "StringCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPString"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DateCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "DateCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPDateTime"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SelectCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SelectCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "NetSuite::SOAP::ListOrRecordRef"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::MultiSelectCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "MultiSelectCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "NetSuite::SOAP::ListOrRecordRef[]", [1, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomFieldList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldList"),
        :schema_element => [
          ["customField", "NetSuite::SOAP::CustomFieldRef[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchBooleanField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchBooleanField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchStringField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchStringField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchLongField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchLongField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPLong", [0, 1]],
          ["searchValue2", "SOAP::SOAPLong", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchTextNumberField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchTextNumberField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString", [0, 1]],
          ["searchValue2", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchDoubleField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDoubleField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPDouble", [0, 1]],
          ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchDateField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDateField"),
        :schema_element => [
          ["predefinedSearchValue", "NetSuite::SOAP::SearchDate", [0, 1]],
          ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
          ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchEnumMultiSelectField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchMultiSelectField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectField"),
        :schema_element => [
          ["searchValue", "NetSuite::SOAP::RecordRef[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchBooleanCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchBooleanCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchStringCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchStringCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchLongCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchLongCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPLong", [0, 1]],
          ["searchValue2", "SOAP::SOAPLong", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchDoubleCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDoubleCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPDouble", [0, 1]],
          ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchDateCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDateCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["predefinedSearchValue", "NetSuite::SOAP::SearchDate", [0, 1]],
          ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
          ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchEnumMultiSelectCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchMultiSelectCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "NetSuite::SOAP::ListOrRecordRef[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchCustomFieldList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomFieldList"),
        :schema_element => [
          ["customField", "NetSuite::SOAP::SearchCustomField[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemAvailabilityFilter,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ItemAvailabilityFilter"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRefList"],
          ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemAvailability,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ItemAvailability"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef"],
          ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]],
          ["locationId", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemAvailabilityList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ItemAvailabilityList"),
        :schema_element => [
          ["itemAvailability", "NetSuite::SOAP::ItemAvailability[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetItemAvailabilityResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["itemAvailabilityList", "NetSuite::SOAP::ItemAvailabilityList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DeletedRecord,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "DeletedRecord"),
        :schema_element => [
          ["deletedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["record", "NetSuite::SOAP::BaseRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DeletedRecordList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "DeletedRecordList"),
        :schema_element => [
          ["deletedRecord", "NetSuite::SOAP::DeletedRecord[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetDeletedResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetDeletedResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["deletedRecordList", "NetSuite::SOAP::DeletedRecordList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetDeletedFilter,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetDeletedFilter"),
        :schema_element => [
          ["deletedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AttachContactReference,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AttachContactReference"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AttachReference"),
        :schema_element => [
          ["attachTo", "NetSuite::SOAP::BaseRef"],
          ["contact", "NetSuite::SOAP::RecordRef"],
          ["contactRole", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AttachBasicReference,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AttachBasicReference"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AttachReference"),
        :schema_element => [
          ["attachTo", "NetSuite::SOAP::BaseRef"],
          ["attachedRecord", "NetSuite::SOAP::BaseRef"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SoapFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InsufficientPermissionFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InsufficientPermissionFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvalidAccountFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InvalidAccountFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvalidCredentialsFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InvalidCredentialsFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvalidSessionFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InvalidSessionFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ExceededRequestLimitFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "ExceededRequestLimitFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ExceededUsageLimitFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "ExceededUsageLimitFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ExceededRecordCountFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "ExceededRecordCountFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvalidVersionFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InvalidVersionFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ExceededRequestSizeFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "ExceededRequestSizeFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "AsyncFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::UnexpectedErrorFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "UnexpectedErrorFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SessionInfo,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SessionInfo"),
        :schema_element => [
          ["userId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ApplicationInfo,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ApplicationInfo"),
        :schema_element => [
          ["applicationId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PartnerInfo,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "PartnerInfo"),
        :schema_element => [
          ["partnerId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DocumentInfo,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DocumentInfo"),
        :schema_element => [
          ["nsId", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Preferences,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "Preferences"),
        :schema_element => [
          ["warningAsError", "SOAP::SOAPBoolean", [0, 1]],
          ["useConditionalDefaultsOnAdd", "SOAP::SOAPBoolean", [0, 1]],
          ["useConditionalDefaultsOnUpdate", "SOAP::SOAPBoolean", [0, 1]],
          ["disableMandatoryCustomFieldValidation", "SOAP::SOAPBoolean", [0, 1]],
          ["disableSystemNotesForCustomFields", "SOAP::SOAPBoolean", [0, 1]],
          ["ignoreReadOnlyFields", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchPreferences,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchPreferences"),
        :schema_element => [
          ["bodyFieldsOnly", "SOAP::SOAPBoolean", [0, 1]],
          ["pageSize", "SOAP::SOAPInt", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SessionResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SessionResponse"),
        :schema_element => [
          ["status", ["NetSuite::SOAP::Status", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status")]],
          ["wsRoleList", ["NetSuite::SOAP::WsRoleList", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "wsRoleList")], [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::WriteResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "WriteResponse"),
        :schema_element => [
          ["status", ["NetSuite::SOAP::Status", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status")]],
          ["baseRef", "NetSuite::SOAP::BaseRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ReadResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ReadResponse"),
        :schema_element => [
          ["status", ["NetSuite::SOAP::Status", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status")]],
          ["record", "NetSuite::SOAP::Record", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::WriteResponseList,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "WriteResponseList"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ReadResponseList,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ReadResponseList"),
        :schema_element => [
          ["readResponse", "NetSuite::SOAP::ReadResponse[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LoginResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "LoginResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::MapSsoResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "MapSsoResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ChangePasswordOrEmailResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LogoutResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "LogoutResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AddResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AddResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AddListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AddListResponse"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::UpdateResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "UpdateResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::UpdateListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "UpdateListResponse"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DeleteResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DeleteResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DeleteListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DeleteListResponse"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchResponse"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchMoreResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchMoreResponse"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchNextResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchNextResponse"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetResponse"),
        :schema_element => [
          ["readResponse", "NetSuite::SOAP::ReadResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetListResponse"),
        :schema_element => [
          ["readResponseList", "NetSuite::SOAP::ReadResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetAllResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetAllResponse"),
        :schema_element => [
          ["getAllResult", ["NetSuite::SOAP::GetAllResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getAllResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetCustomizationResponse"),
        :schema_element => [
          ["getCustomizationResult", ["NetSuite::SOAP::GetCustomizationResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getCustomizationResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InitializeResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "InitializeResponse"),
        :schema_element => [
          ["readResponse", "NetSuite::SOAP::ReadResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InitializeListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "InitializeListResponse"),
        :schema_element => [
          ["readResponseList", "NetSuite::SOAP::ReadResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueResponse"),
        :schema_element => [
          ["getSelectValueResult", ["NetSuite::SOAP::GetSelectValueResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetItemAvailabilityResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResponse"),
        :schema_element => [
          ["getItemAvailabilityResult", ["NetSuite::SOAP::GetItemAvailabilityResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AttachResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AttachResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DetachResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DetachResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncStatusResponse"),
        :schema_element => [
          ["asyncStatusResult", ["NetSuite::SOAP::AsyncStatusResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetAsyncResultResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetAsyncResultResponse"),
        :schema_element => [
          ["asyncResult", "NetSuite::SOAP::AsyncResult"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncAddListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncAddListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncUpdateListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncUpdateListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncDeleteListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncDeleteListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncGetListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncGetListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["readResponseList", "NetSuite::SOAP::ReadResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncSearchResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncSearchResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncInitializeListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncInitializeListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetDeletedResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetDeletedResponse"),
        :schema_element => [
          ["getDeletedResult", ["NetSuite::SOAP::GetDeletedResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getDeletedResult")]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LoginRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "LoginRequest"),
        :schema_element => [
          ["passport", "NetSuite::SOAP::Passport"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::MapSsoRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "MapSsoRequest"),
        :schema_element => [
          ["ssoCredentials", "NetSuite::SOAP::SsoCredentials"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ChangePasswordOrEmailRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailRequest"),
        :schema_element => [
          ["changePasswordOrEmailCredentials", "NetSuite::SOAP::ChangePasswordOrEmailCredentials"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LogoutRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "LogoutRequest"),
        :schema_element => []
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AddRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AddRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DeleteRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DeleteRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchRequest"),
        :schema_element => [
          ["searchRecord", "NetSuite::SOAP::SearchRecord"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchMoreRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchMoreRequest"),
        :schema_element => [
          ["pageIndex", "SOAP::SOAPInt"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchNextRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchNextRequest"),
        :schema_element => []
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::UpdateRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "UpdateRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AddListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AddListRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DeleteListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DeleteListRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::UpdateListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "UpdateListRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetListRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetAllRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetAllRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::GetAllRecord"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetCustomizationRequest"),
        :schema_element => [
          ["customizationType", "NetSuite::SOAP::CustomizationType"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InitializeRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "InitializeRequest"),
        :schema_element => [
          ["initializeRecord", "NetSuite::SOAP::InitializeRecord"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InitializeListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "InitializeListRequest"),
        :schema_element => [
          ["initializeRecord", "NetSuite::SOAP::InitializeRecord[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueRequest"),
        :schema_element => [
          ["fieldName", "NetSuite::SOAP::GetSelectValueField"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetItemAvailabilityRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityRequest"),
        :schema_element => [
          ["itemAvailabilityFilter", "NetSuite::SOAP::ItemAvailabilityFilter"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AttachRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AttachRequest"),
        :schema_element => [
          ["attachReferece", "NetSuite::SOAP::AttachReference"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DetachRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DetachRequest"),
        :schema_element => [
          ["attachReferece", "NetSuite::SOAP::AttachReference"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncAddListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncAddListRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncUpdateListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncUpdateListRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncDeleteListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncDeleteListRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncGetListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncGetListRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncInitializeListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncInitializeListRequest"),
        :schema_element => [
          ["initializeRecord", "NetSuite::SOAP::InitializeRecord[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncSearchRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncSearchRequest"),
        :schema_element => [
          ["searchRecord", "NetSuite::SOAP::SearchRecord"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CheckAsyncStatusRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "CheckAsyncStatusRequest"),
        :schema_element => [
          ["jobId", "SOAP::SOAPString"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetAsyncResultRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetAsyncResultRequest"),
        :schema_element => [
          ["jobId", "SOAP::SOAPString"],
          ["pageIndex", "SOAP::SOAPInt"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetDeletedRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetDeletedRequest"),
        :schema_element => [
          ["getDeletedFilter", "NetSuite::SOAP::GetDeletedFilter"]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ShipAddress,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "ShipAddress"),
        :schema_element => [
          ["shipAttention", "SOAP::SOAPString", [0, 1]],
          ["shipAddressee", "SOAP::SOAPString", [0, 1]],
          ["shipPhone", "SOAP::SOAPString", [0, 1]],
          ["shipAddr1", "SOAP::SOAPString", [0, 1]],
          ["shipAddr2", "SOAP::SOAPString", [0, 1]],
          ["shipCity", "SOAP::SOAPString", [0, 1]],
          ["shipState", "SOAP::SOAPString", [0, 1]],
          ["shipZip", "SOAP::SOAPString", [0, 1]],
          ["shipCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["shipIsResidential", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::BillAddress,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "BillAddress"),
        :schema_element => [
          ["billAttention", "SOAP::SOAPString", [0, 1]],
          ["billAddressee", "SOAP::SOAPString", [0, 1]],
          ["billPhone", "SOAP::SOAPString", [0, 1]],
          ["billAddr1", "SOAP::SOAPString", [0, 1]],
          ["billAddr2", "SOAP::SOAPString", [0, 1]],
          ["billCity", "SOAP::SOAPString", [0, 1]],
          ["billState", "SOAP::SOAPString", [0, 1]],
          ["billZip", "SOAP::SOAPString", [0, 1]],
          ["billCountry", "NetSuite::SOAP::Country", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntitySearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "EntitySearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ContactSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "ContactSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["availableOffline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["company", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["contactRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["employer", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasDuplicates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPrivate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "CustomerSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["accountNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["availableOffline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["balance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["boughtAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["boughtDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["ccCustomerCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccDefault", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["ccExpDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["ccHolderName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["classBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["companyName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["creditHoldOverride", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["creditLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["currency", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["custStage", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["custStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateClosed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["daysOverdue", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["depositBalance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["deptBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstOrderDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["firstSaleDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasDuplicates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPerson", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isReportedLead", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isShipAddress", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["itemsBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["itemsOrdered", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["leadDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["leadSource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["locationBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["manualCreditHold", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["merchantAccount", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["onCreditHold", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["orderedAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["orderedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["overdueBalance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["parentItemsBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["parentItemsOrdered", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerContribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partnerRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["pec", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["prospectDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["pstExempt", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["reminderDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["resaleNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["role", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesRep", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipComplete", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shippingItem", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["stage", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["terms", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["territory", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["unbilledOrders", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["url", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["vatregnumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["webLead", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "CalendarEventSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["attendee", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["calendar", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["completedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["instanceStart", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isUpcomingEvent", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["organizer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["resource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["response", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaskSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "TaskSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["actualTime", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["company", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["completedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["estimatedTime", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["estimatedTimeOverride", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isJobSummaryTask", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isJobTask", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPrivate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["milestone", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["percentComplete", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["percentTimeComplete", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["priority", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["timeRemaining", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OpportunitySearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "OpportunitySearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["amount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["availableOffline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["closeDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["competitor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["contribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["currencyName", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["custType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["daysOpen", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["daysToClose", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["entity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["expectedCloseDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["forecastType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["leadSource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["memo", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerContribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partnerRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriodRelative", "NetSuite::SOAP::PostingPeriodDate", [0, 1]],
          ["probability", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["projAltSalesAmt", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["projectedTotal", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["rangeHigh", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["rangeHighAlt", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["rangeLow", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["rangeLowAlt", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["salesRep", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["tranDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["tranId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["winLossReason", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["wonBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeeSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "EmployeeSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["alienNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["anniversary", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["approvalLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["approver", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["authworkDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["billingClass", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["birthDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["birthDay", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["cContribution", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["concurrentWebServicesUser", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["deduction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["earning", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["education", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["eligibleForCommission", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["employeeStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["employeeType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["employeeTypeKpi", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ethnicity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["expenseLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["gender", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hireDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["i9Verified", ["NetSuite::SOAP::SearchBooleanField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "I9Verified")], [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isJobResource", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isTemplate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["jobDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["laborCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["lastPaidDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastReviewDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["maritalStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nextReviewDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["offlineAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["payFrequency", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["permChangeDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["primaryEarningAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["primaryEarningItem", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["primaryEarningType", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["purchaseOrderApprovalLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["purchaseOrderApprover", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["purchaseOrderLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["releaseDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["residentStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["role", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["roleChange", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["roleChangeDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["salesRep", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["salesRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["socialSecurityNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["supervisor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["supportRep", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["timeApprover", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["usePerquest", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["useTimeData", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["visaExpDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["visaType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["withholding", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["workplace", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PhoneCallSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "PhoneCallSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["company", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["completedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["createdBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isPrivate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["priority", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "SupportCaseSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["awaitingReply", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["caseNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["closedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["company", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["escalateTo", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["helpDesk", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["inboundEmail", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["issue", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastMessage", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastReopenedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["locked", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["message", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["messageAuthor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["messageDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["messageType", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["v_module", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["origin", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["priority", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["product", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["serialNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["stage", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::MessageSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "MessageSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["author", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["authorEmail", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["bcc", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["cc", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasAttachment", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["internalOnly", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["message", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["messageDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["messageType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["recipient", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["recipientEmail", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subject", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::NoteSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "NoteSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["author", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["direction", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["note", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["noteDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["noteType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "CustomRecordSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["recType", "NetSuite::SOAP::RecordRef"],
          ["availableOffline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["created", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["id", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModified", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastModifiedBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AccountSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "AccountSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["balance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::BinSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "BinSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["binNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["inactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["memo", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DepartmentSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "DepartmentSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nameNoHierarchy", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LocationSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "LocationSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isOffice", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["makeInventoryAvailable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["makeInventoryAvailableStore", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nameNoHierarchy", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["zip", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ClassificationSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "ClassificationSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nameNoHierarchy", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "TransactionSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["account", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["accountType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["actualShipDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["altSalesAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["altSalesNetAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["amount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["amountPaid", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["amountRemaining", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["anyLineItem", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["appliedToLinkAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["appliedToLinkType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["appliedToTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["applyingLinkAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["applyingLinkType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["applyingTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["billable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["billAddress", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billAddressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billAttention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billCity", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billCountry", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["billCounty", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["billingStatus", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["billingTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["billPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billState", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billZip", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["buildEntireAssembly", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["buildVariance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["ccCustomerCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccExpireDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["ccName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["cleared", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["closed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["closeDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["cogs", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["commissionEffectiveDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["commit", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["confirmationNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["creditAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["currencyName", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customerSubOf", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customForm", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["custType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["daysOpen", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["daysOverdue", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["debitAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["deferRevRec", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dueDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["employee", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["entity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["exchangeRate", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["excludeCommission", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["expectedCloseDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["finChrg", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["forecastType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fulfillingTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fxAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["fxVsoeAllocation", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["fxVsoeAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["fxVsoePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["giftCertificate", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["grossAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["includeInForecast", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["inVsoeBundle", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isAllocation", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPayPalMeth", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isRevRecTransaction", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isShipAddress", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["itemSubOf", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["leadSource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["mainline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["memo", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["memorized", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["merchantAccount", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["message", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["multiSubsidiary", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["nameText", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["netAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["nextBillDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["opportunity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["otherRefNum", "NetSuite::SOAP::SearchTextNumberField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerContribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partnerRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["payingTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["payPalPending", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["payPalStatus", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["payPalTranId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["poAsText", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["posting", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriodRelative", "NetSuite::SOAP::PostingPeriodDate", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["printedPickingTicket", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["probability", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["promoCode", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["purchaseOrder", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["quantity", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityBilled", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityCommitted", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityPacked", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityPicked", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityShipRecv", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["revRecEndDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["revRecStartDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["revRecTermInMonths", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["salesEffectiveDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["salesRep", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["serialNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["serialNumbers", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipAddress", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipAddressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipAttention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipCity", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipComplete", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shipCountry", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["shipCounty", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["shipPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipping", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shipRecvStatus", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shipState", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipZip", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["source", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxItem", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxRate", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["terms", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["toBeEmailed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["totalAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["trackingNumbers", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["tranDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["tranId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["tranIsVsoeBundle", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["unit", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["vendType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["voided", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["vsoeAllocation", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["vsoeAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["vsoeDelivered", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["vsoePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["webSite", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "ItemSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["account", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["autoLeadTime", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["autoPreferredStockLevel", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["autoReorderPoint", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["availableToPartners", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["averageCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["buildEntireAssembly", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["buyItNowPrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["caption", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["component", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["componentOf", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["copyDescription", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["cost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["costingMethod", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["created", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateViewed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["daysBeforeExpiration", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["demandModifier", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["displayIneBayStore", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["displayName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dontShowPrice", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["eBayItemDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["eBayItemSubtitle", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["eBayItemTitle", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ebayRelistingOption", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["feedDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["feedName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["froogleProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["giftCertAuthCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertEmail", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertExpDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["giftCertFrom", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertMsg", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertOrigAmt", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertRecipient", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["imageUrl", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["inventoryLocation", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["isAvailable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isDropShipItem", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isFeatured", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isFulfillable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isOnline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPreferredVendor", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isSpecialOrderItem", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isSpecialWorkOrderItem", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["isTaxable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isVsoeBundle", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["itemId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["itemUrl", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastPurchasePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["lastQuantityAvailableChange", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["leadTime", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["listingDuration", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["locationAverageCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationPreferredStockLevel", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityAvailable", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityBackOrdered", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityCommitted", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityOnHand", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityOnOrder", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationReorderPoint", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationTotalValue", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["manufacturer", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufactureraddr1", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerCity", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerState", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerTariff", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerTaxId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerZip", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["matrix", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["matrixChild", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["metaTagHtml", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["minimumQuantity", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["mpn", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["multManufactureAddr", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["nexTagCategory", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nexTagProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["numberAllowedDownloads", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["offerSupport", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["onlineCustomerPrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["onSpecial", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["pageTitle", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["preferredStockLevel", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["preferredStockLevelDays", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["price", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["primaryCategory", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["quantityAvailable", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityBackOrdered", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityCommitted", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityOnHand", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityOnOrder", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["reorderMultiple", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["reorderPoint", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["reservePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["safetyStockLevel", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["safetyStockLevelDays", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["salesDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["scheduleBNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["scheduleBQuantity", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["searchKeywords", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["seasonalDemand", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["sellOnebay", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["serialNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["serialNumberLocation", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["shipIndividually", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["shippingRate", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["shoppingDotComCategory", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shoppingProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shopzillaCategoryId", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["shopzillaProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["startingPrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["stockDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["stockUnit", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["storeDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["subType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["taxCode", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["thumbnailUrl", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["totalValue", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["trackLandedCost", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["unitsType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["upcCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["urlComponent", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["useBins", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["useMarginalRates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["vendor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["vendorName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["vsoeDelivered", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["vsoePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["weight", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["yahooProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PartnerSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "PartnerSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["assignTasks", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["eligibleForCommission", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasDuplicates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPerson", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["promoCode", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["uRL", ["NetSuite::SOAP::SearchStringField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "URL")], [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "VendorSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["accountNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["balance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["creditLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["currency", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["eligibleForCommission", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasDuplicates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isJobResourceVend", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPerson", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["laborCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxIdNum", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["unbilledOrders", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["url", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SiteCategorySearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "SiteCategorySearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["dateViewed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TimeBillSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "TimeBillSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["approved", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["billable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["customer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["date", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["duration", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["employee", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastModified", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["memo", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["paidByPayroll", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["paidExternally", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["payItem", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SolutionSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "SolutionSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["abstract", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["caseCount", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["code", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["find", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isOnline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["topic", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TopicSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "TopicSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SubsidiarySearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "SubsidiarySearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nameNoHierarchy", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "GiftCertificateSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["amountAvailable", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["amountAvailableBilled", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["expirationDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["from", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isActive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["liabilityAccount", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["message", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["originalAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["purchaseDate", "NetSuite::SOAP::SearchDateField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FolderSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "FolderSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["folderName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["modified", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["numFiles", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["private", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["size", "NetSuite::SOAP::SearchLongField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FileSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "FileSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["availableWithoutLogin", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["created", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateViewed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["documentSize", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fileType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["folder", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isAvailable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isLink", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["modified", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["url", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "JobSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["accountNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["actualTime", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["allowExpenses", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["allowTime", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["estCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["estEndDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["estimatedTime", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["estimatedTimeOverride", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["estRevenue", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["jobResource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["jobResourceRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["limitTimeToAssignees", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["pctComplete", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["percentTimeComplete", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["timeRemaining", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::IssueSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "IssueSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["ageInMonths", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["buildBroken", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["buildBrokenName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["buildFixed", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["buildFixedName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["buildTarget", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["buildTargetName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["caseCount", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["caseNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["closedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateReleased", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["details", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["duplicateOf", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["eFix", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["employeeOrTeam", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["eventStatus", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["externalAbstract", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalDetails", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalFixedIn", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["externalStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fixed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["fixedBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isOwner", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isReviewed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isShowStopper", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["issueAbstract", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["issueNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["v_module", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["originalFixedIn", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["priority", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["product", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["productTeam", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["reportedBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["reproduce", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["reviewer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["severity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["source", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["tags", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["tracking", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["userType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["versionBroken", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["versionFixed", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["versionTarget", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GroupMemberSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "GroupMemberSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["groupId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "CampaignSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["audience", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["baseCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["campaignEventType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["campaignId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["channel", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["cost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["event", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["expectedRevenue", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["family", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["keyword", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["manager", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["offer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["promoCode", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["recipient", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["response", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["responseCode", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["responseComments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["responseDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["scheduleDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["searchEngine", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["subscription", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["template", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["vertical", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityGroupSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "EntityGroupSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["groupName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["groupOwner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["groupType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isDynamic", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPrivate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEvent,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEvent"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supportCase", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["period", "SOAP::SOAPLong", [0, 1]],
          ["frequency", "NetSuite::SOAP::CalendarEventFrequency", [0, 1]],
          ["recurrenceDowMaskList", "NetSuite::SOAP::RecurrenceDowMaskList", [0, 1]],
          ["recurrenceDow", "NetSuite::SOAP::CalendarEventDow", [0, 1]],
          ["recurrenceDowim", "NetSuite::SOAP::CalendarEventDowim", [0, 1]],
          ["seriesStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endByDate", "SOAP::SOAPDateTime", [0, 1]],
          ["noEndDate", "SOAP::SOAPBoolean", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["location", "SOAP::SOAPString", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["allDayEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["reminderType", "NetSuite::SOAP::CalendarEventReminderType", [0, 1]],
          ["reminderMinutes", "NetSuite::SOAP::CalendarEventReminderMinutes", [0, 1]],
          ["status", "NetSuite::SOAP::CalendarEventStatus", [0, 1]],
          ["accessLevel", "NetSuite::SOAP::CalendarEventAccessLevel", [0, 1]],
          ["organizer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["exclusionDateList", "NetSuite::SOAP::ExclusionDateList", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["attendeeList", "NetSuite::SOAP::CalendarEventAttendeeList", [0, 1]],
          ["resourceList", "NetSuite::SOAP::CalendarEventResourceList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ExclusionDateList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "ExclusionDateList"),
        :schema_element => [
          ["exclusionDate", "SOAP::SOAPDateTime[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::RecurrenceDowMaskList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "RecurrenceDowMaskList"),
        :schema_element => [
          ["recurrenceDowMask", "NetSuite::SOAP::CalendarEventDow[]", [1, 7]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAttendee,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendee"),
        :schema_element => [
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["attendee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["response", "NetSuite::SOAP::CalendarEventAttendeeResponse", [0, 1]],
          ["attendance", "NetSuite::SOAP::CalendarEventAttendeeAttendance", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAttendeeList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeList"),
        :schema_element => [
          ["attendee", "NetSuite::SOAP::CalendarEventAttendee[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventResource,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventResource"),
        :schema_element => [
          ["resource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventResourceList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventResourceList"),
        :schema_element => [
          ["resource", "NetSuite::SOAP::CalendarEventResource[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventSearch,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["attendeeJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["attendeeContactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["attendeeCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Task,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "Task"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supportCase", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["milestone", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["estimatedTime", "SOAP::SOAPDateTime", [0, 1]],
          ["estimatedTimeOverride", "SOAP::SOAPDateTime", [0, 1]],
          ["actualTime", "SOAP::SOAPDateTime", [0, 1]],
          ["timeRemaining", "SOAP::SOAPDateTime", [0, 1]],
          ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["priority", "NetSuite::SOAP::TaskPriority", [0, 1]],
          ["status", "NetSuite::SOAP::TaskStatus", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["reminderType", "NetSuite::SOAP::TaskReminderType", [0, 1]],
          ["reminderMinutes", "NetSuite::SOAP::TaskReminderMinutes", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contactList", "NetSuite::SOAP::TaskContactList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaskContact,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskContact"),
        :schema_element => [
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaskContactList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskContactList"),
        :schema_element => [
          ["contact", "NetSuite::SOAP::TaskContact[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaskSearch,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["companyCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["jobJoin", "NetSuite::SOAP::JobSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PhoneCall,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCall"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supportCase", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["milestone", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["status", "NetSuite::SOAP::PhoneCallStatus", [0, 1]],
          ["priority", "NetSuite::SOAP::PhoneCallPriority", [0, 1]],
          ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["reminderType", "NetSuite::SOAP::PhoneCallReminderType", [0, 1]],
          ["reminderMinutes", "NetSuite::SOAP::PhoneCallReminderMinutes", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["contactList", "NetSuite::SOAP::PhoneCallContactList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PhoneCallContact,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallContact"),
        :schema_element => [
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PhoneCallContactList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallContactList"),
        :schema_element => [
          ["contact", "NetSuite::SOAP::PhoneCallContact[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PhoneCallSearch,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["companyCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Note,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "Note"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["noteType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["direction", "NetSuite::SOAP::NoteDirection", [0, 1]],
          ["noteDate", "SOAP::SOAPDateTime", [0, 1]],
          ["note", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["activity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["author", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["folder", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["media", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["record", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["topic", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::NoteSearch,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "NoteSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["authorJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["campaignJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["entityJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["issueJoin", "NetSuite::SOAP::IssueSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["solutionJoin", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Message,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "Message"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["author", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recipient", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cc", "SOAP::SOAPString", [0, 1]],
          ["bcc", "SOAP::SOAPString", [0, 1]],
          ["messageDate", "SOAP::SOAPDateTime", [0, 1]],
          ["recordName", "SOAP::SOAPString", [0, 1]],
          ["recordTypeName", "SOAP::SOAPString", [0, 1]],
          ["subject", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["emailed", "SOAP::SOAPBoolean", [0, 1]],
          ["activity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["compressAttachments", "SOAP::SOAPBoolean", [0, 1]],
          ["incoming", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mediaItemList", "NetSuite::SOAP::MessageMediaItemList", [0, 1]],
          ["dateTime", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::MessageMediaItemList,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "MessageMediaItemList"),
        :schema_element => [
          ["mediaItem", "NetSuite::SOAP::C_File[]", [1, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::MessageSearch,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "MessageSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["attachmentsJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["authorJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["campaignJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["entityJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["recipientJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::C_File,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "File"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["attachFrom", "NetSuite::SOAP::FileAttachFrom", [0, 1]],
          ["mediaTypeName", "SOAP::SOAPString", [0, 1]],
          ["fileType", "NetSuite::SOAP::MediaType", [0, 1]],
          ["content", "SOAP::SOAPBase64", [0, 1]],
          ["folder", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fileSize", "SOAP::SOAPDouble", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["encoding", "NetSuite::SOAP::FileEncoding", [0, 1]],
          ["altTagCaption", "SOAP::SOAPString", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "SOAP::SOAPString", [0, 1]],
          ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["caption", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::FileSiteCategoryList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FileSiteCategory,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileSiteCategory"),
        :schema_element => [
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["categoryDescription", "SOAP::SOAPString", [0, 1]],
          ["website", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FileSiteCategoryList,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileSiteCategoryList"),
        :schema_element => [
          ["siteCategory", "NetSuite::SOAP::FileSiteCategory[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FileSearch,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["shopperJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Folder,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "Folder"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["group", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FolderSearch,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FolderSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::FolderSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Subscriptions,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Subscriptions"),
        :schema_element => [
          ["subscribed", "SOAP::SOAPBoolean", [0, 1]],
          ["subscription", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SubscriptionsList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "SubscriptionsList"),
        :schema_element => [
          ["subscriptions", "NetSuite::SOAP::Subscriptions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Contact,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Contact"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["categoryList", "NetSuite::SOAP::CategoryList", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["officePhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["supervisor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supervisorPhone", "SOAP::SOAPString", [0, 1]],
          ["assistant", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assistantPhone", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::ContactAddressbookList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CategoryList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CategoryList"),
        :schema_element => [
          ["category", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ContactAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ContactAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::ContactAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ContactSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["customerPrimaryJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["partnerPrimaryJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]],
          ["vendorPrimaryJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Customer,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Customer"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
          ["altPhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["language", "NetSuite::SOAP::Language", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["territory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["taxExempt", "SOAP::SOAPBoolean", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
          ["creditHoldOverride", "NetSuite::SOAP::CustomerCreditHoldOverride", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
          ["daysOverdue", "SOAP::SOAPLong", [0, 1]],
          ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["prefCCProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
          ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
          ["taxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["resaleNumber", "SOAP::SOAPString", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["reminderDays", "SOAP::SOAPLong", [0, 1]],
          ["shippingItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["thirdPartyAcct", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyZipcode", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["accessRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["accessHelp", "SOAP::SOAPString", [0, 1]],
          ["campaignCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["webLead", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["referrer", "SOAP::SOAPString", [0, 1]],
          ["keywords", "SOAP::SOAPString", [0, 1]],
          ["clickStream", "SOAP::SOAPString", [0, 1]],
          ["lastPageVisited", "SOAP::SOAPString", [0, 1]],
          ["visits", "SOAP::SOAPLong", [0, 1]],
          ["firstVisit", "SOAP::SOAPDateTime", [0, 1]],
          ["lastVisit", "SOAP::SOAPDateTime", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stage", "NetSuite::SOAP::CustomerStage", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CustomerSalesTeamList", [0, 1]],
          ["downloadList", "NetSuite::SOAP::CustomerDownloadList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::CustomerAddressbookList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["contactList", "NetSuite::SOAP::ContactRoleList", [0, 1]],
          ["creditCardsList", "NetSuite::SOAP::CustomerCreditCardsList", [0, 1]],
          ["groupPricingList", "NetSuite::SOAP::CustomerGroupPricingList", [0, 1]],
          ["itemPricingList", "NetSuite::SOAP::CustomerItemPricingList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerDownload,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerDownload"),
        :schema_element => [
          ["file", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["licenseCode", "SOAP::SOAPString", [0, 1]],
          ["remainingDownloads", "SOAP::SOAPLong", [0, 1]],
          ["expiration", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerDownloadList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerDownloadList"),
        :schema_element => [
          ["download", "NetSuite::SOAP::CustomerDownload[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ContactRole_,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactRole"),
        :schema_element => [
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contactRole", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ContactRoleList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactRoleList"),
        :schema_element => [
          ["contact", "NetSuite::SOAP::ContactRole_[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerSalesTeam,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerSalesTeamList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::CustomerSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::CustomerAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerCreditCards,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerCreditCards"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitcardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["ccMemo", "SOAP::SOAPString", [0, 1]],
          ["validfrom", "SOAP::SOAPDateTime", [0, 1]],
          ["ccDefault", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerCreditCardsList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerCreditCardsList"),
        :schema_element => [
          ["creditCards", "NetSuite::SOAP::CustomerCreditCards[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerGroupPricing,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerGroupPricing"),
        :schema_element => [
          ["group", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["level", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerGroupPricingList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerGroupPricingList"),
        :schema_element => [
          ["groupPricing", "NetSuite::SOAP::CustomerGroupPricing[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerItemPricing,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerItemPricing"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["level", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerItemPricingList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerItemPricingList"),
        :schema_element => [
          ["itemPricing", "NetSuite::SOAP::CustomerItemPricing[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["hostedPageJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["leadSourceJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["parentCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["salesRepJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["subCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["webSiteCategoryJoin", "NetSuite::SOAP::SiteCategorySearchBasic", [0, 1]],
          ["webSiteItemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerStatus,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerStatus"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["stage", "NetSuite::SOAP::CustomerStatusStage", [0, 1]],
          ["probability", "SOAP::SOAPDouble", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["includeInLeadReports", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Partner,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Partner"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["partnerCode", "SOAP::SOAPString", [0, 1]],
          ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["referringUrl", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["roleList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["categoryList", "NetSuite::SOAP::CategoryList", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
          ["taxIdNum", "SOAP::SOAPString", [0, 1]],
          ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["bcn", "SOAP::SOAPString", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxFractionUnit", "NetSuite::SOAP::TaxFractionUnit", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["taxRounding", "NetSuite::SOAP::TaxRounding", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["accessRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["subPartnerLogin", "SOAP::SOAPBoolean", [0, 1]],
          ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["contactList", "NetSuite::SOAP::ContactRoleList", [0, 1]],
          ["promoCodeList", "NetSuite::SOAP::PartnerPromoCodeList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::PartnerAddressbookList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PartnerPromoCode,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerPromoCode"),
        :schema_element => [
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discount", "SOAP::SOAPString", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PartnerPromoCodeList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerPromoCodeList"),
        :schema_element => [
          ["promoCode", "NetSuite::SOAP::PartnerPromoCode[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PartnerAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PartnerAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::PartnerAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PartnerSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Vendor,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Vendor"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
          ["altPhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["legalName", "SOAP::SOAPString", [0, 1]],
          ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["bcn", "SOAP::SOAPString", [0, 1]],
          ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["is1099Eligible", "SOAP::SOAPBoolean", [0, 1]],
          ["isJobResourceVend", "SOAP::SOAPBoolean", [0, 1]],
          ["laborCost", "SOAP::SOAPDouble", [0, 1]],
          ["taxIdNum", "SOAP::SOAPString", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["isAccountant", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["contactList", "NetSuite::SOAP::ContactRoleList", [0, 1]],
          ["pricingScheduleList", "NetSuite::SOAP::VendorPricingScheduleList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::VendorAddressbookList", [0, 1]],
          ["rolesList", "NetSuite::SOAP::VendorRolesList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorPricingSchedule,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorPricingSchedule"),
        :schema_element => [
          ["scheduleName", "SOAP::SOAPString", [0, 1]],
          ["scheduleDiscount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorPricingScheduleList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorPricingScheduleList"),
        :schema_element => [
          ["pricingSchedule", "NetSuite::SOAP::VendorPricingSchedule[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::VendorAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorRoles,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorRoles"),
        :schema_element => [
          ["selectedRole", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorRolesList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorRolesList"),
        :schema_element => [
          ["roles", "NetSuite::SOAP::VendorRoles[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::VendorSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityGroup,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroup"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["groupName", "SOAP::SOAPString", [0, 1]],
          ["groupType", "NetSuite::SOAP::EntityGroupType", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["groupOwner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSavedSearch", "SOAP::SOAPBoolean", [0, 1]],
          ["parentGroupType", "NetSuite::SOAP::EntityGroupType", [0, 1]],
          ["savedSearch", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSalesTeam", "SOAP::SOAPBoolean", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["restrictionGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isProductTeam", "SOAP::SOAPBoolean", [0, 1]],
          ["isFunctionalTeam", "SOAP::SOAPBoolean", [0, 1]],
          ["issueRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["calendarName", "SOAP::SOAPString", [0, 1]],
          ["calendarStartTime", "NetSuite::SOAP::EntityGroupDailyTime", [0, 1]],
          ["calendarEndTime", "NetSuite::SOAP::EntityGroupDailyTime", [0, 1]],
          ["calendarDefaultView", "NetSuite::SOAP::EntityGroupDefView", [0, 1]],
          ["calendarPeriod", "NetSuite::SOAP::EntityGroupPeriodSize", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityGroupSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::EntityGroupSearchBasic", [0, 1]],
          ["groupMemberJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Job,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Job"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["language", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["altPhone", "SOAP::SOAPString", [0, 1]],
          ["projectedEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["jobType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["estimatedCost", "SOAP::SOAPDouble", [0, 1]],
          ["estimatedRevenue", "SOAP::SOAPDouble", [0, 1]],
          ["estimatedTime", "SOAP::SOAPDateTime", [0, 1]],
          ["estimatedTimeOverride", "SOAP::SOAPDateTime", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
          ["actualTime", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["timeRemaining", "SOAP::SOAPDateTime", [0, 1]],
          ["estimatedLaborCost", "SOAP::SOAPDouble", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["estimateRevRecTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["limitTimeToAssignees", "SOAP::SOAPBoolean", [0, 1]],
          ["allowTime", "SOAP::SOAPBoolean", [0, 1]],
          ["allowExpenses", "SOAP::SOAPBoolean", [0, 1]],
          ["jobResourcesList", "NetSuite::SOAP::JobResourcesList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::JobAddressbookList", [0, 1]],
          ["milestonesList", "NetSuite::SOAP::JobMilestonesList", [0, 1]],
          ["creditCardsList", "NetSuite::SOAP::JobCreditCardsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::JobAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobResources,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobResources"),
        :schema_element => [
          ["jobResource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["role", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobResourcesList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobResourcesList"),
        :schema_element => [
          ["jobResources", "NetSuite::SOAP::JobResources[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobMilestones,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobMilestones"),
        :schema_element => [
          ["milestoneName", "SOAP::SOAPString", [0, 1]],
          ["milestoneOrder", "SOAP::SOAPString", [0, 1]],
          ["milestoneEstComplete", "SOAP::SOAPDateTime", [0, 1]],
          ["milestoneCompleted", "SOAP::SOAPBoolean", [0, 1]],
          ["milestoneComments", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobMilestonesList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobMilestonesList"),
        :schema_element => [
          ["milestones", "NetSuite::SOAP::JobMilestones[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobCreditCards,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobCreditCards"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccMemo", "SOAP::SOAPString", [0, 1]],
          ["ccDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobCreditCardsList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobCreditCardsList"),
        :schema_element => [
          ["creditCards", "NetSuite::SOAP::JobCreditCards[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::JobSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobType,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JobStatus,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobStatus"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCase,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCase"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["escalationMessage", "SOAP::SOAPString", [0, 1]],
          ["lastReopenedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["incomingMessage", "SOAP::SOAPString", [0, 1]],
          ["insertsolution", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["outgoingMessage", "SOAP::SOAPString", [0, 1]],
          ["searchsolution", "SOAP::SOAPString", [0, 1]],
          ["emailForm", "SOAP::SOAPBoolean", [0, 1]],
          ["newsolutionfrommsg", "SOAP::SOAPString", [0, 1]],
          ["internalOnly", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["caseNumber", "SOAP::SOAPString", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastMessageDate", "SOAP::SOAPDateTime", [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["product", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_module", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumber", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["inboundEmail", "SOAP::SOAPString", [0, 1]],
          ["issue", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["priority", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["origin", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["helpDesk", "SOAP::SOAPBoolean", [0, 1]],
          ["emailEmployeesList", "NetSuite::SOAP::EmailEmployeesList", [0, 1]],
          ["escalateToList", "NetSuite::SOAP::SupportCaseEscalateToList", [0, 1]],
          ["solutionsList", "NetSuite::SOAP::SupportCaseSolutionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmailEmployeesList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "EmailEmployeesList"),
        :schema_element => [
          ["emailEmployees", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseEscalateTo,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseEscalateTo"),
        :schema_element => [
          ["escalatee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseEscalateToList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseEscalateToList"),
        :schema_element => [
          ["escalateTo", "NetSuite::SOAP::SupportCaseEscalateTo[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseSolutions,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseSolutions"),
        :schema_element => [
          ["solution", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["dateApplied", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseSolutionsList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseSolutionsList"),
        :schema_element => [
          ["solutions", "NetSuite::SOAP::SupportCaseSolutions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseSearch,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["issueJoin", "NetSuite::SOAP::IssueSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseStatus,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseStatus"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stage", "NetSuite::SOAP::SupportCaseStatusStage", [0, 1]],
          ["caseOnHold", "SOAP::SOAPBoolean", [0, 1]],
          ["autoCloseCase", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseType,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseOrigin,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseOrigin"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseIssue,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseIssue"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCasePriority,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCasePriority"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Solution,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Solution"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["solutionCode", "SOAP::SOAPString", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["status", "NetSuite::SOAP::SolutionStatus", [0, 1]],
          ["displayOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["longDescription", "SOAP::SOAPString", [0, 1]],
          ["topicsList", "NetSuite::SOAP::SolutionTopicsList", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["solutionsList", "NetSuite::SOAP::SolutionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SolutionTopics,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionTopics"),
        :schema_element => [
          ["topic", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SolutionTopicsList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionTopicsList"),
        :schema_element => [
          ["topics", "NetSuite::SOAP::SolutionTopics[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Solutions,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Solutions"),
        :schema_element => [
          ["solution", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SolutionsList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionsList"),
        :schema_element => [
          ["solutions", "NetSuite::SOAP::Solutions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SolutionSearch,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["relatedSolutionJoin", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]],
          ["topicJoin", "NetSuite::SOAP::TopicSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Topic,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Topic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["parentTopic", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["longDescription", "SOAP::SOAPString", [0, 1]],
          ["solutionList", "NetSuite::SOAP::TopicSolutionList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TopicSolution,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "TopicSolution"),
        :schema_element => [
          ["solution", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TopicSolutionList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "TopicSolutionList"),
        :schema_element => [
          ["solution", "NetSuite::SOAP::TopicSolution[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TopicSearch,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "TopicSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TopicSearchBasic", [0, 1]],
          ["solutionJoin", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Issue,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Issue"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueNumber", "SOAP::SOAPString", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["issueType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["product", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_module", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["productTeam", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["source", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reportedBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reproduce", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["duplicateOf", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["severity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["priority", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isShowStopper", "SOAP::SOAPBoolean", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reviewer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isReviewed", "SOAP::SOAPBoolean", [0, 1]],
          ["issueStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["issueTagsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["issueAbstract", "SOAP::SOAPString", [0, 1]],
          ["newDetails", "SOAP::SOAPString", [0, 1]],
          ["isOwner", "SOAP::SOAPBoolean", [0, 1]],
          ["trackCode", "NetSuite::SOAP::IssueTrackCode", [0, 1]],
          ["emailAssignee", "SOAP::SOAPBoolean", [0, 1]],
          ["emailEmployeesList", "NetSuite::SOAP::EmailEmployeesList", [0, 1]],
          ["emailCellsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["externalAbstract", "SOAP::SOAPString", [0, 1]],
          ["externalDetails", "SOAP::SOAPString", [0, 1]],
          ["brokenInVersionList", "NetSuite::SOAP::IssueVersionList", [0, 1]],
          ["targetVersionList", "NetSuite::SOAP::IssueVersionList", [0, 1]],
          ["fixedInVersionList", "NetSuite::SOAP::IssueVersionList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::IssueVersion,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "IssueVersion"),
        :schema_element => [
          ["primary", "SOAP::SOAPBoolean", [0, 1]],
          ["version", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["build", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::IssueVersionList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "IssueVersionList"),
        :schema_element => [
          ["issueVersion", "NetSuite::SOAP::IssueVersion[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::IssueSearch,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "IssueSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::IssueSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ClassTranslation,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ClassTranslation"),
        :schema_element => [
          ["locale", "SOAP::SOAPString", [0, 1]],
          ["language", "SOAP::SOAPString", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ClassTranslationList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ClassTranslationList"),
        :schema_element => [
          ["classTranslation", "NetSuite::SOAP::ClassTranslation[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ContactCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ContactCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["private", "SOAP::SOAPBoolean", [0, 1]],
          ["sync", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "CustomerCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesRole,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SalesRole"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PriceLevel,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PriceLevel"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["discountpct", "SOAP::SOAPDouble", [0, 1]],
          ["updateExistingPrices", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::WinLossReason,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "WinLossReason"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Term,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Term"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["dateDriven", "SOAP::SOAPBoolean", [0, 1]],
          ["daysUntilNetDue", "SOAP::SOAPLong", [0, 1]],
          ["discountPercent", "SOAP::SOAPDouble", [0, 1]],
          ["daysUntilExpiry", "SOAP::SOAPLong", [0, 1]],
          ["dayOfMonthNetDue", "SOAP::SOAPLong", [0, 1]],
          ["dueNextMonthIfWithinDays", "SOAP::SOAPLong", [0, 1]],
          ["discountPercentDateDriven", "SOAP::SOAPDouble", [0, 1]],
          ["dayDiscountExpires", "SOAP::SOAPLong", [0, 1]],
          ["preferred", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::NoteType,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NoteType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PaymentMethod,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PaymentMethod"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["creditCard", "SOAP::SOAPBoolean", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["isDebitCard", "SOAP::SOAPBoolean", [0, 1]],
          ["merchantAccountsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["payPalEmailAddress", "SOAP::SOAPString", [0, 1]],
          ["expressCheckoutArrangement", "SOAP::SOAPString", [0, 1]],
          ["useExpressCheckout", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LeadSource,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LeadSource"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Price,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Price"),
        :schema_element => [
          ["value", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PriceList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PriceList"),
        :schema_element => [
          ["price", "NetSuite::SOAP::Price[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Pricing,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Pricing"),
        :schema_element => [
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discount", "SOAP::SOAPDouble", [0, 1]],
          ["priceList", "NetSuite::SOAP::PriceList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PricingMatrix,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PricingMatrix"),
        :schema_element => [
          ["pricing", "NetSuite::SOAP::Pricing[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Rate,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Rate"),
        :schema_element => [
          ["value", "SOAP::SOAPDouble", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::RateList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "RateList"),
        :schema_element => [
          ["rate", "NetSuite::SOAP::Rate[]", [0, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::BillingRates,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "BillingRates"),
        :schema_element => [
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingClass", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rateList", "NetSuite::SOAP::RateList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::BillingRatesMatrix,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "BillingRatesMatrix"),
        :schema_element => [
          ["billingRates", "NetSuite::SOAP::BillingRates[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Translation,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Translation"),
        :schema_element => [
          ["language", "SOAP::SOAPString", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TranslationList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TranslationList"),
        :schema_element => [
          ["translation", "NetSuite::SOAP::Translation[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemOptionsList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemOptionsList"),
        :schema_element => [
          ["itemOptions", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemVendor,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemVendor"),
        :schema_element => [
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendorCode", "SOAP::SOAPString", [0, 1]],
          ["vendorCurrencyName", "SOAP::SOAPString", [0, 1]],
          ["purchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["preferredVendor", "SOAP::SOAPBoolean", [0, 1]],
          ["schedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemVendorList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemVendorList"),
        :schema_element => [
          ["itemVendor", "NetSuite::SOAP::ItemVendor[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SiteCategory_,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SiteCategory"),
        :schema_element => [
          ["website", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["categoryDescription", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SiteCategoryList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SiteCategoryList"),
        :schema_element => [
          ["siteCategory", "NetSuite::SOAP::SiteCategory_[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ProductFeedList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ProductFeedList"),
        :schema_element => [
          ["productFeed", "NetSuite::SOAP::ItemProductFeed[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemMember,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemMember"),
        :schema_element => [
          ["memberDescr", "SOAP::SOAPString", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["memberUnit", "SOAP::SOAPString", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxcode", "SOAP::SOAPString", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxrate", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemMemberList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemMemberList"),
        :schema_element => [
          ["itemMember", "NetSuite::SOAP::ItemMember[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InventoryItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["costingMethod", "NetSuite::SOAP::ItemCostingMethod", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommittedUnits", "SOAP::SOAPString", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["quantityAvailableUnits", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::InventoryItemLocationsList", [0, 1]],
          ["quantityOnOrderUnits", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InventoryItemBinNumber,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItemBinNumber"),
        :schema_element => [
          ["binNumber", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onHand", "SOAP::SOAPString", [0, 1]],
          ["location", "SOAP::SOAPString", [0, 1]],
          ["preferredBin", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InventoryItemBinNumberList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItemBinNumberList"),
        :schema_element => [
          ["binNumber", "NetSuite::SOAP::InventoryItemBinNumber[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InventoryItemLocations,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItemLocations"),
        :schema_element => [
          ["location", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["locationId", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InventoryItemLocationsList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItemLocationsList"),
        :schema_element => [
          ["locations", "NetSuite::SOAP::InventoryItemLocations[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DescriptionItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "DescriptionItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DiscountItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "DiscountItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::MarkupItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "MarkupItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PaymentItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PaymentItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SubtotalItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SubtotalItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::NonInventoryPurchaseItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NonInventoryPurchaseItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::NonInventorySaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NonInventorySaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::NonInventoryResaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NonInventoryResaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OtherChargeResaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "OtherChargeResaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OtherChargePurchaseItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "OtherChargePurchaseItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ServiceResaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ServiceResaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["createjob", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["billingRatesMatrix", "NetSuite::SOAP::BillingRatesMatrix", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ServicePurchaseItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ServicePurchaseItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ServiceSaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ServiceSaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["createjob", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["billingRatesMatrix", "NetSuite::SOAP::BillingRatesMatrix", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OtherChargeSaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "OtherChargeSaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Currency,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Currency"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["symbol", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isBaseCurrency", "SOAP::SOAPBoolean", [0, 1]],
          ["locale", "NetSuite::SOAP::CurrencyLocale", [0, 1]],
          ["formatSample", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["inclInFxRateUpdates", "SOAP::SOAPBoolean", [0, 1]],
          ["currencyPrecision", "NetSuite::SOAP::CurrencyCurrencyPrecision", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ExpenseCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ExpenseCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["expenseAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Account,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Account"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["acctType", "NetSuite::SOAP::AccountType", [0, 1]],
          ["acctNumber", "SOAP::SOAPString", [0, 1]],
          ["acctName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPString", [0, 1]],
          ["generalRate", "NetSuite::SOAP::ConsolidatedRate", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cashflowRate", "NetSuite::SOAP::ConsolidatedRate", [0, 1]],
          ["billableExpensesAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["curDocNum", "SOAP::SOAPLong", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["inventory", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["category1099misc", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeStatement", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balanceSheet", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cashFlow", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AccountSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "AccountSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::AccountSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Department,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Department"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DepartmentSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "DepartmentSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::DepartmentSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Classification,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Classification"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ClassificationSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ClassificationSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::ClassificationSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Location,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Location"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["tranPrefix", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["addrPhone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["logo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["makeInventoryAvailable", "SOAP::SOAPBoolean", [0, 1]],
          ["makeInventoryAvailableStore", "SOAP::SOAPBoolean", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LocationSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LocationSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::LocationSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::UnitsType,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "UnitsType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["uomList", "NetSuite::SOAP::UnitsTypeUomList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::UnitsTypeUom,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "UnitsTypeUom"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]],
          ["pluralName", "SOAP::SOAPString", [0, 1]],
          ["abbreviation", "SOAP::SOAPString", [0, 1]],
          ["pluralAbbreviation", "SOAP::SOAPString", [0, 1]],
          ["conversionRate", "SOAP::SOAPDouble", [0, 1]],
          ["baseUnit", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::UnitsTypeUomList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "UnitsTypeUomList"),
        :schema_element => [
          ["uom", "NetSuite::SOAP::UnitsTypeUom[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["inventoryLocationJoin", "NetSuite::SOAP::LocationSearchBasic", [0, 1]],
          ["preferredLocationJoin", "NetSuite::SOAP::LocationSearchBasic", [0, 1]],
          ["preferredVendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]],
          ["shopperJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ContactRole,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ContactRole"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Bin,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Bin"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["binNumber", "SOAP::SOAPString", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::BinSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "BinSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::BinSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesTaxItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SalesTaxItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["taxType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxAgency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["effectiveFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["validUntil", "SOAP::SOAPDateTime", [0, 1]],
          ["eccode", "SOAP::SOAPBoolean", [0, 1]],
          ["reverseCharge", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["excludeFromTaxReports", "SOAP::SOAPBoolean", [0, 1]],
          ["available", "NetSuite::SOAP::SalesTaxItemAvailable", [0, 1]],
          ["export", "SOAP::SOAPBoolean", [0, 1]],
          ["taxAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["county", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaxGroup,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxGroup"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["taxitem1", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitprice1", "SOAP::SOAPString", [0, 1]],
          ["taxitem2", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitprice2", "SOAP::SOAPString", [0, 1]],
          ["piggyback", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["taxType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["county", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItemList", "NetSuite::SOAP::TaxGroupTaxItemList", [0, 1]],
          ["mess", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaxGroupTaxItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxGroupTaxItem"),
        :schema_element => [
          ["taxName", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["basis", "SOAP::SOAPDouble", [0, 1]],
          ["taxType", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaxGroupTaxItemList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxGroupTaxItemList"),
        :schema_element => [
          ["taxItem", "NetSuite::SOAP::TaxGroupTaxItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaxType,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["nexusesTaxList", "NetSuite::SOAP::TaxTypeNexusesTaxList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaxTypeNexusesTax,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxTypeNexusesTax"),
        :schema_element => [
          ["nexus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["saleTaxAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchTaxAcct", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaxTypeNexusesTaxList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxTypeNexusesTaxList"),
        :schema_element => [
          ["nexusesTax", "NetSuite::SOAP::TaxTypeNexusesTax[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
          ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::SerializedInventoryItemNumbersList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::SerializedInventoryItemLocationsList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItemLocations,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocations"),
        :schema_element => [
          ["location", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["locationId", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItemLocationsList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocationsList"),
        :schema_element => [
          ["locations", "NetSuite::SOAP::SerializedInventoryItemLocations[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItemNumbers,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbers"),
        :schema_element => [
          ["serialNumber", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItemNumbersList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbersList"),
        :schema_element => [
          ["numbers", "NetSuite::SOAP::SerializedInventoryItemNumbers[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
          ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::LotNumberedInventoryItemNumbersList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::LotNumberedInventoryItemLocationsList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItemLocations,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocations"),
        :schema_element => [
          ["location", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["locationId", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["locationlookup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location_display", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItemLocationsList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocationsList"),
        :schema_element => [
          ["locations", "NetSuite::SOAP::LotNumberedInventoryItemLocations[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItemNumbers,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbers"),
        :schema_element => [
          ["serialNumber", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItemNumbersList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbersList"),
        :schema_element => [
          ["numbers", "NetSuite::SOAP::LotNumberedInventoryItemNumbers[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificateItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["liabilityAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["authCodesList", "NetSuite::SOAP::GiftCertificateItemAuthCodesList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateItemAuthCodes,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodes"),
        :schema_element => [
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["used", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateItemAuthCodesList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodesList"),
        :schema_element => [
          ["authCodes", "NetSuite::SOAP::GiftCertificateItemAuthCodes[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Subsidiary,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Subsidiary"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["logo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranPrefix", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["addrPhone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["shipAddr", "SOAP::SOAPString", [0, 1]],
          ["returnAddr", "SOAP::SOAPString", [0, 1]],
          ["returnAddress1", "SOAP::SOAPString", [0, 1]],
          ["returnAddress2", "SOAP::SOAPString", [0, 1]],
          ["returnCity", "SOAP::SOAPString", [0, 1]],
          ["returnState", "SOAP::SOAPString", [0, 1]],
          ["returnCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["returnZip", "SOAP::SOAPString", [0, 1]],
          ["legalName", "SOAP::SOAPString", [0, 1]],
          ["isElimination", "SOAP::SOAPBoolean", [0, 1]],
          ["allowPayroll", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["edition", "SOAP::SOAPString", [0, 1]],
          ["federalIdNumber", "SOAP::SOAPString", [0, 1]],
          ["addrLanguage", "SOAP::SOAPString", [0, 1]],
          ["nonConsol", "SOAP::SOAPString", [0, 1]],
          ["consol", "SOAP::SOAPString", [0, 1]],
          ["shipAddress1", "SOAP::SOAPString", [0, 1]],
          ["shipAddress2", "SOAP::SOAPString", [0, 1]],
          ["shipCity", "SOAP::SOAPString", [0, 1]],
          ["shipState", "SOAP::SOAPString", [0, 1]],
          ["shipCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["shipZip", "SOAP::SOAPString", [0, 1]],
          ["state1TaxNumber", "SOAP::SOAPString", [0, 1]],
          ["ssnOrTin", "SOAP::SOAPString", [0, 1]],
          ["incomeStatement", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balanceSheet", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cashFlow", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["consolidatedIncomeStatement", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["consolidatedBalanceSheet", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["consolidatedCashFlow", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["nexusList", "NetSuite::SOAP::SubsidiaryNexusList", [0, 1]],
          ["checkLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SubsidiaryNexus,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SubsidiaryNexus"),
        :schema_element => [
          ["nexusId", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["country", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SubsidiaryNexusList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SubsidiaryNexusList"),
        :schema_element => [
          ["nexus", "NetSuite::SOAP::SubsidiaryNexus[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SubsidiarySearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SubsidiarySearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SubsidiarySearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GiftCertificate,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificate"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["giftCertCode", "SOAP::SOAPString", [0, 1]],
          ["sender", "SOAP::SOAPString", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
          ["amountRemaining", "SOAP::SOAPDouble", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificateSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::GiftCertificateSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PartnerCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PartnerCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "VendorCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isTaxAgency", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::KitItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "KitItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AssemblyItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "AssemblyItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["costingMethod", "NetSuite::SOAP::ItemCostingMethod", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::InventoryItemLocationsList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SerializedAssemblyItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedAssemblyItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::SerializedInventoryItemLocationsList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::SerializedInventoryItemNumbersList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LotNumberedAssemblyItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedAssemblyItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::LotNumberedInventoryItemLocationsList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::LotNumberedInventoryItemNumbersList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Opportunity,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "Opportunity"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["probability", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["daysOpen", "SOAP::SOAPLong", [0, 1]],
          ["forecastType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["projectedTotal", "SOAP::SOAPDouble", [0, 1]],
          ["rangeLow", "SOAP::SOAPDouble", [0, 1]],
          ["rangeHigh", "SOAP::SOAPDouble", [0, 1]],
          ["projAltSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesRangeLow", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesRangeHigh", "SOAP::SOAPDouble", [0, 1]],
          ["weightedTotal", "SOAP::SOAPDouble", [0, 1]],
          ["actionItem", "SOAP::SOAPString", [0, 1]],
          ["winLossReason", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["closeDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::OpportunitySalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::OpportunityItemList", [0, 1]],
          ["competitorsList", "NetSuite::SOAP::OpportunityCompetitorsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OpportunitySalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OpportunitySalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::OpportunitySalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OpportunityItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OpportunityItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::OpportunityItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OpportunityCompetitors,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityCompetitors"),
        :schema_element => [
          ["competitor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["notes", "SOAP::SOAPString", [0, 1]],
          ["strategy", "SOAP::SOAPString", [0, 1]],
          ["winner", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OpportunityCompetitorsList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityCompetitorsList"),
        :schema_element => [
          ["competitors", "NetSuite::SOAP::OpportunityCompetitors[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OpportunitySearch,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunitySearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["decisionMakerJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["leadSourceJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["salesRepJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesOrder,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrder"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderStatus", "NetSuite::SOAP::SalesOrderOrderStatus", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["actualShipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["payPalStatus", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payPalTranId", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["getAuth", "SOAP::SOAPBoolean", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::SalesOrderSalesTeamList", [0, 1]],
          ["giftCertRedemptionList", "NetSuite::SOAP::GiftCertRedemptionList", [0, 1]],
          ["itemList", "NetSuite::SOAP::SalesOrderItemList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesOrderSalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesOrderSalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::SalesOrderSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesOrderItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["commitInventory", "NetSuite::SOAP::SalesOrderItemCommitInventory", [0, 1]],
          ["licenseCode", "SOAP::SOAPString", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createPo", "NetSuite::SOAP::SalesOrderItemCreatePo", [0, 1]],
          ["createdPo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["poVendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["poCurrency", "SOAP::SOAPString", [0, 1]],
          ["poRate", "SOAP::SOAPDouble", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
          ["quantityPacked", "SOAP::SOAPDouble", [0, 1]],
          ["quantityPicked", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesOrderItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::SalesOrderItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionSearch,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "TransactionSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["accountJoin", "NetSuite::SOAP::AccountSearchBasic", [0, 1]],
          ["appliedToTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["applyingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["billingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["classJoin", "NetSuite::SOAP::ClassificationSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["createdFromJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["departmentJoin", "NetSuite::SOAP::DepartmentSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["fulfillingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["jobJoin", "NetSuite::SOAP::JobSearchBasic", [0, 1]],
          ["leadSourceJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["locationJoin", "NetSuite::SOAP::LocationSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["payingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["purchaseOrderJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["salesRepJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["subsidiaryJoin", "NetSuite::SOAP::SubsidiarySearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillment,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillment"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["shipStatus", "NetSuite::SOAP::ItemFulfillmentShipStatus", [0, 1]],
          ["saturdayDeliveryUps", "SOAP::SOAPBoolean", [0, 1]],
          ["sendShipNotifyEmailUps", "SOAP::SOAPBoolean", [0, 1]],
          ["sendBackupEmailUps", "SOAP::SOAPBoolean", [0, 1]],
          ["shipNotifyEmailAddressUps", "SOAP::SOAPString", [0, 1]],
          ["shipNotifyEmailAddress2Ups", "SOAP::SOAPString", [0, 1]],
          ["backupEmailAddressUps", "SOAP::SOAPString", [0, 1]],
          ["shipNotifyEmailMessageUps", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyAcctUps", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyZipcodeUps", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyCountryUps", "NetSuite::SOAP::Country", [0, 1]],
          ["thirdPartyTypeUps", "NetSuite::SOAP::ItemFulfillmentThirdPartyTypeUps", [0, 1]],
          ["partiesToTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
          ["exportTypeUps", "NetSuite::SOAP::ItemFulfillmentExportTypeUps", [0, 1]],
          ["methodOfTransportUps", "NetSuite::SOAP::ItemFulfillmentMethodOfTransportUps", [0, 1]],
          ["carrierIdUps", "SOAP::SOAPString", [0, 1]],
          ["entryNumberUps", "SOAP::SOAPString", [0, 1]],
          ["inbondCodeUps", "SOAP::SOAPString", [0, 1]],
          ["isRoutedExportTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
          ["licenseNumberUps", "SOAP::SOAPString", [0, 1]],
          ["licenseDateUps", "SOAP::SOAPDateTime", [0, 1]],
          ["licenseExceptionUps", "NetSuite::SOAP::ItemFulfillmentLicenseExceptionUps", [0, 1]],
          ["eccNumberUps", "SOAP::SOAPString", [0, 1]],
          ["recipientTaxIdUps", "SOAP::SOAPString", [0, 1]],
          ["blanketStartDateUps", "SOAP::SOAPDateTime", [0, 1]],
          ["blanketEndDateUps", "SOAP::SOAPDateTime", [0, 1]],
          ["shipmentWeightUps", "SOAP::SOAPDouble", [0, 1]],
          ["saturdayDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["saturdayPickupFedex", "SOAP::SOAPBoolean", [0, 1]],
          ["sendShipNotifyEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["sendBackupEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["signatureHomeDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["shipNotifyEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
          ["backupEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
          ["shipDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
          ["homeDeliveryTypeFedEx", "NetSuite::SOAP::ItemFulfillmentHomeDeliveryTypeFedEx", [0, 1]],
          ["homeDeliveryDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
          ["bookingConfirmationNumFedEx", "SOAP::SOAPString", [0, 1]],
          ["intlExemptionNumFedEx", "SOAP::SOAPString", [0, 1]],
          ["b13aFilingOptionFedEx", "NetSuite::SOAP::ItemFulfillmentB13AFilingOptionFedEx", [0, 1]],
          ["b13aStatementDataFedEx", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyAcctFedEx", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyCountryFedEx", "NetSuite::SOAP::Country", [0, 1]],
          ["thirdPartyTypeFedEx", "NetSuite::SOAP::ItemFulfillmentThirdPartyTypeFedEx", [0, 1]],
          ["shipmentWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["termsOfSaleFedEx", "NetSuite::SOAP::ItemFulfillmentTermsOfSaleFedEx", [0, 1]],
          ["termsFreightChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["termsInsuranceChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["generateIntegratedShipperLabel", "SOAP::SOAPBoolean", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["packageList", "NetSuite::SOAP::ItemFulfillmentPackageList", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["packageUpsList", "NetSuite::SOAP::ItemFulfillmentPackageUpsList", [0, 1]],
          ["packageFedExList", "NetSuite::SOAP::ItemFulfillmentPackageFedExList", [0, 1]],
          ["itemList", "NetSuite::SOAP::ItemFulfillmentItemList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItem"),
        :schema_element => [
          ["jobName", "SOAP::SOAPString", [0, 1]],
          ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
          ["itemName", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["poNum", "SOAP::SOAPString", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::ItemFulfillmentItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackage,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackage"),
        :schema_element => [
          ["packageWeight", "SOAP::SOAPDouble", [0, 1]],
          ["packageDescr", "SOAP::SOAPString", [0, 1]],
          ["packageTrackingNumber", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageList"),
        :schema_element => [
          ["package", "NetSuite::SOAP::ItemFulfillmentPackage[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUps,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUps"),
        :schema_element => [
          ["packageWeightUps", "SOAP::SOAPDouble", [0, 1]],
          ["packageDescrUps", "SOAP::SOAPString", [0, 1]],
          ["packageTrackingNumberUps", "SOAP::SOAPString", [0, 1]],
          ["packagingUps", "NetSuite::SOAP::ItemFulfillmentPackageUpsPackagingUps", [0, 1]],
          ["insuredValueUps", "SOAP::SOAPDouble", [0, 1]],
          ["reference1Ups", "SOAP::SOAPString", [0, 1]],
          ["reference2Ups", "SOAP::SOAPString", [0, 1]],
          ["packageLengthUps", "SOAP::SOAPLong", [0, 1]],
          ["packageWidthUps", "SOAP::SOAPLong", [0, 1]],
          ["packageHeightUps", "SOAP::SOAPLong", [0, 1]],
          ["additionalHandlingUps", "SOAP::SOAPBoolean", [0, 1]],
          ["useCodUps", "SOAP::SOAPBoolean", [0, 1]],
          ["codAmountUps", "SOAP::SOAPDouble", [0, 1]],
          ["codMethodUps", "NetSuite::SOAP::ItemFulfillmentPackageUpsCodMethodUps", [0, 1]],
          ["deliveryConfUps", "NetSuite::SOAP::ItemFulfillmentPackageUpsDeliveryConfUps", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUpsList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsList"),
        :schema_element => [
          ["packageUps", "NetSuite::SOAP::ItemFulfillmentPackageUps[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedEx,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedEx"),
        :schema_element => [
          ["packageWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["packageTrackingNumberFedEx", "SOAP::SOAPString", [0, 1]],
          ["packagingFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExPackagingFedEx", [0, 1]],
          ["admPackageTypeFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExAdmPackageTypeFedEx", [0, 1]],
          ["isNonStandardContainerFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["insuredValueFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["useInsuredValueFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["reference1FedEx", "SOAP::SOAPString", [0, 1]],
          ["packageLengthFedEx", "SOAP::SOAPLong", [0, 1]],
          ["packageWidthFedEx", "SOAP::SOAPLong", [0, 1]],
          ["packageHeightFedEx", "SOAP::SOAPLong", [0, 1]],
          ["useCodFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["codAmountFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["codMethodFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExCodMethodFedEx", [0, 1]],
          ["codFreightTypeFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExCodFreightTypeFedEx", [0, 1]],
          ["deliveryConfFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExDeliveryConfFedEx", [0, 1]],
          ["signatureOptionsFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExSignatureOptionsFedEx", [0, 1]],
          ["signatureReleaseFedEx", "SOAP::SOAPString", [0, 1]],
          ["authorizationNumberFedEx", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExList"),
        :schema_element => [
          ["packageFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedEx[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Invoice,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "Invoice"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
          ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onCreditHold", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["expCostDiscount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemCostDiscount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["timeDiscount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
          ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
          ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
          ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
          ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
          ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
          ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["expCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::InvoiceSalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::InvoiceItemList", [0, 1]],
          ["itemCostList", "NetSuite::SOAP::InvoiceItemCostList", [0, 1]],
          ["giftCertRedemptionList", "NetSuite::SOAP::GiftCertRedemptionList", [0, 1]],
          ["expCostList", "NetSuite::SOAP::InvoiceExpCostList", [0, 1]],
          ["timeList", "NetSuite::SOAP::InvoiceTimeList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceSalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceSalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::InvoiceSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
          ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["licenseCode", "SOAP::SOAPString", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::InvoiceItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceItemCost,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceItemCost"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["itemDisp", "SOAP::SOAPString", [0, 1]],
          ["desc", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["unitDisp", "SOAP::SOAPString", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["count", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceItemCostList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceItemCostList"),
        :schema_element => [
          ["itemCost", "NetSuite::SOAP::InvoiceItemCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceExpCost,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceExpCost"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["employeeDisp", "SOAP::SOAPString", [0, 1]],
          ["categoryDisp", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["taxableDisp", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceExpCostList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceExpCostList"),
        :schema_element => [
          ["expCost", "NetSuite::SOAP::InvoiceExpCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceTime,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceTime"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["employeeDisp", "SOAP::SOAPString", [0, 1]],
          ["itemDisp", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["quantity", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["unitDisp", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["desc", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InvoiceTimeList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceTimeList"),
        :schema_element => [
          ["time", "NetSuite::SOAP::InvoiceTime[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSale,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSale"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payPalStatus", "SOAP::SOAPString", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["payPalTranId", "SOAP::SOAPString", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CashSaleSalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::CashSaleItemList", [0, 1]],
          ["itemCostList", "NetSuite::SOAP::CashSaleItemCostList", [0, 1]],
          ["giftCertRedemptionList", "NetSuite::SOAP::GiftCertRedemptionList", [0, 1]],
          ["expCostList", "NetSuite::SOAP::CashSaleExpCostList", [0, 1]],
          ["timeList", "NetSuite::SOAP::CashSaleTimeList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleSalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleSalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::CashSaleSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["licenseCode", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::CashSaleItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleItemCost,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleItemCost"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["itemDisp", "SOAP::SOAPString", [0, 1]],
          ["desc", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["unitDisp", "SOAP::SOAPString", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["count", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleItemCostList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleItemCostList"),
        :schema_element => [
          ["itemCost", "NetSuite::SOAP::CashSaleItemCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleExpCost,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleExpCost"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["employeeDisp", "SOAP::SOAPString", [0, 1]],
          ["categoryDisp", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["taxableDisp", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleExpCostList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleExpCostList"),
        :schema_element => [
          ["expCost", "NetSuite::SOAP::CashSaleExpCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleTime,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleTime"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["employeeDisp", "SOAP::SOAPString", [0, 1]],
          ["itemDisp", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["quantity", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["unitDisp", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["desc", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashSaleTimeList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleTimeList"),
        :schema_element => [
          ["time", "NetSuite::SOAP::CashSaleTime[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Estimate,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "Estimate"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["probability", "SOAP::SOAPDouble", [0, 1]],
          ["includeInForecast", "SOAP::SOAPBoolean", [0, 1]],
          ["forecastType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["itemList", "NetSuite::SOAP::EstimateItemList", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::EstimateSalesTeamList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EstimateItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "EstimateItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EstimateItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "EstimateItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::EstimateItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EstimateSalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "EstimateSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EstimateSalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "EstimateSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::EstimateSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GiftCertRedemption,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "GiftCertRedemption"),
        :schema_element => [
          ["authCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["authCodeApplied", "SOAP::SOAPDouble", [0, 1]],
          ["authCodeAmtRemaining", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GiftCertRedemptionList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "GiftCertRedemptionList"),
        :schema_element => [
          ["giftCertRedemption", "NetSuite::SOAP::GiftCertRedemption[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LandedCost,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "LandedCost"),
        :schema_element => [
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["source", "NetSuite::SOAP::LandedCostSource", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LandedCostList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostList"),
        :schema_element => [
          ["landedCost", "NetSuite::SOAP::LandedCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorBill,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBill"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["userTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["landedCostMethod", "NetSuite::SOAP::LandedCostMethod", [0, 1]],
          ["expenseList", "NetSuite::SOAP::VendorBillExpenseList", [0, 1]],
          ["itemList", "NetSuite::SOAP::VendorBillItemList", [0, 1]],
          ["landedCostsList", "NetSuite::SOAP::LandedCostList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorBillExpense,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBillExpense"),
        :schema_element => [
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["amortizationSched", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorBillExpenseList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBillExpenseList"),
        :schema_element => [
          ["expense", "NetSuite::SOAP::VendorBillExpense[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorBillItem,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBillItem"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["landedCostCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["amortizationSched", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorBillItemList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBillItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::VendorBillItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrder,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrder"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipTo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["itemList", "NetSuite::SOAP::PurchaseOrderItemList", [0, 1]],
          ["expenseList", "NetSuite::SOAP::PurchaseOrderExpenseList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrderExpense,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpense"),
        :schema_element => [
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrderExpenseList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpenseList"),
        :schema_element => [
          ["expense", "NetSuite::SOAP::PurchaseOrderExpense[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrderItem,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderItem"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["landedCostCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrderItemList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::PurchaseOrderItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemReceipt,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceipt"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["landedCostMethod", "NetSuite::SOAP::LandedCostMethod", [0, 1]],
          ["itemList", "NetSuite::SOAP::ItemReceiptItemList", [0, 1]],
          ["expenseList", "NetSuite::SOAP::ItemReceiptExpenseList", [0, 1]],
          ["landedCostsList", "NetSuite::SOAP::LandedCostList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemReceiptItem,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceiptItem"),
        :schema_element => [
          ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
          ["jobName", "SOAP::SOAPString", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["itemName", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onhand", "SOAP::SOAPDouble", [0, 1]],
          ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["restock", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemReceiptItemList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceiptItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::ItemReceiptItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemReceiptExpense,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceiptExpense"),
        :schema_element => [
          ["markReceived", "SOAP::SOAPBoolean", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["account", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemReceiptExpenseList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceiptExpenseList"),
        :schema_element => [
          ["expense", "NetSuite::SOAP::ItemReceiptExpense[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorPayment,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPayment"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["apAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["address", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["voidJournal", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["toAch", "SOAP::SOAPBoolean", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["printVoucher", "SOAP::SOAPBoolean", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["applyList", "NetSuite::SOAP::VendorPaymentApplyList", [0, 1]],
          ["creditList", "NetSuite::SOAP::VendorPaymentCreditList", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorPaymentApply,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPaymentApply"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["job", "SOAP::SOAPString", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["discDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discAmt", "SOAP::SOAPDouble", [0, 1]],
          ["disc", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorPaymentApplyList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPaymentApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::VendorPaymentApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorPaymentCredit,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPaymentCredit"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["appliedTo", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VendorPaymentCreditList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPaymentCreditList"),
        :schema_element => [
          ["credit", "NetSuite::SOAP::VendorPaymentCredit[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashRefund,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefund"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["refundCheck", "SOAP::SOAPBoolean", [0, 1]],
          ["toPrint2", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["payPalTranId", "SOAP::SOAPString", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["payPalStatus", "SOAP::SOAPString", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCert", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["itemList", "NetSuite::SOAP::CashRefundItemList", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CashRefundSalesTeamList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashRefundItem,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefundItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPString", [0, 1]],
          ["taxRate2", "SOAP::SOAPString", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashRefundItemList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefundItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::CashRefundItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashRefundSalesTeam,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CashRefundSalesTeamList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::CashRefundSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerPayment,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPayment"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["arAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["pending", "SOAP::SOAPDouble", [0, 1]],
          ["payment", "SOAP::SOAPDouble", [0, 1]],
          ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["checkNum", "SOAP::SOAPString", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["applied", "SOAP::SOAPDouble", [0, 1]],
          ["unapplied", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["applyList", "NetSuite::SOAP::CustomerPaymentApplyList", [0, 1]],
          ["creditList", "NetSuite::SOAP::CustomerPaymentCreditList", [0, 1]],
          ["depositList", "NetSuite::SOAP::CustomerPaymentDepositList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentApply,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentApply"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["job", "SOAP::SOAPString", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["discDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discAmt", "SOAP::SOAPDouble", [0, 1]],
          ["disc", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentApplyList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::CustomerPaymentApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentCredit,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentCredit"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["appliedTo", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentCreditList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentCreditList"),
        :schema_element => [
          ["credit", "NetSuite::SOAP::CustomerPaymentCredit[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentDeposit,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentDeposit"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["remaining", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentDepositList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentDepositList"),
        :schema_element => [
          ["deposit", "NetSuite::SOAP::CustomerPaymentDeposit[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorization,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorization"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["orderStatus", "NetSuite::SOAP::ReturnAuthorizationOrderStatus", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCert", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["itemList", "NetSuite::SOAP::ReturnAuthorizationItemList", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::ReturnAuthorizationSalesTeamList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationItem,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationItemList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::ReturnAuthorizationItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationSalesTeam,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationSalesTeamList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::ReturnAuthorizationSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CreditMemo,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemo"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["onCreditHold", "SOAP::SOAPString", [0, 1]],
          ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["unapplied", "SOAP::SOAPDouble", [0, 1]],
          ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
          ["applied", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["giftCert", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CreditMemoSalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::CreditMemoItemList", [0, 1]],
          ["applyList", "NetSuite::SOAP::CreditMemoApplyList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CreditMemoSalesTeam,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CreditMemoSalesTeamList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::CreditMemoSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CreditMemoItem,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumbers", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CreditMemoItemList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::CreditMemoItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CreditMemoApply,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoApply"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["job", "SOAP::SOAPString", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CreditMemoApplyList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::CreditMemoApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerRefund,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefund"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["arAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["address", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["voidJournal", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["applyList", "NetSuite::SOAP::CustomerRefundApplyList", [0, 1]],
          ["depositList", "NetSuite::SOAP::CustomerRefundDepositList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerRefundApply,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefundApply"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerRefundApplyList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefundApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::CustomerRefundApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerRefundDeposit,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefundDeposit"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["remaining", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerRefundDepositList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefundDepositList"),
        :schema_element => [
          ["customerRefundDeposit", "NetSuite::SOAP::CustomerRefundDeposit[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerDeposit,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerDeposit"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payment", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["checkNum", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DepositApplication,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "DepositApplication"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["arAcct", "SOAP::SOAPString", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deposit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["depDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["applied", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["unapplied", "SOAP::SOAPDouble", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["applyList", "NetSuite::SOAP::DepositApplicationApplyList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DepositApplicationApply,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "DepositApplicationApply"),
        :schema_element => [
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["job", "SOAP::SOAPString", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DepositApplicationApplyList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "DepositApplicationApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::DepositApplicationApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LandedCost_,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "LandedCost"),
        :schema_element => [
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["source", "NetSuite::SOAP::LandedCostSource_", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LandedCostList_,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostList"),
        :schema_element => [
          ["landedCost", "NetSuite::SOAP::LandedCost_[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Check,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "Check"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["address", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["voidJournal", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["userTotal", "SOAP::SOAPDouble", [0, 1]],
          ["landedCostMethod", "NetSuite::SOAP::LandedCostMethod_", [0, 1]],
          ["expenseList", "NetSuite::SOAP::CheckExpenseList", [0, 1]],
          ["itemList", "NetSuite::SOAP::CheckItemList", [0, 1]],
          ["landedCostsList", "NetSuite::SOAP::LandedCostList_", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CheckExpense,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "CheckExpense"),
        :schema_element => [
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CheckExpenseList,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "CheckExpenseList"),
        :schema_element => [
          ["expense", "NetSuite::SOAP::CheckExpense[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CheckItem,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "CheckItem"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CheckItemList,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "CheckItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::CheckItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InventoryAdjustment,
        :schema_type => XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustment"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["estimatedTotalValue", "SOAP::SOAPDouble", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["adjLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["inventoryList", "NetSuite::SOAP::InventoryAdjustmentInventoryList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InventoryAdjustmentInventory,
        :schema_type => XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventory"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["currentValue", "SOAP::SOAPDouble", [0, 1]],
          ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["newQuantity", "SOAP::SOAPDouble", [0, 1]],
          ["unitCost", "SOAP::SOAPDouble", [0, 1]],
          ["foreignCurrencyUnitCost", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InventoryAdjustmentInventoryList,
        :schema_type => XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventoryList"),
        :schema_element => [
          ["inventory", "NetSuite::SOAP::InventoryAdjustmentInventory[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JournalEntry,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "JournalEntry"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
          ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
          ["parentExpenseAlloc", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reversalEntry", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approved", "SOAP::SOAPBoolean", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["lineList", "NetSuite::SOAP::JournalEntryLineList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JournalEntryLine,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "JournalEntryLine"),
        :schema_element => [
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debit", "SOAP::SOAPDouble", [0, 1]],
          ["credit", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["schedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["schedulenum", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Acct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::JournalEntryLineList,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "JournalEntryLineList"),
        :schema_element => [
          ["line", "NetSuite::SOAP::JournalEntryLine[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InterCompanyJournalEntry,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntry"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
          ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
          ["parentExpenseAlloc", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reversalEntry", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["toSubsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approved", "SOAP::SOAPBoolean", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lineList", "NetSuite::SOAP::InterCompanyJournalEntryLineList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InterCompanyJournalEntryLine,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLine"),
        :schema_element => [
          ["lineSubsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debit", "SOAP::SOAPDouble", [0, 1]],
          ["credit", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["schedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationSched", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["scheduleNum", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Acct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InterCompanyJournalEntryLineList,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLineList"),
        :schema_element => [
          ["line", "NetSuite::SOAP::InterCompanyJournalEntryLine[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecord,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecord"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customRecordId", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["disclaimer", "SOAP::SOAPString", [0, 1]],
          ["created", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModified", "SOAP::SOAPDateTime", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
          ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
          ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
          ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["numberingInit", "SOAP::SOAPLong", [0, 1]],
          ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
          ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
          ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
          ["includeName", "SOAP::SOAPBoolean", [0, 1]],
          ["showId", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
          ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
          ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
          ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
          ["enablEmailMerge", "SOAP::SOAPBoolean", [0, 1]],
          ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
          ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
          ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
          ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
          ["recordName", "SOAP::SOAPString", [0, 1]],
          ["scriptId", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordSearch,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CustomRecordSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomList"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isMatrixOption", "SOAP::SOAPBoolean", [0, 1]],
          ["scriptId", "SOAP::SOAPString", [0, 1]],
          ["convertToCustomRecord", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["customValueList", "NetSuite::SOAP::CustomListCustomValueList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomListCustomValue,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomListCustomValue"),
        :schema_element => [
          ["value", "SOAP::SOAPString", [0, 1]],
          ["abbreviation", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["valueId", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomListCustomValueList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomListCustomValueList"),
        :schema_element => [
          ["customValue", "NetSuite::SOAP::CustomListCustomValue[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordType,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["recordName", "SOAP::SOAPString", [0, 1]],
          ["includeName", "SOAP::SOAPBoolean", [0, 1]],
          ["showId", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
          ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
          ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
          ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
          ["enableMailMerge", "SOAP::SOAPBoolean", [0, 1]],
          ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
          ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
          ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
          ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["disclaimer", "SOAP::SOAPString", [0, 1]],
          ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
          ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
          ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
          ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
          ["numberingInit", "SOAP::SOAPLong", [0, 1]],
          ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
          ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
          ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
          ["scriptId", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldList", "NetSuite::SOAP::CustomRecordTypeFieldList", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["tabsList", "NetSuite::SOAP::CustomRecordTypeTabsList", [0, 1]],
          ["formsList", "NetSuite::SOAP::CustomRecordTypeFormsList", [0, 1]],
          ["onlineFormsList", "NetSuite::SOAP::CustomRecordTypeOnlineFormsList", [0, 1]],
          ["permissionsList", "NetSuite::SOAP::CustomRecordTypePermissionsList", [0, 1]],
          ["linksList", "NetSuite::SOAP::CustomRecordTypeLinksList", [0, 1]],
          ["managersList", "NetSuite::SOAP::CustomRecordTypeManagersList", [0, 1]],
          ["childrenList", "NetSuite::SOAP::CustomRecordTypeChildrenList", [0, 1]],
          ["parentsList", "NetSuite::SOAP::CustomRecordTypeParentsList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeFieldList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeFieldList"),
        :schema_element => [
          ["customField", "NetSuite::SOAP::CustomRecordCustomField[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeTabs,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTabs"),
        :schema_element => [
          ["tabTitle", "SOAP::SOAPString", [0, 1]],
          ["tabParent", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeTabsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTabsList"),
        :schema_element => [
          ["tabs", "NetSuite::SOAP::CustomRecordTypeTabs[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeForms,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeForms"),
        :schema_element => [
          ["formEdit", "SOAP::SOAPString", [0, 1]],
          ["formName", "SOAP::SOAPString", [0, 1]],
          ["formPref", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeFormsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeFormsList"),
        :schema_element => [
          ["forms", "NetSuite::SOAP::CustomRecordTypeForms[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeOnlineForms,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineForms"),
        :schema_element => [
          ["onlineFormName", "SOAP::SOAPString", [0, 1]],
          ["isOnline", "SOAP::SOAPString", [0, 1]],
          ["templateName", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeOnlineFormsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineFormsList"),
        :schema_element => [
          ["onlineForms", "NetSuite::SOAP::CustomRecordTypeOnlineForms[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypePermissions,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissions"),
        :schema_element => [
          ["permittedRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["permittedLevel", "NetSuite::SOAP::CustomRecordTypePermissionsPermittedLevel", [0, 1]],
          ["restriction", "NetSuite::SOAP::CustomRecordTypePermissionsRestriction", [0, 1]],
          ["defaultForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["restrictForm", "SOAP::SOAPBoolean", [0, 1]],
          ["searchForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["listView", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["listViewRestricted", "SOAP::SOAPBoolean", [0, 1]],
          ["dashboardView", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["restrictDashboardView", "SOAP::SOAPBoolean", [0, 1]],
          ["sublistView", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["restrictSublistView", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypePermissionsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsList"),
        :schema_element => [
          ["permissions", "NetSuite::SOAP::CustomRecordTypePermissions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeLinks,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeLinks"),
        :schema_element => [
          ["linkCenter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkSection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkLabel", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeLinksList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeLinksList"),
        :schema_element => [
          ["links", "NetSuite::SOAP::CustomRecordTypeLinks[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeManagers,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeManagers"),
        :schema_element => [
          ["managerEmp", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeManagersList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeManagersList"),
        :schema_element => [
          ["managers", "NetSuite::SOAP::CustomRecordTypeManagers[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeChildren,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeChildren"),
        :schema_element => [
          ["childDescr", "SOAP::SOAPString", [0, 1]],
          ["childTab", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeChildrenList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeChildrenList"),
        :schema_element => [
          ["children", "NetSuite::SOAP::CustomRecordTypeChildren[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeParents,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeParents"),
        :schema_element => [
          ["childDescr", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeParentsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeParentsList"),
        :schema_element => [
          ["parents", "NetSuite::SOAP::CustomRecordTypeParents[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "EntityCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["appliesToCustomer", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToProject", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToVendor", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToEmployee", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToOtherName", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToContact", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToPartner", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToWebSite", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
          ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::EntityCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "EntityCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "EntityCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::EntityCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FldFilterSelList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "FldFilterSelList"),
        :schema_element => [
          ["fldFilterSel", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CrmCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CrmCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["appliesToTask", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToPhoneCall", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToCase", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToCampaign", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesPerKeyword", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToSolution", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToIssue", "SOAP::SOAPBoolean", [0, 1]],
          ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::CrmCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CrmCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CrmCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CrmCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CrmCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::CrmCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OtherCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "OtherCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["recType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["filterList", "NetSuite::SOAP::OtherCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OtherCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "OtherCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OtherCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "OtherCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::OtherCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemMatrix", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["appliesToInventory", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToNonInventory", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToService", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToOtherCharge", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToKit", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToItemAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["itemSubType", "NetSuite::SOAP::ItemCustomFieldItemSubType", [0, 1]],
          ["filterList", "NetSuite::SOAP::ItemCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::ItemCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionBodyCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["bodyPurchase", "SOAP::SOAPBoolean", [0, 1]],
          ["bodySale", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyOpportunity", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyJournal", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyStore", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyInventoryAdjustment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyAssemblyBuild", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPrintPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyCustomerPayment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyVendorPayment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyDeposit", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyBom", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPrintStatement", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::TransactionBodyCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionBodyCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionBodyCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::TransactionBodyCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionColumnCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["colExpense", "SOAP::SOAPBoolean", [0, 1]],
          ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
          ["colSale", "SOAP::SOAPBoolean", [0, 1]],
          ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
          ["colStore", "SOAP::SOAPBoolean", [0, 1]],
          ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
          ["colJournal", "SOAP::SOAPBoolean", [0, 1]],
          ["colExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
          ["colTime", "SOAP::SOAPBoolean", [0, 1]],
          ["colTimeGroup", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["colPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
          ["colPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
          ["colPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
          ["colReturnForm", "SOAP::SOAPBoolean", [0, 1]],
          ["colStoreWithGroups", "SOAP::SOAPBoolean", [0, 1]],
          ["colGroupOnInvoices", "SOAP::SOAPBoolean", [0, 1]],
          ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::TransactionColumnCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionColumnCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionColumnCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::TransactionColumnCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemOptionCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemOptionCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
          ["colSale", "SOAP::SOAPBoolean", [0, 1]],
          ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
          ["colStore", "SOAP::SOAPBoolean", [0, 1]],
          ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
          ["colAllItems", "SOAP::SOAPBoolean", [0, 1]],
          ["itemsList", "NetSuite::SOAP::ItemsList", [0, 1]],
          ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::ItemOptionCustomFieldFilterList", [0, 1]],
          ["colOptionLabel", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemsList"),
        :schema_element => [
          ["items", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemOptionCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemOptionCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::ItemOptionCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourcefilterby", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recType", "SOAP::SOAPString", [0, 1]],
          ["filterList", "NetSuite::SOAP::CustomRecordCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::CustomRecordCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Employee,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "Employee"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["template", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["initials", "SOAP::SOAPString", [0, 1]],
          ["officePhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingClass", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payFrequency", "NetSuite::SOAP::EmployeePayFrequency", [0, 1]],
          ["lastPaidDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useTimeData", "SOAP::SOAPBoolean", [0, 1]],
          ["usePerquest", "SOAP::SOAPBoolean", [0, 1]],
          ["workplace", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["directDeposit", "SOAP::SOAPBoolean", [0, 1]],
          ["expenseLimit", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseOrderLimit", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseOrderApprovalLimit", "SOAP::SOAPDouble", [0, 1]],
          ["socialSecurityNumber", "SOAP::SOAPString", [0, 1]],
          ["supervisor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approver", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approvalLimit", "SOAP::SOAPDouble", [0, 1]],
          ["timeApprover", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["employeeType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isJobResource", "SOAP::SOAPBoolean", [0, 1]],
          ["laborCost", "SOAP::SOAPDouble", [0, 1]],
          ["birthDate", "SOAP::SOAPDateTime", [0, 1]],
          ["hireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["releaseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastReviewDate", "SOAP::SOAPDateTime", [0, 1]],
          ["nextReviewDate", "SOAP::SOAPDateTime", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["employeeStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["jobDescription", "SOAP::SOAPString", [0, 1]],
          ["purchaseOrderApprover", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["concurrentWebServicesUser", "SOAP::SOAPBoolean", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["hasOfflineAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["inheritIPRules", "SOAP::SOAPBoolean", [0, 1]],
          ["iPAddressRule", ["SOAP::SOAPString", XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "IPAddressRule")], [0, 1]],
          ["commissionPaymentPreference", "NetSuite::SOAP::EmployeeCommissionPaymentPreference", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::EmployeeSubscriptionsList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::EmployeeAddressbookList", [0, 1]],
          ["rolesList", "NetSuite::SOAP::EmployeeRolesList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeeSubscriptions,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeSubscriptions"),
        :schema_element => [
          ["subscribed", "SOAP::SOAPString", [0, 1]],
          ["subscription", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeeSubscriptionsList,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeSubscriptionsList"),
        :schema_element => [
          ["subscriptions", "NetSuite::SOAP::EmployeeSubscriptions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeeAddressbook,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeeAddressbookList,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::EmployeeAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeeRoles,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeRoles"),
        :schema_element => [
          ["selectedRole", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeeRolesList,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeRolesList"),
        :schema_element => [
          ["roles", "NetSuite::SOAP::EmployeeRoles[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeeSearch,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SiteCategory,
        :schema_type => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["website", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["parentCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["categoryListLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemListLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["relatedItemsListLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["presentationItemList", "NetSuite::SOAP::SiteCategoryPresentationItemList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SiteCategoryPresentationItem,
        :schema_type => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItem"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemType", "NetSuite::SOAP::SiteCategoryPresentationItemItemType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["onlinePrice", "SOAP::SOAPDouble", [0, 1]],
          ["basePrice", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SiteCategoryPresentationItemList,
        :schema_type => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItemList"),
        :schema_element => [
          ["presentationItem", "NetSuite::SOAP::SiteCategoryPresentationItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SiteCategorySearch,
        :schema_type => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategorySearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SiteCategorySearchBasic", [0, 1]],
          ["shopperJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TimeBill,
        :schema_type => XSD::QName.new(NsEmployees_2008_1TransactionsWebservicesNetsuiteCom, "TimeBill"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["caseTaskEvent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["payrollItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["paidExternally", "SOAP::SOAPBoolean", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsEmployees_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["hours", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TimeBillSearch,
        :schema_type => XSD::QName.new(NsEmployees_2008_1TransactionsWebservicesNetsuiteCom, "TimeBillSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TimeBillSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Campaign,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "Campaign"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["campaignId", "SOAP::SOAPString", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["baseCost", "SOAP::SOAPDouble", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["expectedRevenue", "SOAP::SOAPDouble", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["local", "SOAP::SOAPBoolean", [0, 1]],
          ["totalRevenue", "SOAP::SOAPDouble", [0, 1]],
          ["roi", "SOAP::SOAPDouble", [0, 1]],
          ["profit", "SOAP::SOAPDouble", [0, 1]],
          ["costPerCustomer", "SOAP::SOAPDouble", [0, 1]],
          ["convCostPerCustomer", "SOAP::SOAPDouble", [0, 1]],
          ["conversions", "SOAP::SOAPLong", [0, 1]],
          ["leadsGenerated", "SOAP::SOAPLong", [0, 1]],
          ["uniqueVisitors", "SOAP::SOAPLong", [0, 1]],
          ["vertical", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["audience", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["offer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["promotionCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["family", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["searchEngine", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["keyword", "SOAP::SOAPString", [0, 1]],
          ["campaignEmailList", "NetSuite::SOAP::CampaignEmailList", [0, 1]],
          ["campaignDirectMailList", "NetSuite::SOAP::CampaignDirectMailList", [0, 1]],
          ["campaignEventList", "NetSuite::SOAP::CampaignEventList", [0, 1]],
          ["eventResponseList", "NetSuite::SOAP::CampaignEventResponseList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignEmail,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEmail"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["campaignGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["template", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["subscription", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["channel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["status", "NetSuite::SOAP::CampaignCampaignEmailStatus", [0, 1]],
          ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignEmailList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEmailList"),
        :schema_element => [
          ["campaignEmail", "NetSuite::SOAP::CampaignEmail[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignDirectMail,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignDirectMail"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["campaignGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["template", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["subscription", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["channel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["status", "NetSuite::SOAP::CampaignCampaignDirectMailStatus", [0, 1]],
          ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignDirectMailList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignDirectMailList"),
        :schema_element => [
          ["campaignDirectMail", "NetSuite::SOAP::CampaignDirectMail[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignEvent,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEvent"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["campaignGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["subscription", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["channel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["status", "NetSuite::SOAP::CampaignCampaignEventStatus", [0, 1]],
          ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignEventList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEventList"),
        :schema_element => [
          ["campaignEvent", "NetSuite::SOAP::CampaignEvent[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignEventResponse,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEventResponse"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["dateSent", "SOAP::SOAPDateTime", [0, 1]],
          ["sent", "SOAP::SOAPDouble", [0, 1]],
          ["opened", "SOAP::SOAPDouble", [0, 1]],
          ["openedRatio", "SOAP::SOAPDouble", [0, 1]],
          ["clickThru", "SOAP::SOAPDouble", [0, 1]],
          ["clickThruRatio", "SOAP::SOAPDouble", [0, 1]],
          ["responded", "SOAP::SOAPLong", [0, 1]],
          ["unsubscribed", "SOAP::SOAPLong", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignEventResponseList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEventResponseList"),
        :schema_element => [
          ["eventResponse", "NetSuite::SOAP::CampaignEventResponse[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignSearch,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["campaignRecipientJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignCategory,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isexternal", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignAudience,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignAudience"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignFamily,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignFamily"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignSearchEngine,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignSearchEngine"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignChannel,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignChannel"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["eventType", "NetSuite::SOAP::CampaignChannelEventType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignOffer,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignOffer"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignResponse,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponse"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["campaignEvent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["campaignResponseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["channel", "SOAP::SOAPString", [0, 1]],
          ["response", "NetSuite::SOAP::CampaignResponseResponse", [0, 1]],
          ["note", "SOAP::SOAPString", [0, 1]],
          ["responsesList", "NetSuite::SOAP::CampaignResponseResponsesList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignResponseResponses,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponseResponses"),
        :schema_element => [
          ["response", "SOAP::SOAPString", [0, 1]],
          ["responseDate", "SOAP::SOAPString", [0, 1]],
          ["author", "SOAP::SOAPString", [0, 1]],
          ["note", "SOAP::SOAPString", [0, 1]]
        ]
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignResponseResponsesList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponseResponsesList"),
        :schema_element => [
          ["responses", "NetSuite::SOAP::CampaignResponseResponses[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignVertical,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignVertical"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignSubscription,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignSubscription"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["unsubscribed", "SOAP::SOAPBoolean", [0, 1]],
          ["externalName", "SOAP::SOAPString", [0, 1]],
          ["externalDescription", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::RecordType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "RecordType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetAllRecordType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "GetAllRecordType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "GetCustomizationType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InitializeType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "InitializeType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::InitializeRefType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "InitializeRefType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::DeletedRecordType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "DeletedRecordType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "GetSelectValueType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "AsyncStatusType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchStringFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchStringFieldOperator")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchLongFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchLongFieldOperator")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchTextNumberFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchTextNumberFieldOperator")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchDoubleFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDoubleFieldOperator")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchDateFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDateFieldOperator")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchEnumMultiSelectFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectFieldOperator")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchMultiSelectFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectFieldOperator")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SearchDate,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDate")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::StatusDetailType,
        :schema_type => XSD::QName.new(NsTypesFaults_2008_1PlatformWebservicesNetsuiteCom, "StatusDetailType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::StatusDetailCodeType,
        :schema_type => XSD::QName.new(NsTypesFaults_2008_1PlatformWebservicesNetsuiteCom, "StatusDetailCodeType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FaultCodeType,
        :schema_type => XSD::QName.new(NsTypesFaults_2008_1PlatformWebservicesNetsuiteCom, "FaultCodeType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Country,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "Country")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Language,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "Language")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::State,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "State")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::StateAbbreviation,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "StateAbbreviation")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AvsMatchCode,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "AvsMatchCode")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CostingMethod,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "CostingMethod")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VsoeDeferral,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "VsoeDeferral")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::VsoePermitDiscount,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "VsoePermitDiscount")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PostingPeriodDate,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "PostingPeriodDate")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PermissionLevel,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "PermissionLevel")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::Source,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "Source")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAccessLevel,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAccessLevel")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAttendeeAttendance,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeAttendance")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAttendeeResponse,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeResponse")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventFrequency,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventFrequency")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventDow,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventDow")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventDowim,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventDowim")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventReminderMinutes,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderMinutes")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventReminderType,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CalendarEventStatus,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaskPriority,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskPriority")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaskReminderMinutes,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskReminderMinutes")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaskReminderType,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskReminderType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaskStatus,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PhoneCallPriority,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallPriority")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PhoneCallReminderMinutes,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderMinutes")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PhoneCallReminderType,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::PhoneCallStatus,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::NoteDirection,
        :schema_type => XSD::QName.new(NsTypesCommunication_2008_1GeneralWebservicesNetsuiteCom, "NoteDirection")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::MessageMessageType,
        :schema_type => XSD::QName.new(NsTypesCommunication_2008_1GeneralWebservicesNetsuiteCom, "MessageMessageType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::MediaType,
        :schema_type => XSD::QName.new(NsTypesFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "MediaType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FileAttachFrom,
        :schema_type => XSD::QName.new(NsTypesFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileAttachFrom")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::FileEncoding,
        :schema_type => XSD::QName.new(NsTypesFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileEncoding")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerStatusStage,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerStatusStage")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ContactType,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerStage,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerStage")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomerCreditHoldOverride,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerCreditHoldOverride")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmailPreference,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EmailPreference")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityGroupType,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityGroupDailyTime,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupDailyTime")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityGroupDefView,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupDefView")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EntityGroupPeriodSize,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupPeriodSize")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaxFractionUnit,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "TaxFractionUnit")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TaxRounding,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "TaxRounding")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseStatusStage,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseStatusStage")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SupportCaseStage,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseStage")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SolutionStatus,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::IssueEventStatus,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "IssueEventStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::IssueTrackCode,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "IssueTrackCode")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CurrencyLocale,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "CurrencyLocale")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::AccountType,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "AccountType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemCostingMethod,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemCostingMethod")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemProductFeed,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemProductFeed")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemType,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemWeightUnit,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemWeightUnit")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemPreferenceCriterion,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemPreferenceCriterion")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemOverallQuantityPricingType,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemOverallQuantityPricingType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ScheduleBCode,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ScheduleBCode")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemSubType,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemSubType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CurrencyCurrencyPrecision,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "CurrencyCurrencyPrecision")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesTaxItemAvailable,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "SalesTaxItemAvailable")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemEbayAuctionDuration,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemEbayAuctionDuration")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemOutOfStockBehavior,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemOutOfStockBehavior")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemEbayRelistingOption,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemEbayRelistingOption")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ConsolidatedRate,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ConsolidatedRate")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesOrderItemCommitInventory,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemCommitInventory")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesOrderItemCreatePo,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemCreatePo")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SalesOrderOrderStatus,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderOrderStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentExportTypeUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentExportTypeUps")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentLicenseExceptionUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentLicenseExceptionUps")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentMethodOfTransportUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentMethodOfTransportUps")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentThirdPartyTypeUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeUps")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUpsCodMethodUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsCodMethodUps")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUpsDeliveryConfUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsDeliveryConfUps")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUpsPackagingUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsPackagingUps")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentB13AFilingOptionFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentB13AFilingOptionFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentHomeDeliveryTypeFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentHomeDeliveryTypeFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentThirdPartyTypeFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExAdmPackageTypeFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExAdmPackageTypeFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExCodMethodFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodMethodFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExDeliveryConfFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExDeliveryConfFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExPackagingFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExPackagingFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExSignatureOptionsFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExSignatureOptionsFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentTermsOfSaleFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentTermsOfSaleFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentShipStatus,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::OpportunityStatus,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionType,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "TransactionType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionStatus,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "TransactionStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExCodFreightTypeFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodFreightTypeFedEx")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::TransactionLinkType,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "TransactionLinkType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LandedCostSource,
        :schema_type => XSD::QName.new(NsTypesPurchases_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostSource")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LandedCostMethod,
        :schema_type => XSD::QName.new(NsTypesPurchases_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostMethod")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationOrderStatus,
        :schema_type => XSD::QName.new(NsTypesCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationOrderStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LandedCostSource_,
        :schema_type => XSD::QName.new(NsTypesBank_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostSource")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::LandedCostMethod_,
        :schema_type => XSD::QName.new(NsTypesBank_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostMethod")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomizationFieldType,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomizationFieldType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomizationDynamicDefault,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomizationDynamicDefault")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomizationDisplayType,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomizationDisplayType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomizationFilterCompareType,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomizationFilterCompareType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypePermissionsPermittedLevel,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsPermittedLevel")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypePermissionsRestriction,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsRestriction")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::ItemCustomFieldItemSubType,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemCustomFieldItemSubType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeePayFrequency,
        :schema_type => XSD::QName.new(NsTypesEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeePayFrequency")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::EmployeeCommissionPaymentPreference,
        :schema_type => XSD::QName.new(NsTypesEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeCommissionPaymentPreference")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::SiteCategoryPresentationItemItemType,
        :schema_type => XSD::QName.new(NsTypesWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItemItemType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignCampaignDirectMailStatus,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCampaignDirectMailStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignCampaignEmailStatus,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCampaignEmailStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignCampaignEventStatus,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCampaignEventStatus")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignChannelEventType,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignChannelEventType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignResponseResponse,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponseResponse")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignCampaignEventType,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCampaignEventType")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignResponse_,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponse")
      )

      EncodedRegistry.register(
        :class => NetSuite::SOAP::CampaignStatus,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Passport,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Passport"),
        :schema_element => [
          ["email", "SOAP::SOAPString"],
          ["password", "SOAP::SOAPString"],
          ["account", "SOAP::SOAPString"],
          ["role", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SsoCredentials,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SsoCredentials"),
        :schema_element => [
          ["email", "SOAP::SOAPString"],
          ["password", "SOAP::SOAPString"],
          ["account", "SOAP::SOAPString"],
          ["role", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["authenticationToken", "SOAP::SOAPString"],
          ["partnerId", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ChangePasswordOrEmailCredentials,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailCredentials"),
        :schema_element => [
          ["currentPassword", "SOAP::SOAPString"],
          ["newEmail", "SOAP::SOAPString"],
          ["newEmail2", "SOAP::SOAPString"],
          ["newPassword", "SOAP::SOAPString", [0, 1]],
          ["newPassword2", "SOAP::SOAPString", [0, 1]],
          ["justThisAccount", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::StatusDetail,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "StatusDetail"),
        :schema_element => [
          ["code", "NetSuite::SOAP::StatusDetailCodeType"],
          ["message", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "type") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Status,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Status"),
        :schema_element => [
          ["statusDetail", "NetSuite::SOAP::StatusDetail[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "isSuccess") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::WsRole,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "WsRole"),
        :schema_element => [
          ["role", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::WsRoleList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "WsRoleList"),
        :schema_element => [
          ["wsRole", "NetSuite::SOAP::WsRole[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NullField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "NullField"),
        :schema_element => [
          ["name", "SOAP::SOAPString[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["pageSize", "SOAP::SOAPInt", [0, 1]],
          ["totalPages", "SOAP::SOAPInt", [0, 1]],
          ["pageIndex", "SOAP::SOAPInt", [0, 1]],
          ["recordList", "NetSuite::SOAP::RecordList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AsyncStatusResult"),
        :schema_element => [
          ["jobId", "SOAP::SOAPString"],
          ["status", "NetSuite::SOAP::AsyncStatusType"],
          ["percentCompleted", "SOAP::SOAPDouble"],
          ["estRemainingDuration", "SOAP::SOAPDouble"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAllResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetAllResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["recordList", "NetSuite::SOAP::RecordList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetCustomizationResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["recordList", "NetSuite::SOAP::RecordList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["recordRefList", "NetSuite::SOAP::RecordRefList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::RecordList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "RecordList"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::RecordRefList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "RecordRefList"),
        :schema_element => [
          ["recordRef", "NetSuite::SOAP::RecordRef[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::RecordRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "RecordRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "BaseRef"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "type") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomRecordRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "BaseRef"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeRecord,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "InitializeRecord"),
        :schema_element => [
          ["type", "NetSuite::SOAP::InitializeType"],
          ["reference", "NetSuite::SOAP::InitializeRef"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "InitializeRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "BaseRef"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "type") => "SOAP::SOAPString",
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAllRecord,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetAllRecord"),
        :schema_element => [],
        :schema_attribute => {
          XSD::QName.new(nil, "recordType") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomizationType,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomizationType"),
        :schema_element => [],
        :schema_attribute => {
          XSD::QName.new(nil, "getCustomizationType") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetSelectValueField"),
        :schema_element => [
          ["searchCriteria", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "fieldType") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ListOrRecordRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ListOrRecordRef"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "typeId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LongCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "LongCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPLong"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DoubleCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "DoubleCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPDouble"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::BooleanCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "BooleanCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPBoolean"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::StringCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "StringCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPString"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DateCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "DateCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "SOAP::SOAPDateTime"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SelectCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SelectCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "NetSuite::SOAP::ListOrRecordRef"]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MultiSelectCustomFieldRef,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "MultiSelectCustomFieldRef"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldRef"),
        :schema_element => [
          ["value", "NetSuite::SOAP::ListOrRecordRef[]", [1, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomFieldList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "CustomFieldList"),
        :schema_element => [
          ["customField", "NetSuite::SOAP::CustomFieldRef[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchBooleanField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchBooleanField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchStringField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchStringField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchLongField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchLongField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPLong", [0, 1]],
          ["searchValue2", "SOAP::SOAPLong", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchTextNumberField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchTextNumberField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString", [0, 1]],
          ["searchValue2", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchDoubleField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDoubleField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPDouble", [0, 1]],
          ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchDateField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDateField"),
        :schema_element => [
          ["predefinedSearchValue", "NetSuite::SOAP::SearchDate", [0, 1]],
          ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
          ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchEnumMultiSelectField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchMultiSelectField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectField"),
        :schema_element => [
          ["searchValue", "NetSuite::SOAP::RecordRef[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchBooleanCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchBooleanCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchStringCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchStringCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchLongCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchLongCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPLong", [0, 1]],
          ["searchValue2", "SOAP::SOAPLong", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchDoubleCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDoubleCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPDouble", [0, 1]],
          ["searchValue2", "SOAP::SOAPDouble", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchDateCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDateCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["predefinedSearchValue", "NetSuite::SOAP::SearchDate", [0, 1]],
          ["searchValue", "SOAP::SOAPDateTime", [0, 1]],
          ["searchValue2", "SOAP::SOAPDateTime", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchEnumMultiSelectCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "SOAP::SOAPString[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchMultiSelectCustomField,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomField"),
        :schema_element => [
          ["searchValue", "NetSuite::SOAP::ListOrRecordRef[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "operator") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchCustomFieldList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchCustomFieldList"),
        :schema_element => [
          ["customField", "NetSuite::SOAP::SearchCustomField[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemAvailabilityFilter,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ItemAvailabilityFilter"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRefList"],
          ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemAvailability,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ItemAvailability"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef"],
          ["lastQtyAvailableChange", "SOAP::SOAPDateTime", [0, 1]],
          ["locationId", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemAvailabilityList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "ItemAvailabilityList"),
        :schema_element => [
          ["itemAvailability", "NetSuite::SOAP::ItemAvailability[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetItemAvailabilityResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["itemAvailabilityList", "NetSuite::SOAP::ItemAvailabilityList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeletedRecord,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "DeletedRecord"),
        :schema_element => [
          ["deletedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["record", "NetSuite::SOAP::BaseRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeletedRecordList,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "DeletedRecordList"),
        :schema_element => [
          ["deletedRecord", "NetSuite::SOAP::DeletedRecord[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetDeletedResult,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetDeletedResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["deletedRecordList", "NetSuite::SOAP::DeletedRecordList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetDeletedFilter,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "GetDeletedFilter"),
        :schema_element => [
          ["deletedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AttachContactReference,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AttachContactReference"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AttachReference"),
        :schema_element => [
          ["attachTo", "NetSuite::SOAP::BaseRef"],
          ["contact", "NetSuite::SOAP::RecordRef"],
          ["contactRole", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AttachBasicReference,
        :schema_type => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AttachBasicReference"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "AttachReference"),
        :schema_element => [
          ["attachTo", "NetSuite::SOAP::BaseRef"],
          ["attachedRecord", "NetSuite::SOAP::BaseRef"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SoapFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InsufficientPermissionFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InsufficientPermissionFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvalidAccountFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InvalidAccountFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvalidCredentialsFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InvalidCredentialsFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvalidSessionFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InvalidSessionFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExceededRequestLimitFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "ExceededRequestLimitFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExceededUsageLimitFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "ExceededUsageLimitFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExceededRecordCountFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "ExceededRecordCountFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvalidVersionFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "InvalidVersionFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExceededRequestSizeFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "ExceededRequestSizeFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "AsyncFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UnexpectedErrorFault,
        :schema_type => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "UnexpectedErrorFault"),
        :schema_basetype => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "SoapFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SessionInfo,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SessionInfo"),
        :schema_element => [
          ["userId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ApplicationInfo,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ApplicationInfo"),
        :schema_element => [
          ["applicationId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerInfo,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "PartnerInfo"),
        :schema_element => [
          ["partnerId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DocumentInfo,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DocumentInfo"),
        :schema_element => [
          ["nsId", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Preferences,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "Preferences"),
        :schema_element => [
          ["warningAsError", "SOAP::SOAPBoolean", [0, 1]],
          ["useConditionalDefaultsOnAdd", "SOAP::SOAPBoolean", [0, 1]],
          ["useConditionalDefaultsOnUpdate", "SOAP::SOAPBoolean", [0, 1]],
          ["disableMandatoryCustomFieldValidation", "SOAP::SOAPBoolean", [0, 1]],
          ["disableSystemNotesForCustomFields", "SOAP::SOAPBoolean", [0, 1]],
          ["ignoreReadOnlyFields", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchPreferences,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchPreferences"),
        :schema_element => [
          ["bodyFieldsOnly", "SOAP::SOAPBoolean", [0, 1]],
          ["pageSize", "SOAP::SOAPInt", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SessionResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SessionResponse"),
        :schema_element => [
          ["status", ["NetSuite::SOAP::Status", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status")]],
          ["wsRoleList", ["NetSuite::SOAP::WsRoleList", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "wsRoleList")], [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::WriteResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "WriteResponse"),
        :schema_element => [
          ["status", ["NetSuite::SOAP::Status", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status")]],
          ["baseRef", "NetSuite::SOAP::BaseRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReadResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ReadResponse"),
        :schema_element => [
          ["status", ["NetSuite::SOAP::Status", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status")]],
          ["record", "NetSuite::SOAP::Record", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::WriteResponseList,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "WriteResponseList"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReadResponseList,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ReadResponseList"),
        :schema_element => [
          ["readResponse", "NetSuite::SOAP::ReadResponse[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LoginResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "LoginResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MapSsoResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "MapSsoResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ChangePasswordOrEmailResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LogoutResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "LogoutResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AddResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AddResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AddListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AddListResponse"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UpdateResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "UpdateResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UpdateListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "UpdateListResponse"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeleteResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DeleteResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeleteListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DeleteListResponse"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchResponse"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchMoreResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchMoreResponse"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchNextResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchNextResponse"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetResponse"),
        :schema_element => [
          ["readResponse", "NetSuite::SOAP::ReadResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetListResponse"),
        :schema_element => [
          ["readResponseList", "NetSuite::SOAP::ReadResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAllResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetAllResponse"),
        :schema_element => [
          ["getAllResult", ["NetSuite::SOAP::GetAllResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getAllResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetCustomizationResponse"),
        :schema_element => [
          ["getCustomizationResult", ["NetSuite::SOAP::GetCustomizationResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getCustomizationResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "InitializeResponse"),
        :schema_element => [
          ["readResponse", "NetSuite::SOAP::ReadResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeListResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "InitializeListResponse"),
        :schema_element => [
          ["readResponseList", "NetSuite::SOAP::ReadResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueResponse"),
        :schema_element => [
          ["getSelectValueResult", ["NetSuite::SOAP::GetSelectValueResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetItemAvailabilityResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityResponse"),
        :schema_element => [
          ["getItemAvailabilityResult", ["NetSuite::SOAP::GetItemAvailabilityResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AttachResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AttachResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DetachResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DetachResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncStatusResponse"),
        :schema_element => [
          ["asyncStatusResult", ["NetSuite::SOAP::AsyncStatusResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAsyncResultResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetAsyncResultResponse"),
        :schema_element => [
          ["asyncResult", "NetSuite::SOAP::AsyncResult"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncAddListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncAddListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncUpdateListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncUpdateListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncDeleteListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncDeleteListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncGetListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncGetListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["readResponseList", "NetSuite::SOAP::ReadResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncSearchResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncSearchResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncInitializeListResult,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncInitializeListResult"),
        :schema_basetype => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetDeletedResponse,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetDeletedResponse"),
        :schema_element => [
          ["getDeletedResult", ["NetSuite::SOAP::GetDeletedResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getDeletedResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LoginRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "LoginRequest"),
        :schema_element => [
          ["passport", "NetSuite::SOAP::Passport"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MapSsoRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "MapSsoRequest"),
        :schema_element => [
          ["ssoCredentials", "NetSuite::SOAP::SsoCredentials"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ChangePasswordOrEmailRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "ChangePasswordOrEmailRequest"),
        :schema_element => [
          ["changePasswordOrEmailCredentials", "NetSuite::SOAP::ChangePasswordOrEmailCredentials"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LogoutRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "LogoutRequest"),
        :schema_element => []
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AddRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AddRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeleteRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DeleteRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchRequest"),
        :schema_element => [
          ["searchRecord", "NetSuite::SOAP::SearchRecord"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchMoreRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchMoreRequest"),
        :schema_element => [
          ["pageIndex", "SOAP::SOAPInt"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchNextRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "SearchNextRequest"),
        :schema_element => []
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UpdateRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "UpdateRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AddListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AddListRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeleteListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DeleteListRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UpdateListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "UpdateListRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetListRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAllRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetAllRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::GetAllRecord"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetCustomizationRequest"),
        :schema_element => [
          ["customizationType", "NetSuite::SOAP::CustomizationType"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "InitializeRequest"),
        :schema_element => [
          ["initializeRecord", "NetSuite::SOAP::InitializeRecord"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "InitializeListRequest"),
        :schema_element => [
          ["initializeRecord", "NetSuite::SOAP::InitializeRecord[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueRequest"),
        :schema_element => [
          ["fieldName", "NetSuite::SOAP::GetSelectValueField"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetItemAvailabilityRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetItemAvailabilityRequest"),
        :schema_element => [
          ["itemAvailabilityFilter", "NetSuite::SOAP::ItemAvailabilityFilter"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AttachRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AttachRequest"),
        :schema_element => [
          ["attachReferece", "NetSuite::SOAP::AttachReference"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DetachRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "DetachRequest"),
        :schema_element => [
          ["attachReferece", "NetSuite::SOAP::AttachReference"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncAddListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncAddListRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncUpdateListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncUpdateListRequest"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncDeleteListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncDeleteListRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncGetListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncGetListRequest"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncInitializeListRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncInitializeListRequest"),
        :schema_element => [
          ["initializeRecord", "NetSuite::SOAP::InitializeRecord[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncSearchRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "AsyncSearchRequest"),
        :schema_element => [
          ["searchRecord", "NetSuite::SOAP::SearchRecord"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CheckAsyncStatusRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "CheckAsyncStatusRequest"),
        :schema_element => [
          ["jobId", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAsyncResultRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetAsyncResultRequest"),
        :schema_element => [
          ["jobId", "SOAP::SOAPString"],
          ["pageIndex", "SOAP::SOAPInt"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetDeletedRequest,
        :schema_type => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "GetDeletedRequest"),
        :schema_element => [
          ["getDeletedFilter", "NetSuite::SOAP::GetDeletedFilter"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ShipAddress,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "ShipAddress"),
        :schema_element => [
          ["shipAttention", "SOAP::SOAPString", [0, 1]],
          ["shipAddressee", "SOAP::SOAPString", [0, 1]],
          ["shipPhone", "SOAP::SOAPString", [0, 1]],
          ["shipAddr1", "SOAP::SOAPString", [0, 1]],
          ["shipAddr2", "SOAP::SOAPString", [0, 1]],
          ["shipCity", "SOAP::SOAPString", [0, 1]],
          ["shipState", "SOAP::SOAPString", [0, 1]],
          ["shipZip", "SOAP::SOAPString", [0, 1]],
          ["shipCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["shipIsResidential", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::BillAddress,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "BillAddress"),
        :schema_element => [
          ["billAttention", "SOAP::SOAPString", [0, 1]],
          ["billAddressee", "SOAP::SOAPString", [0, 1]],
          ["billPhone", "SOAP::SOAPString", [0, 1]],
          ["billAddr1", "SOAP::SOAPString", [0, 1]],
          ["billAddr2", "SOAP::SOAPString", [0, 1]],
          ["billCity", "SOAP::SOAPString", [0, 1]],
          ["billState", "SOAP::SOAPString", [0, 1]],
          ["billZip", "SOAP::SOAPString", [0, 1]],
          ["billCountry", "NetSuite::SOAP::Country", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntitySearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "EntitySearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "ContactSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["availableOffline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["company", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["contactRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["employer", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasDuplicates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPrivate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "CustomerSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["accountNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["availableOffline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["balance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["boughtAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["boughtDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["ccCustomerCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccDefault", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["ccExpDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["ccHolderName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["classBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["companyName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["creditHoldOverride", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["creditLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["currency", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["custStage", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["custStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateClosed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["daysOverdue", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["depositBalance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["deptBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstOrderDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["firstSaleDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasDuplicates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPerson", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isReportedLead", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isShipAddress", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["itemsBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["itemsOrdered", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["leadDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["leadSource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["locationBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["manualCreditHold", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["merchantAccount", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["onCreditHold", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["orderedAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["orderedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["overdueBalance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["parentItemsBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["parentItemsOrdered", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerContribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partnerRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["pec", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["prospectDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["pstExempt", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["reminderDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["resaleNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["role", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesRep", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipComplete", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shippingItem", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["stage", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidBought", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["terms", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["territory", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["unbilledOrders", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["url", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["vatregnumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["webLead", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "CalendarEventSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["attendee", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["calendar", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["completedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["instanceStart", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isUpcomingEvent", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["organizer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["resource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["response", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaskSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "TaskSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["actualTime", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["company", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["completedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["estimatedTime", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["estimatedTimeOverride", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isJobSummaryTask", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isJobTask", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPrivate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["milestone", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["percentComplete", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["percentTimeComplete", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["priority", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["timeRemaining", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunitySearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "OpportunitySearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["amount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["availableOffline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["closeDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["competitor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["contribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["currencyName", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["custType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["daysOpen", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["daysToClose", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["entity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["expectedCloseDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["forecastType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["leadSource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["memo", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerContribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partnerRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriodRelative", "NetSuite::SOAP::PostingPeriodDate", [0, 1]],
          ["probability", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["projAltSalesAmt", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["projectedTotal", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["rangeHigh", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["rangeHighAlt", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["rangeLow", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["rangeLowAlt", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["salesRep", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["tranDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["tranId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["winLossReason", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["wonBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "EmployeeSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["alienNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["anniversary", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["approvalLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["approver", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["authworkDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["billingClass", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["birthDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["birthDay", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["cContribution", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["concurrentWebServicesUser", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["deduction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["earning", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["education", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["eligibleForCommission", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["employeeStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["employeeType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["employeeTypeKpi", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ethnicity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["expenseLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["gender", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hireDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["i9Verified", ["NetSuite::SOAP::SearchBooleanField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "I9Verified")], [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isJobResource", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isTemplate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["jobDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["laborCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["lastPaidDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastReviewDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["maritalStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nextReviewDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["offlineAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["payFrequency", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["permChangeDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["primaryEarningAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["primaryEarningItem", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["primaryEarningType", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["purchaseOrderApprovalLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["purchaseOrderApprover", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["purchaseOrderLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["releaseDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["residentStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["role", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["roleChange", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["roleChangeDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["salesRep", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["salesRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["socialSecurityNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["supervisor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["supportRep", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["timeApprover", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["usePerquest", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["useTimeData", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["visaExpDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["visaType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["withholding", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["workplace", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCallSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "PhoneCallSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["company", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["completedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["createdBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isPrivate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["priority", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "SupportCaseSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["awaitingReply", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["caseNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["closedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["company", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["escalateTo", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["helpDesk", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["inboundEmail", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["issue", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastMessage", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastReopenedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["locked", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["message", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["messageAuthor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["messageDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["messageType", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["v_module", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["origin", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["priority", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["product", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["serialNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["stage", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MessageSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "MessageSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["author", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["authorEmail", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["bcc", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["cc", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasAttachment", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["internalOnly", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["message", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["messageDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["messageType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["recipient", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["recipientEmail", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subject", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NoteSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "NoteSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["author", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["direction", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["note", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["noteDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["noteType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "CustomRecordSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["recType", "NetSuite::SOAP::RecordRef"],
          ["availableOffline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["created", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["id", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModified", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastModifiedBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AccountSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "AccountSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["balance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::BinSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "BinSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["binNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["inactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["memo", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DepartmentSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "DepartmentSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nameNoHierarchy", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LocationSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "LocationSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isOffice", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["makeInventoryAvailable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["makeInventoryAvailableStore", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nameNoHierarchy", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["zip", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ClassificationSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "ClassificationSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nameNoHierarchy", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "TransactionSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["account", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["accountType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["actualShipDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["altSalesAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["altSalesNetAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["amount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["amountPaid", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["amountRemaining", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["anyLineItem", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["appliedToLinkAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["appliedToLinkType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["appliedToTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["applyingLinkAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["applyingLinkType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["applyingTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["billable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["billAddress", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billAddressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billAttention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billCity", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billCountry", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["billCounty", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["billingStatus", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["billingTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["billPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billState", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["billZip", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["buildEntireAssembly", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["buildVariance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["ccCustomerCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccExpireDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["ccName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ccNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["cleared", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["closed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["closeDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["cogs", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["commissionEffectiveDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["commit", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["confirmationNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["creditAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["currencyName", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customerSubOf", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customForm", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["custType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["daysOpen", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["daysOverdue", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["debitAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["deferRevRec", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dueDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["employee", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["entity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["exchangeRate", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["excludeCommission", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["expectedCloseDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["finChrg", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["forecastType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fulfillingTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fxAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["fxVsoeAllocation", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["fxVsoeAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["fxVsoePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["giftCertificate", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["grossAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["includeInForecast", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["inVsoeBundle", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isAllocation", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPayPalMeth", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isRevRecTransaction", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isShipAddress", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["itemSubOf", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["leadSource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["mainline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["memo", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["memorized", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["merchantAccount", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["message", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["multiSubsidiary", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["nameText", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["netAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["nextBillDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["opportunity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["otherRefNum", "NetSuite::SOAP::SearchTextNumberField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerContribution", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["partnerRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["payingTransaction", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["payPalPending", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["payPalStatus", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["payPalTranId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["poAsText", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["posting", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriodRelative", "NetSuite::SOAP::PostingPeriodDate", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["printedPickingTicket", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["probability", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["promoCode", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["purchaseOrder", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["quantity", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityBilled", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityCommitted", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityPacked", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityPicked", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityShipRecv", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["revRecEndDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["revRecStartDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["revRecTermInMonths", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["salesEffectiveDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["salesRep", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamMember", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salesTeamRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["serialNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["serialNumbers", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipAddress", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipAddressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipAttention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipCity", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipComplete", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shipCountry", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["shipCounty", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["shipPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipping", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shipRecvStatus", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shipState", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shipZip", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["source", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxItem", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxRate", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["terms", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["toBeEmailed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["totalAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["trackingNumbers", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["tranDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["tranId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["tranIsVsoeBundle", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["unit", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["vendType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["voided", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["vsoeAllocation", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["vsoeAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["vsoeDelivered", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["vsoePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["webSite", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "ItemSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["account", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["autoLeadTime", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["autoPreferredStockLevel", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["autoReorderPoint", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["availableToPartners", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["averageCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["buildEntireAssembly", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["buyItNowPrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["caption", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["component", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["componentOf", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["copyDescription", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["cost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["costingMethod", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["created", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateViewed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["daysBeforeExpiration", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["demandModifier", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["displayIneBayStore", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["displayName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dontShowPrice", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["eBayItemDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["eBayItemSubtitle", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["eBayItemTitle", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["ebayRelistingOption", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["feedDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["feedName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["froogleProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["giftCertAuthCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertEmail", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertExpDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["giftCertFrom", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertMsg", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertOrigAmt", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertRecipient", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["imageUrl", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["inventoryLocation", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["isAvailable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isDropShipItem", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isFeatured", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isFulfillable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isOnline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPreferredVendor", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isSpecialOrderItem", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isSpecialWorkOrderItem", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["isTaxable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isVsoeBundle", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["itemId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["itemUrl", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastPurchasePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["lastQuantityAvailableChange", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["leadTime", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["listingDuration", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["locationAverageCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationPreferredStockLevel", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityAvailable", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityBackOrdered", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityCommitted", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityOnHand", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationQuantityOnOrder", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationReorderPoint", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["locationTotalValue", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["manufacturer", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufactureraddr1", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerCity", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerState", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerTariff", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerTaxId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["manufacturerZip", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["matrix", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["matrixChild", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["metaTagHtml", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["minimumQuantity", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["mpn", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["multManufactureAddr", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["nexTagCategory", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nexTagProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["numberAllowedDownloads", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["offerSupport", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["onlineCustomerPrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["onSpecial", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["pageTitle", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["preferredStockLevel", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["preferredStockLevelDays", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["price", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["primaryCategory", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["quantityAvailable", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityBackOrdered", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityCommitted", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityOnHand", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityOnOrder", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["reorderMultiple", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["reorderPoint", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["reservePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["safetyStockLevel", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["safetyStockLevelDays", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["salesDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["scheduleBNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["scheduleBQuantity", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["searchKeywords", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["seasonalDemand", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["sellOnebay", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["serialNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["serialNumberLocation", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["shipIndividually", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["shippingRate", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["shoppingDotComCategory", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["shoppingProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["shopzillaCategoryId", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["shopzillaProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["startingPrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["stockDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["stockUnit", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["storeDescription", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["subType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["taxCode", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["thumbnailUrl", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["totalValue", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["trackLandedCost", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["unitsType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["upcCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["urlComponent", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["useBins", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["useMarginalRates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["vendor", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["vendorName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["vsoeDelivered", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["vsoePrice", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["weight", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["yahooProductFeed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "PartnerSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["assignTasks", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["eligibleForCommission", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasDuplicates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPerson", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["partnerCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["promoCode", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["uRL", ["NetSuite::SOAP::SearchStringField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "URL")], [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "VendorSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["accountNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["balance", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["creditLimit", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["currency", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["eligibleForCommission", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["firstName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["hasDuplicates", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isJobResourceVend", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPerson", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["laborCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["lastName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["middleName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["salutation", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["taxIdNum", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["unbilledOrders", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["url", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategorySearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "SiteCategorySearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["dateViewed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TimeBillSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "TimeBillSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["approved", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["billable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["v_class", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "class")], [0, 1]],
          ["customer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["date", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["department", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["duration", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["employee", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastModified", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["location", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["memo", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["paidByPayroll", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["paidExternally", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["payItem", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SolutionSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "SolutionSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["abstract", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["caseCount", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["code", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["find", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isOnline", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["topic", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TopicSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "TopicSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SubsidiarySearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "SubsidiarySearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["nameNoHierarchy", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "GiftCertificateSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["amountAvailable", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["amountAvailableBilled", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["expirationDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["from", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giftCertCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isActive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["liabilityAccount", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["message", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["originalAmount", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["purchaseDate", "NetSuite::SOAP::SearchDateField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FolderSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "FolderSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["folderName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["modified", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["numFiles", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["private", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["size", "NetSuite::SOAP::SearchLongField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FileSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "FileSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["availableWithoutLogin", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["created", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateViewed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["description", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["documentSize", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fileType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["folder", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isAvailable", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isLink", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["modified", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["name", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["owner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["url", "NetSuite::SOAP::SearchStringField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "JobSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["accountNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["actualTime", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["address", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressee", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressLabel", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["addressPhone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["allowExpenses", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["allowTime", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["attention", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["city", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["comments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["contact", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["country", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["county", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["dateCreated", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["entityId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["estCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["estEndDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["estimatedTime", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["estimatedTimeOverride", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["estRevenue", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fax", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["giveAccess", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["image", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["jobResource", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["jobResourceRole", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["language", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["level", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["limitTimeToAssignees", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["parent", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["pctComplete", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["percentTimeComplete", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["phone", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["phoneticName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["state", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["timeRemaining", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["unsubscribe", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["zipCode", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::IssueSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "IssueSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["ageInMonths", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["assigned", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["buildBroken", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["buildBrokenName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["buildFixed", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["buildFixedName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["buildTarget", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["buildTargetName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["caseCount", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["caseNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["closedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["dateReleased", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["details", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["duplicateOf", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["eFix", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["employeeOrTeam", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["eventStatus", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["externalAbstract", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalDetails", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalFixedIn", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["externalStatus", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["fixed", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["fixedBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isOwner", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isReviewed", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isShowStopper", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["issueAbstract", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["issueNumber", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["v_module", ["NetSuite::SOAP::SearchMultiSelectField", XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "module")], [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["originalFixedIn", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["priority", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["product", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["productTeam", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["reportedBy", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["reproduce", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["reviewer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["severity", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["source", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["tags", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["tracking", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["type", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["userType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["versionBroken", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["versionFixed", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["versionTarget", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GroupMemberSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "GroupMemberSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["groupId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "CampaignSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["audience", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["baseCost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["campaignEventType", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["campaignId", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["category", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["channel", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["cost", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["createdDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["endDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["event", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["expectedRevenue", "NetSuite::SOAP::SearchDoubleField", [0, 1]],
          ["family", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["group", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["item", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["keyword", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["manager", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["number", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["offer", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["promoCode", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["recipient", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["response", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["responseCode", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["responseComments", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["responseDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["scheduleDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["searchEngine", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["startDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["status", "NetSuite::SOAP::SearchEnumMultiSelectField", [0, 1]],
          ["subscription", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["template", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["title", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["vertical", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityGroupSearchBasic,
        :schema_type => XSD::QName.new(NsCommon_2008_1PlatformWebservicesNetsuiteCom, "EntityGroupSearchBasic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["email", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["externalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["groupName", "NetSuite::SOAP::SearchStringField", [0, 1]],
          ["groupOwner", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["groupType", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalId", "NetSuite::SOAP::SearchMultiSelectField", [0, 1]],
          ["internalIdNumber", "NetSuite::SOAP::SearchLongField", [0, 1]],
          ["isDynamic", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isInactive", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["isPrivate", "NetSuite::SOAP::SearchBooleanField", [0, 1]],
          ["lastModifiedDate", "NetSuite::SOAP::SearchDateField", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::SearchCustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEvent,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEvent"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supportCase", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["period", "SOAP::SOAPLong", [0, 1]],
          ["frequency", "NetSuite::SOAP::CalendarEventFrequency", [0, 1]],
          ["recurrenceDowMaskList", "NetSuite::SOAP::RecurrenceDowMaskList", [0, 1]],
          ["recurrenceDow", "NetSuite::SOAP::CalendarEventDow", [0, 1]],
          ["recurrenceDowim", "NetSuite::SOAP::CalendarEventDowim", [0, 1]],
          ["seriesStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endByDate", "SOAP::SOAPDateTime", [0, 1]],
          ["noEndDate", "SOAP::SOAPBoolean", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["location", "SOAP::SOAPString", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["allDayEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["reminderType", "NetSuite::SOAP::CalendarEventReminderType", [0, 1]],
          ["reminderMinutes", "NetSuite::SOAP::CalendarEventReminderMinutes", [0, 1]],
          ["status", "NetSuite::SOAP::CalendarEventStatus", [0, 1]],
          ["accessLevel", "NetSuite::SOAP::CalendarEventAccessLevel", [0, 1]],
          ["organizer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["exclusionDateList", "NetSuite::SOAP::ExclusionDateList", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["attendeeList", "NetSuite::SOAP::CalendarEventAttendeeList", [0, 1]],
          ["resourceList", "NetSuite::SOAP::CalendarEventResourceList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExclusionDateList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "ExclusionDateList"),
        :schema_element => [
          ["exclusionDate", "SOAP::SOAPDateTime[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::RecurrenceDowMaskList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "RecurrenceDowMaskList"),
        :schema_element => [
          ["recurrenceDowMask", "NetSuite::SOAP::CalendarEventDow[]", [1, 7]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAttendee,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendee"),
        :schema_element => [
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["attendee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["response", "NetSuite::SOAP::CalendarEventAttendeeResponse", [0, 1]],
          ["attendance", "NetSuite::SOAP::CalendarEventAttendeeAttendance", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAttendeeList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeList"),
        :schema_element => [
          ["attendee", "NetSuite::SOAP::CalendarEventAttendee[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventResource,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventResource"),
        :schema_element => [
          ["resource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventResourceList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventResourceList"),
        :schema_element => [
          ["resource", "NetSuite::SOAP::CalendarEventResource[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventSearch,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["attendeeJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["attendeeContactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["attendeeCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Task,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "Task"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supportCase", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["milestone", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["estimatedTime", "SOAP::SOAPDateTime", [0, 1]],
          ["estimatedTimeOverride", "SOAP::SOAPDateTime", [0, 1]],
          ["actualTime", "SOAP::SOAPDateTime", [0, 1]],
          ["timeRemaining", "SOAP::SOAPDateTime", [0, 1]],
          ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["priority", "NetSuite::SOAP::TaskPriority", [0, 1]],
          ["status", "NetSuite::SOAP::TaskStatus", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["reminderType", "NetSuite::SOAP::TaskReminderType", [0, 1]],
          ["reminderMinutes", "NetSuite::SOAP::TaskReminderMinutes", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contactList", "NetSuite::SOAP::TaskContactList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaskContact,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskContact"),
        :schema_element => [
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaskContactList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskContactList"),
        :schema_element => [
          ["contact", "NetSuite::SOAP::TaskContact[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaskSearch,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["companyCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["jobJoin", "NetSuite::SOAP::JobSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCall,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCall"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supportCase", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["milestone", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["status", "NetSuite::SOAP::PhoneCallStatus", [0, 1]],
          ["priority", "NetSuite::SOAP::PhoneCallPriority", [0, 1]],
          ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["reminderType", "NetSuite::SOAP::PhoneCallReminderType", [0, 1]],
          ["reminderMinutes", "NetSuite::SOAP::PhoneCallReminderMinutes", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["contactList", "NetSuite::SOAP::PhoneCallContactList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCallContact,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallContact"),
        :schema_element => [
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCallContactList,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallContactList"),
        :schema_element => [
          ["contact", "NetSuite::SOAP::PhoneCallContact[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCallSearch,
        :schema_type => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["companyCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Note,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "Note"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["noteType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["direction", "NetSuite::SOAP::NoteDirection", [0, 1]],
          ["noteDate", "SOAP::SOAPDateTime", [0, 1]],
          ["note", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["activity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["author", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["folder", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["media", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["record", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["topic", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NoteSearch,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "NoteSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["authorJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["campaignJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["entityJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["issueJoin", "NetSuite::SOAP::IssueSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["solutionJoin", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Message,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "Message"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["author", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recipient", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cc", "SOAP::SOAPString", [0, 1]],
          ["bcc", "SOAP::SOAPString", [0, 1]],
          ["messageDate", "SOAP::SOAPDateTime", [0, 1]],
          ["recordName", "SOAP::SOAPString", [0, 1]],
          ["recordTypeName", "SOAP::SOAPString", [0, 1]],
          ["subject", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["emailed", "SOAP::SOAPBoolean", [0, 1]],
          ["activity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["compressAttachments", "SOAP::SOAPBoolean", [0, 1]],
          ["incoming", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mediaItemList", "NetSuite::SOAP::MessageMediaItemList", [0, 1]],
          ["dateTime", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MessageMediaItemList,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "MessageMediaItemList"),
        :schema_element => [
          ["mediaItem", "NetSuite::SOAP::C_File[]", [1, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MessageSearch,
        :schema_type => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "MessageSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["attachmentsJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["authorJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["campaignJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["entityJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["recipientJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::C_File,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "File"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["attachFrom", "NetSuite::SOAP::FileAttachFrom", [0, 1]],
          ["mediaTypeName", "SOAP::SOAPString", [0, 1]],
          ["fileType", "NetSuite::SOAP::MediaType", [0, 1]],
          ["content", "SOAP::SOAPBase64", [0, 1]],
          ["folder", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fileSize", "SOAP::SOAPDouble", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["encoding", "NetSuite::SOAP::FileEncoding", [0, 1]],
          ["altTagCaption", "SOAP::SOAPString", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "SOAP::SOAPString", [0, 1]],
          ["hideInBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["caption", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::FileSiteCategoryList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FileSiteCategory,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileSiteCategory"),
        :schema_element => [
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["categoryDescription", "SOAP::SOAPString", [0, 1]],
          ["website", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FileSiteCategoryList,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileSiteCategoryList"),
        :schema_element => [
          ["siteCategory", "NetSuite::SOAP::FileSiteCategory[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FileSearch,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["shopperJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Folder,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "Folder"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["group", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FolderSearch,
        :schema_type => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FolderSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::FolderSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Subscriptions,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Subscriptions"),
        :schema_element => [
          ["subscribed", "SOAP::SOAPBoolean", [0, 1]],
          ["subscription", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SubscriptionsList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "SubscriptionsList"),
        :schema_element => [
          ["subscriptions", "NetSuite::SOAP::Subscriptions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Contact,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Contact"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["categoryList", "NetSuite::SOAP::CategoryList", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["officePhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["supervisor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supervisorPhone", "SOAP::SOAPString", [0, 1]],
          ["assistant", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assistantPhone", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::ContactAddressbookList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CategoryList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CategoryList"),
        :schema_element => [
          ["category", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::ContactAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["customerPrimaryJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["partnerPrimaryJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]],
          ["vendorPrimaryJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Customer,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Customer"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
          ["altPhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["language", "NetSuite::SOAP::Language", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["territory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["taxExempt", "SOAP::SOAPBoolean", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
          ["creditHoldOverride", "NetSuite::SOAP::CustomerCreditHoldOverride", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
          ["daysOverdue", "SOAP::SOAPLong", [0, 1]],
          ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["prefCCProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
          ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
          ["taxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["resaleNumber", "SOAP::SOAPString", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["reminderDays", "SOAP::SOAPLong", [0, 1]],
          ["shippingItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["thirdPartyAcct", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyZipcode", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["accessRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["accessHelp", "SOAP::SOAPString", [0, 1]],
          ["campaignCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["webLead", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["referrer", "SOAP::SOAPString", [0, 1]],
          ["keywords", "SOAP::SOAPString", [0, 1]],
          ["clickStream", "SOAP::SOAPString", [0, 1]],
          ["lastPageVisited", "SOAP::SOAPString", [0, 1]],
          ["visits", "SOAP::SOAPLong", [0, 1]],
          ["firstVisit", "SOAP::SOAPDateTime", [0, 1]],
          ["lastVisit", "SOAP::SOAPDateTime", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stage", "NetSuite::SOAP::CustomerStage", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CustomerSalesTeamList", [0, 1]],
          ["downloadList", "NetSuite::SOAP::CustomerDownloadList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::CustomerAddressbookList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["contactList", "NetSuite::SOAP::ContactRoleList", [0, 1]],
          ["creditCardsList", "NetSuite::SOAP::CustomerCreditCardsList", [0, 1]],
          ["groupPricingList", "NetSuite::SOAP::CustomerGroupPricingList", [0, 1]],
          ["itemPricingList", "NetSuite::SOAP::CustomerItemPricingList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerDownload,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerDownload"),
        :schema_element => [
          ["file", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["licenseCode", "SOAP::SOAPString", [0, 1]],
          ["remainingDownloads", "SOAP::SOAPLong", [0, 1]],
          ["expiration", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerDownloadList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerDownloadList"),
        :schema_element => [
          ["download", "NetSuite::SOAP::CustomerDownload[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactRole_,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactRole"),
        :schema_element => [
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contactRole", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactRoleList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactRoleList"),
        :schema_element => [
          ["contact", "NetSuite::SOAP::ContactRole_[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerSalesTeam,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerSalesTeamList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::CustomerSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::CustomerAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerCreditCards,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerCreditCards"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitcardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["ccMemo", "SOAP::SOAPString", [0, 1]],
          ["validfrom", "SOAP::SOAPDateTime", [0, 1]],
          ["ccDefault", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerCreditCardsList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerCreditCardsList"),
        :schema_element => [
          ["creditCards", "NetSuite::SOAP::CustomerCreditCards[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerGroupPricing,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerGroupPricing"),
        :schema_element => [
          ["group", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["level", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerGroupPricingList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerGroupPricingList"),
        :schema_element => [
          ["groupPricing", "NetSuite::SOAP::CustomerGroupPricing[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerItemPricing,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerItemPricing"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["level", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerItemPricingList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerItemPricingList"),
        :schema_element => [
          ["itemPricing", "NetSuite::SOAP::CustomerItemPricing[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["hostedPageJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["leadSourceJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["parentCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["salesRepJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["subCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["webSiteCategoryJoin", "NetSuite::SOAP::SiteCategorySearchBasic", [0, 1]],
          ["webSiteItemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerStatus,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerStatus"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["stage", "NetSuite::SOAP::CustomerStatusStage", [0, 1]],
          ["probability", "SOAP::SOAPDouble", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["includeInLeadReports", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Partner,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Partner"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["partnerCode", "SOAP::SOAPString", [0, 1]],
          ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["referringUrl", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["roleList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["categoryList", "NetSuite::SOAP::CategoryList", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
          ["taxIdNum", "SOAP::SOAPString", [0, 1]],
          ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["bcn", "SOAP::SOAPString", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxFractionUnit", "NetSuite::SOAP::TaxFractionUnit", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["taxRounding", "NetSuite::SOAP::TaxRounding", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["accessRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["subPartnerLogin", "SOAP::SOAPBoolean", [0, 1]],
          ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["contactList", "NetSuite::SOAP::ContactRoleList", [0, 1]],
          ["promoCodeList", "NetSuite::SOAP::PartnerPromoCodeList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::PartnerAddressbookList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerPromoCode,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerPromoCode"),
        :schema_element => [
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discount", "SOAP::SOAPString", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerPromoCodeList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerPromoCodeList"),
        :schema_element => [
          ["promoCode", "NetSuite::SOAP::PartnerPromoCode[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::PartnerAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "PartnerSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Vendor,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Vendor"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
          ["altPhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["legalName", "SOAP::SOAPString", [0, 1]],
          ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["bcn", "SOAP::SOAPString", [0, 1]],
          ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["is1099Eligible", "SOAP::SOAPBoolean", [0, 1]],
          ["isJobResourceVend", "SOAP::SOAPBoolean", [0, 1]],
          ["laborCost", "SOAP::SOAPDouble", [0, 1]],
          ["taxIdNum", "SOAP::SOAPString", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["isAccountant", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["contactList", "NetSuite::SOAP::ContactRoleList", [0, 1]],
          ["pricingScheduleList", "NetSuite::SOAP::VendorPricingScheduleList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::VendorAddressbookList", [0, 1]],
          ["rolesList", "NetSuite::SOAP::VendorRolesList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorPricingSchedule,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorPricingSchedule"),
        :schema_element => [
          ["scheduleName", "SOAP::SOAPString", [0, 1]],
          ["scheduleDiscount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorPricingScheduleList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorPricingScheduleList"),
        :schema_element => [
          ["pricingSchedule", "NetSuite::SOAP::VendorPricingSchedule[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::VendorAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorRoles,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorRoles"),
        :schema_element => [
          ["selectedRole", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorRolesList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorRolesList"),
        :schema_element => [
          ["roles", "NetSuite::SOAP::VendorRoles[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "VendorSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::VendorSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityGroup,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroup"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["groupName", "SOAP::SOAPString", [0, 1]],
          ["groupType", "NetSuite::SOAP::EntityGroupType", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["groupOwner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSavedSearch", "SOAP::SOAPBoolean", [0, 1]],
          ["parentGroupType", "NetSuite::SOAP::EntityGroupType", [0, 1]],
          ["savedSearch", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSalesTeam", "SOAP::SOAPBoolean", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["restrictionGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isProductTeam", "SOAP::SOAPBoolean", [0, 1]],
          ["isFunctionalTeam", "SOAP::SOAPBoolean", [0, 1]],
          ["issueRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["calendarName", "SOAP::SOAPString", [0, 1]],
          ["calendarStartTime", "NetSuite::SOAP::EntityGroupDailyTime", [0, 1]],
          ["calendarEndTime", "NetSuite::SOAP::EntityGroupDailyTime", [0, 1]],
          ["calendarDefaultView", "NetSuite::SOAP::EntityGroupDefView", [0, 1]],
          ["calendarPeriod", "NetSuite::SOAP::EntityGroupPeriodSize", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityGroupSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::EntityGroupSearchBasic", [0, 1]],
          ["groupMemberJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Job,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Job"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["language", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["altPhone", "SOAP::SOAPString", [0, 1]],
          ["projectedEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["jobType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["estimatedCost", "SOAP::SOAPDouble", [0, 1]],
          ["estimatedRevenue", "SOAP::SOAPDouble", [0, 1]],
          ["estimatedTime", "SOAP::SOAPDateTime", [0, 1]],
          ["estimatedTimeOverride", "SOAP::SOAPDateTime", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
          ["actualTime", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["timeRemaining", "SOAP::SOAPDateTime", [0, 1]],
          ["estimatedLaborCost", "SOAP::SOAPDouble", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["estimateRevRecTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["limitTimeToAssignees", "SOAP::SOAPBoolean", [0, 1]],
          ["allowTime", "SOAP::SOAPBoolean", [0, 1]],
          ["allowExpenses", "SOAP::SOAPBoolean", [0, 1]],
          ["jobResourcesList", "NetSuite::SOAP::JobResourcesList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::JobAddressbookList", [0, 1]],
          ["milestonesList", "NetSuite::SOAP::JobMilestonesList", [0, 1]],
          ["creditCardsList", "NetSuite::SOAP::JobCreditCardsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobAddressbook,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["isResidential", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobAddressbookList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::JobAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobResources,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobResources"),
        :schema_element => [
          ["jobResource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["role", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobResourcesList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobResourcesList"),
        :schema_element => [
          ["jobResources", "NetSuite::SOAP::JobResources[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobMilestones,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobMilestones"),
        :schema_element => [
          ["milestoneName", "SOAP::SOAPString", [0, 1]],
          ["milestoneOrder", "SOAP::SOAPString", [0, 1]],
          ["milestoneEstComplete", "SOAP::SOAPDateTime", [0, 1]],
          ["milestoneCompleted", "SOAP::SOAPBoolean", [0, 1]],
          ["milestoneComments", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobMilestonesList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobMilestonesList"),
        :schema_element => [
          ["milestones", "NetSuite::SOAP::JobMilestones[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobCreditCards,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobCreditCards"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccMemo", "SOAP::SOAPString", [0, 1]],
          ["ccDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobCreditCardsList,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobCreditCardsList"),
        :schema_element => [
          ["creditCards", "NetSuite::SOAP::JobCreditCards[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobSearch,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::JobSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobType,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobStatus,
        :schema_type => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobStatus"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCase,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCase"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["escalationMessage", "SOAP::SOAPString", [0, 1]],
          ["lastReopenedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["incomingMessage", "SOAP::SOAPString", [0, 1]],
          ["insertsolution", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["outgoingMessage", "SOAP::SOAPString", [0, 1]],
          ["searchsolution", "SOAP::SOAPString", [0, 1]],
          ["emailForm", "SOAP::SOAPBoolean", [0, 1]],
          ["newsolutionfrommsg", "SOAP::SOAPString", [0, 1]],
          ["internalOnly", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["caseNumber", "SOAP::SOAPString", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastMessageDate", "SOAP::SOAPDateTime", [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["product", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_module", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumber", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["inboundEmail", "SOAP::SOAPString", [0, 1]],
          ["issue", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["priority", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["origin", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["helpDesk", "SOAP::SOAPBoolean", [0, 1]],
          ["emailEmployeesList", "NetSuite::SOAP::EmailEmployeesList", [0, 1]],
          ["escalateToList", "NetSuite::SOAP::SupportCaseEscalateToList", [0, 1]],
          ["solutionsList", "NetSuite::SOAP::SupportCaseSolutionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmailEmployeesList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "EmailEmployeesList"),
        :schema_element => [
          ["emailEmployees", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseEscalateTo,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseEscalateTo"),
        :schema_element => [
          ["escalatee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseEscalateToList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseEscalateToList"),
        :schema_element => [
          ["escalateTo", "NetSuite::SOAP::SupportCaseEscalateTo[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseSolutions,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseSolutions"),
        :schema_element => [
          ["solution", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["dateApplied", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseSolutionsList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseSolutionsList"),
        :schema_element => [
          ["solutions", "NetSuite::SOAP::SupportCaseSolutions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseSearch,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["issueJoin", "NetSuite::SOAP::IssueSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseStatus,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseStatus"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stage", "NetSuite::SOAP::SupportCaseStatusStage", [0, 1]],
          ["caseOnHold", "SOAP::SOAPBoolean", [0, 1]],
          ["autoCloseCase", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseType,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseOrigin,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseOrigin"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseIssue,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseIssue"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCasePriority,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCasePriority"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Solution,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Solution"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["solutionCode", "SOAP::SOAPString", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["status", "NetSuite::SOAP::SolutionStatus", [0, 1]],
          ["displayOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["longDescription", "SOAP::SOAPString", [0, 1]],
          ["topicsList", "NetSuite::SOAP::SolutionTopicsList", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["solutionsList", "NetSuite::SOAP::SolutionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SolutionTopics,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionTopics"),
        :schema_element => [
          ["topic", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SolutionTopicsList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionTopicsList"),
        :schema_element => [
          ["topics", "NetSuite::SOAP::SolutionTopics[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Solutions,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Solutions"),
        :schema_element => [
          ["solution", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SolutionsList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionsList"),
        :schema_element => [
          ["solutions", "NetSuite::SOAP::Solutions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SolutionSearch,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["relatedSolutionJoin", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]],
          ["topicJoin", "NetSuite::SOAP::TopicSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Topic,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Topic"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["parentTopic", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["longDescription", "SOAP::SOAPString", [0, 1]],
          ["solutionList", "NetSuite::SOAP::TopicSolutionList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TopicSolution,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "TopicSolution"),
        :schema_element => [
          ["solution", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TopicSolutionList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "TopicSolutionList"),
        :schema_element => [
          ["solution", "NetSuite::SOAP::TopicSolution[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TopicSearch,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "TopicSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TopicSearchBasic", [0, 1]],
          ["solutionJoin", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Issue,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Issue"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueNumber", "SOAP::SOAPString", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["issueType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["product", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_module", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["productTeam", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["source", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reportedBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reproduce", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["duplicateOf", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["severity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["priority", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isShowStopper", "SOAP::SOAPBoolean", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reviewer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isReviewed", "SOAP::SOAPBoolean", [0, 1]],
          ["issueStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["issueTagsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["issueAbstract", "SOAP::SOAPString", [0, 1]],
          ["newDetails", "SOAP::SOAPString", [0, 1]],
          ["isOwner", "SOAP::SOAPBoolean", [0, 1]],
          ["trackCode", "NetSuite::SOAP::IssueTrackCode", [0, 1]],
          ["emailAssignee", "SOAP::SOAPBoolean", [0, 1]],
          ["emailEmployeesList", "NetSuite::SOAP::EmailEmployeesList", [0, 1]],
          ["emailCellsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["externalAbstract", "SOAP::SOAPString", [0, 1]],
          ["externalDetails", "SOAP::SOAPString", [0, 1]],
          ["brokenInVersionList", "NetSuite::SOAP::IssueVersionList", [0, 1]],
          ["targetVersionList", "NetSuite::SOAP::IssueVersionList", [0, 1]],
          ["fixedInVersionList", "NetSuite::SOAP::IssueVersionList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::IssueVersion,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "IssueVersion"),
        :schema_element => [
          ["primary", "SOAP::SOAPBoolean", [0, 1]],
          ["version", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["build", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::IssueVersionList,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "IssueVersionList"),
        :schema_element => [
          ["issueVersion", "NetSuite::SOAP::IssueVersion[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::IssueSearch,
        :schema_type => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "IssueSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::IssueSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ClassTranslation,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ClassTranslation"),
        :schema_element => [
          ["locale", "SOAP::SOAPString", [0, 1]],
          ["language", "SOAP::SOAPString", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ClassTranslationList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ClassTranslationList"),
        :schema_element => [
          ["classTranslation", "NetSuite::SOAP::ClassTranslation[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ContactCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["private", "SOAP::SOAPBoolean", [0, 1]],
          ["sync", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "CustomerCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesRole,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SalesRole"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PriceLevel,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PriceLevel"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["discountpct", "SOAP::SOAPDouble", [0, 1]],
          ["updateExistingPrices", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::WinLossReason,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "WinLossReason"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Term,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Term"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["dateDriven", "SOAP::SOAPBoolean", [0, 1]],
          ["daysUntilNetDue", "SOAP::SOAPLong", [0, 1]],
          ["discountPercent", "SOAP::SOAPDouble", [0, 1]],
          ["daysUntilExpiry", "SOAP::SOAPLong", [0, 1]],
          ["dayOfMonthNetDue", "SOAP::SOAPLong", [0, 1]],
          ["dueNextMonthIfWithinDays", "SOAP::SOAPLong", [0, 1]],
          ["discountPercentDateDriven", "SOAP::SOAPDouble", [0, 1]],
          ["dayDiscountExpires", "SOAP::SOAPLong", [0, 1]],
          ["preferred", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NoteType,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NoteType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PaymentMethod,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PaymentMethod"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["creditCard", "SOAP::SOAPBoolean", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["isDebitCard", "SOAP::SOAPBoolean", [0, 1]],
          ["merchantAccountsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["payPalEmailAddress", "SOAP::SOAPString", [0, 1]],
          ["expressCheckoutArrangement", "SOAP::SOAPString", [0, 1]],
          ["useExpressCheckout", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LeadSource,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LeadSource"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Price,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Price"),
        :schema_element => [
          ["value", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PriceList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PriceList"),
        :schema_element => [
          ["price", "NetSuite::SOAP::Price[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Pricing,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Pricing"),
        :schema_element => [
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discount", "SOAP::SOAPDouble", [0, 1]],
          ["priceList", "NetSuite::SOAP::PriceList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PricingMatrix,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PricingMatrix"),
        :schema_element => [
          ["pricing", "NetSuite::SOAP::Pricing[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Rate,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Rate"),
        :schema_element => [
          ["value", "SOAP::SOAPDouble", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::RateList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "RateList"),
        :schema_element => [
          ["rate", "NetSuite::SOAP::Rate[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::BillingRates,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "BillingRates"),
        :schema_element => [
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingClass", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rateList", "NetSuite::SOAP::RateList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::BillingRatesMatrix,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "BillingRatesMatrix"),
        :schema_element => [
          ["billingRates", "NetSuite::SOAP::BillingRates[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Translation,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Translation"),
        :schema_element => [
          ["language", "SOAP::SOAPString", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TranslationList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TranslationList"),
        :schema_element => [
          ["translation", "NetSuite::SOAP::Translation[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemOptionsList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemOptionsList"),
        :schema_element => [
          ["itemOptions", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemVendor,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemVendor"),
        :schema_element => [
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendorCode", "SOAP::SOAPString", [0, 1]],
          ["vendorCurrencyName", "SOAP::SOAPString", [0, 1]],
          ["purchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["preferredVendor", "SOAP::SOAPBoolean", [0, 1]],
          ["schedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemVendorList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemVendorList"),
        :schema_element => [
          ["itemVendor", "NetSuite::SOAP::ItemVendor[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategory_,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SiteCategory"),
        :schema_element => [
          ["website", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["categoryDescription", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategoryList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SiteCategoryList"),
        :schema_element => [
          ["siteCategory", "NetSuite::SOAP::SiteCategory_[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ProductFeedList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ProductFeedList"),
        :schema_element => [
          ["productFeed", "NetSuite::SOAP::ItemProductFeed[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemMember,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemMember"),
        :schema_element => [
          ["memberDescr", "SOAP::SOAPString", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["memberUnit", "SOAP::SOAPString", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxcode", "SOAP::SOAPString", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxrate", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemMemberList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemMemberList"),
        :schema_element => [
          ["itemMember", "NetSuite::SOAP::ItemMember[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["costingMethod", "NetSuite::SOAP::ItemCostingMethod", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommittedUnits", "SOAP::SOAPString", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["quantityAvailableUnits", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::InventoryItemLocationsList", [0, 1]],
          ["quantityOnOrderUnits", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryItemBinNumber,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItemBinNumber"),
        :schema_element => [
          ["binNumber", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onHand", "SOAP::SOAPString", [0, 1]],
          ["location", "SOAP::SOAPString", [0, 1]],
          ["preferredBin", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryItemBinNumberList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItemBinNumberList"),
        :schema_element => [
          ["binNumber", "NetSuite::SOAP::InventoryItemBinNumber[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryItemLocations,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItemLocations"),
        :schema_element => [
          ["location", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["locationId", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryItemLocationsList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItemLocationsList"),
        :schema_element => [
          ["locations", "NetSuite::SOAP::InventoryItemLocations[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DescriptionItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "DescriptionItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DiscountItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "DiscountItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MarkupItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "MarkupItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PaymentItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PaymentItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SubtotalItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SubtotalItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NonInventoryPurchaseItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NonInventoryPurchaseItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NonInventorySaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NonInventorySaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NonInventoryResaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NonInventoryResaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherChargeResaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "OtherChargeResaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherChargePurchaseItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "OtherChargePurchaseItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ServiceResaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ServiceResaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["createjob", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["billingRatesMatrix", "NetSuite::SOAP::BillingRatesMatrix", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ServicePurchaseItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ServicePurchaseItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ServiceSaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ServiceSaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["createjob", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["billingRatesMatrix", "NetSuite::SOAP::BillingRatesMatrix", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherChargeSaleItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "OtherChargeSaleItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Currency,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Currency"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["symbol", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isBaseCurrency", "SOAP::SOAPBoolean", [0, 1]],
          ["locale", "NetSuite::SOAP::CurrencyLocale", [0, 1]],
          ["formatSample", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["inclInFxRateUpdates", "SOAP::SOAPBoolean", [0, 1]],
          ["currencyPrecision", "NetSuite::SOAP::CurrencyCurrencyPrecision", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExpenseCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ExpenseCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["expenseAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Account,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Account"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["acctType", "NetSuite::SOAP::AccountType", [0, 1]],
          ["acctNumber", "SOAP::SOAPString", [0, 1]],
          ["acctName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPString", [0, 1]],
          ["generalRate", "NetSuite::SOAP::ConsolidatedRate", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cashflowRate", "NetSuite::SOAP::ConsolidatedRate", [0, 1]],
          ["billableExpensesAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["curDocNum", "SOAP::SOAPLong", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["inventory", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["category1099misc", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeStatement", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balanceSheet", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cashFlow", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AccountSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "AccountSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::AccountSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Department,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Department"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DepartmentSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "DepartmentSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::DepartmentSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Classification,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Classification"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ClassificationSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ClassificationSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::ClassificationSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Location,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Location"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["tranPrefix", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["addrPhone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["logo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["makeInventoryAvailable", "SOAP::SOAPBoolean", [0, 1]],
          ["makeInventoryAvailableStore", "SOAP::SOAPBoolean", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LocationSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LocationSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::LocationSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UnitsType,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "UnitsType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["uomList", "NetSuite::SOAP::UnitsTypeUomList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UnitsTypeUom,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "UnitsTypeUom"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]],
          ["pluralName", "SOAP::SOAPString", [0, 1]],
          ["abbreviation", "SOAP::SOAPString", [0, 1]],
          ["pluralAbbreviation", "SOAP::SOAPString", [0, 1]],
          ["conversionRate", "SOAP::SOAPDouble", [0, 1]],
          ["baseUnit", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UnitsTypeUomList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "UnitsTypeUomList"),
        :schema_element => [
          ["uom", "NetSuite::SOAP::UnitsTypeUom[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["inventoryLocationJoin", "NetSuite::SOAP::LocationSearchBasic", [0, 1]],
          ["preferredLocationJoin", "NetSuite::SOAP::LocationSearchBasic", [0, 1]],
          ["preferredVendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]],
          ["shopperJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactRole,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ContactRole"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Bin,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Bin"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["binNumber", "SOAP::SOAPString", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::BinSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "BinSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::BinSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesTaxItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SalesTaxItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["taxType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxAgency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["effectiveFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["validUntil", "SOAP::SOAPDateTime", [0, 1]],
          ["eccode", "SOAP::SOAPBoolean", [0, 1]],
          ["reverseCharge", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["excludeFromTaxReports", "SOAP::SOAPBoolean", [0, 1]],
          ["available", "NetSuite::SOAP::SalesTaxItemAvailable", [0, 1]],
          ["export", "SOAP::SOAPBoolean", [0, 1]],
          ["taxAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["county", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxGroup,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxGroup"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["taxitem1", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitprice1", "SOAP::SOAPString", [0, 1]],
          ["taxitem2", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitprice2", "SOAP::SOAPString", [0, 1]],
          ["piggyback", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["taxType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["county", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItemList", "NetSuite::SOAP::TaxGroupTaxItemList", [0, 1]],
          ["mess", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxGroupTaxItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxGroupTaxItem"),
        :schema_element => [
          ["taxName", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["basis", "SOAP::SOAPDouble", [0, 1]],
          ["taxType", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxGroupTaxItemList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxGroupTaxItemList"),
        :schema_element => [
          ["taxItem", "NetSuite::SOAP::TaxGroupTaxItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxType,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["nexusesTaxList", "NetSuite::SOAP::TaxTypeNexusesTaxList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxTypeNexusesTax,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxTypeNexusesTax"),
        :schema_element => [
          ["nexus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["saleTaxAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchTaxAcct", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxTypeNexusesTaxList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxTypeNexusesTaxList"),
        :schema_element => [
          ["nexusesTax", "NetSuite::SOAP::TaxTypeNexusesTax[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
          ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::SerializedInventoryItemNumbersList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::SerializedInventoryItemLocationsList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItemLocations,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocations"),
        :schema_element => [
          ["location", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["locationId", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItemLocationsList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemLocationsList"),
        :schema_element => [
          ["locations", "NetSuite::SOAP::SerializedInventoryItemLocations[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItemNumbers,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbers"),
        :schema_element => [
          ["serialNumber", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItemNumbersList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItemNumbersList"),
        :schema_element => [
          ["numbers", "NetSuite::SOAP::SerializedInventoryItemNumbers[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
          ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::LotNumberedInventoryItemNumbersList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::LotNumberedInventoryItemLocationsList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItemLocations,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocations"),
        :schema_element => [
          ["location", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["averageCostMli", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePriceMli", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["locationId", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["locationlookup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location_display", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItemLocationsList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemLocationsList"),
        :schema_element => [
          ["locations", "NetSuite::SOAP::LotNumberedInventoryItemLocations[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItemNumbers,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbers"),
        :schema_element => [
          ["serialNumber", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItemNumbersList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItemNumbersList"),
        :schema_element => [
          ["numbers", "NetSuite::SOAP::LotNumberedInventoryItemNumbers[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificateItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["liabilityAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["authCodesList", "NetSuite::SOAP::GiftCertificateItemAuthCodesList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateItemAuthCodes,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodes"),
        :schema_element => [
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["used", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateItemAuthCodesList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificateItemAuthCodesList"),
        :schema_element => [
          ["authCodes", "NetSuite::SOAP::GiftCertificateItemAuthCodes[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Subsidiary,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Subsidiary"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["logo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranPrefix", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["addrPhone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["shipAddr", "SOAP::SOAPString", [0, 1]],
          ["returnAddr", "SOAP::SOAPString", [0, 1]],
          ["returnAddress1", "SOAP::SOAPString", [0, 1]],
          ["returnAddress2", "SOAP::SOAPString", [0, 1]],
          ["returnCity", "SOAP::SOAPString", [0, 1]],
          ["returnState", "SOAP::SOAPString", [0, 1]],
          ["returnCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["returnZip", "SOAP::SOAPString", [0, 1]],
          ["legalName", "SOAP::SOAPString", [0, 1]],
          ["isElimination", "SOAP::SOAPBoolean", [0, 1]],
          ["allowPayroll", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["edition", "SOAP::SOAPString", [0, 1]],
          ["federalIdNumber", "SOAP::SOAPString", [0, 1]],
          ["addrLanguage", "SOAP::SOAPString", [0, 1]],
          ["nonConsol", "SOAP::SOAPString", [0, 1]],
          ["consol", "SOAP::SOAPString", [0, 1]],
          ["shipAddress1", "SOAP::SOAPString", [0, 1]],
          ["shipAddress2", "SOAP::SOAPString", [0, 1]],
          ["shipCity", "SOAP::SOAPString", [0, 1]],
          ["shipState", "SOAP::SOAPString", [0, 1]],
          ["shipCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["shipZip", "SOAP::SOAPString", [0, 1]],
          ["state1TaxNumber", "SOAP::SOAPString", [0, 1]],
          ["ssnOrTin", "SOAP::SOAPString", [0, 1]],
          ["incomeStatement", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balanceSheet", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cashFlow", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["consolidatedIncomeStatement", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["consolidatedBalanceSheet", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["consolidatedCashFlow", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["nexusList", "NetSuite::SOAP::SubsidiaryNexusList", [0, 1]],
          ["checkLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SubsidiaryNexus,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SubsidiaryNexus"),
        :schema_element => [
          ["nexusId", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["country", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SubsidiaryNexusList,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SubsidiaryNexusList"),
        :schema_element => [
          ["nexus", "NetSuite::SOAP::SubsidiaryNexus[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SubsidiarySearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SubsidiarySearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SubsidiarySearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertificate,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificate"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["giftCertCode", "SOAP::SOAPString", [0, 1]],
          ["sender", "SOAP::SOAPString", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
          ["amountRemaining", "SOAP::SOAPDouble", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateSearch,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificateSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::GiftCertificateSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PartnerCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorCategory,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "VendorCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isTaxAgency", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::KitItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "KitItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AssemblyItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "AssemblyItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["costingMethod", "NetSuite::SOAP::ItemCostingMethod", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::InventoryItemLocationsList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SerializedAssemblyItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedAssemblyItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::SerializedInventoryItemLocationsList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::SerializedInventoryItemNumbersList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LotNumberedAssemblyItem,
        :schema_type => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedAssemblyItem"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::LotNumberedInventoryItemLocationsList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::LotNumberedInventoryItemNumbersList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Opportunity,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "Opportunity"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["probability", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["daysOpen", "SOAP::SOAPLong", [0, 1]],
          ["forecastType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["projectedTotal", "SOAP::SOAPDouble", [0, 1]],
          ["rangeLow", "SOAP::SOAPDouble", [0, 1]],
          ["rangeHigh", "SOAP::SOAPDouble", [0, 1]],
          ["projAltSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesRangeLow", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesRangeHigh", "SOAP::SOAPDouble", [0, 1]],
          ["weightedTotal", "SOAP::SOAPDouble", [0, 1]],
          ["actionItem", "SOAP::SOAPString", [0, 1]],
          ["winLossReason", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["closeDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::OpportunitySalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::OpportunityItemList", [0, 1]],
          ["competitorsList", "NetSuite::SOAP::OpportunityCompetitorsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunitySalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunitySalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunitySalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::OpportunitySalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunityItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunityItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::OpportunityItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunityCompetitors,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityCompetitors"),
        :schema_element => [
          ["competitor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["notes", "SOAP::SOAPString", [0, 1]],
          ["strategy", "SOAP::SOAPString", [0, 1]],
          ["winner", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunityCompetitorsList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityCompetitorsList"),
        :schema_element => [
          ["competitors", "NetSuite::SOAP::OpportunityCompetitors[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunitySearch,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunitySearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["decisionMakerJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["leadSourceJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["salesRepJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesOrder,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrder"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderStatus", "NetSuite::SOAP::SalesOrderOrderStatus", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["actualShipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["payPalStatus", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payPalTranId", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["getAuth", "SOAP::SOAPBoolean", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::SalesOrderSalesTeamList", [0, 1]],
          ["giftCertRedemptionList", "NetSuite::SOAP::GiftCertRedemptionList", [0, 1]],
          ["itemList", "NetSuite::SOAP::SalesOrderItemList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesOrderSalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesOrderSalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::SalesOrderSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesOrderItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["commitInventory", "NetSuite::SOAP::SalesOrderItemCommitInventory", [0, 1]],
          ["licenseCode", "SOAP::SOAPString", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createPo", "NetSuite::SOAP::SalesOrderItemCreatePo", [0, 1]],
          ["createdPo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["poVendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["poCurrency", "SOAP::SOAPString", [0, 1]],
          ["poRate", "SOAP::SOAPDouble", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
          ["quantityPacked", "SOAP::SOAPDouble", [0, 1]],
          ["quantityPicked", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesOrderItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::SalesOrderItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionSearch,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "TransactionSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["accountJoin", "NetSuite::SOAP::AccountSearchBasic", [0, 1]],
          ["appliedToTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["applyingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["billingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["classJoin", "NetSuite::SOAP::ClassificationSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["createdFromJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["departmentJoin", "NetSuite::SOAP::DepartmentSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["fulfillingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["jobJoin", "NetSuite::SOAP::JobSearchBasic", [0, 1]],
          ["leadSourceJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["locationJoin", "NetSuite::SOAP::LocationSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["payingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["purchaseOrderJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["salesRepJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["subsidiaryJoin", "NetSuite::SOAP::SubsidiarySearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillment,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillment"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["shipStatus", "NetSuite::SOAP::ItemFulfillmentShipStatus", [0, 1]],
          ["saturdayDeliveryUps", "SOAP::SOAPBoolean", [0, 1]],
          ["sendShipNotifyEmailUps", "SOAP::SOAPBoolean", [0, 1]],
          ["sendBackupEmailUps", "SOAP::SOAPBoolean", [0, 1]],
          ["shipNotifyEmailAddressUps", "SOAP::SOAPString", [0, 1]],
          ["shipNotifyEmailAddress2Ups", "SOAP::SOAPString", [0, 1]],
          ["backupEmailAddressUps", "SOAP::SOAPString", [0, 1]],
          ["shipNotifyEmailMessageUps", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyAcctUps", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyZipcodeUps", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyCountryUps", "NetSuite::SOAP::Country", [0, 1]],
          ["thirdPartyTypeUps", "NetSuite::SOAP::ItemFulfillmentThirdPartyTypeUps", [0, 1]],
          ["partiesToTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
          ["exportTypeUps", "NetSuite::SOAP::ItemFulfillmentExportTypeUps", [0, 1]],
          ["methodOfTransportUps", "NetSuite::SOAP::ItemFulfillmentMethodOfTransportUps", [0, 1]],
          ["carrierIdUps", "SOAP::SOAPString", [0, 1]],
          ["entryNumberUps", "SOAP::SOAPString", [0, 1]],
          ["inbondCodeUps", "SOAP::SOAPString", [0, 1]],
          ["isRoutedExportTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
          ["licenseNumberUps", "SOAP::SOAPString", [0, 1]],
          ["licenseDateUps", "SOAP::SOAPDateTime", [0, 1]],
          ["licenseExceptionUps", "NetSuite::SOAP::ItemFulfillmentLicenseExceptionUps", [0, 1]],
          ["eccNumberUps", "SOAP::SOAPString", [0, 1]],
          ["recipientTaxIdUps", "SOAP::SOAPString", [0, 1]],
          ["blanketStartDateUps", "SOAP::SOAPDateTime", [0, 1]],
          ["blanketEndDateUps", "SOAP::SOAPDateTime", [0, 1]],
          ["shipmentWeightUps", "SOAP::SOAPDouble", [0, 1]],
          ["saturdayDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["saturdayPickupFedex", "SOAP::SOAPBoolean", [0, 1]],
          ["sendShipNotifyEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["sendBackupEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["signatureHomeDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["shipNotifyEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
          ["backupEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
          ["shipDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
          ["homeDeliveryTypeFedEx", "NetSuite::SOAP::ItemFulfillmentHomeDeliveryTypeFedEx", [0, 1]],
          ["homeDeliveryDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
          ["bookingConfirmationNumFedEx", "SOAP::SOAPString", [0, 1]],
          ["intlExemptionNumFedEx", "SOAP::SOAPString", [0, 1]],
          ["b13aFilingOptionFedEx", "NetSuite::SOAP::ItemFulfillmentB13AFilingOptionFedEx", [0, 1]],
          ["b13aStatementDataFedEx", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyAcctFedEx", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyCountryFedEx", "NetSuite::SOAP::Country", [0, 1]],
          ["thirdPartyTypeFedEx", "NetSuite::SOAP::ItemFulfillmentThirdPartyTypeFedEx", [0, 1]],
          ["shipmentWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["termsOfSaleFedEx", "NetSuite::SOAP::ItemFulfillmentTermsOfSaleFedEx", [0, 1]],
          ["termsFreightChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["termsInsuranceChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["generateIntegratedShipperLabel", "SOAP::SOAPBoolean", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["packageList", "NetSuite::SOAP::ItemFulfillmentPackageList", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["packageUpsList", "NetSuite::SOAP::ItemFulfillmentPackageUpsList", [0, 1]],
          ["packageFedExList", "NetSuite::SOAP::ItemFulfillmentPackageFedExList", [0, 1]],
          ["itemList", "NetSuite::SOAP::ItemFulfillmentItemList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItem"),
        :schema_element => [
          ["jobName", "SOAP::SOAPString", [0, 1]],
          ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
          ["itemName", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["poNum", "SOAP::SOAPString", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::ItemFulfillmentItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackage,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackage"),
        :schema_element => [
          ["packageWeight", "SOAP::SOAPDouble", [0, 1]],
          ["packageDescr", "SOAP::SOAPString", [0, 1]],
          ["packageTrackingNumber", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageList"),
        :schema_element => [
          ["package", "NetSuite::SOAP::ItemFulfillmentPackage[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUps,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUps"),
        :schema_element => [
          ["packageWeightUps", "SOAP::SOAPDouble", [0, 1]],
          ["packageDescrUps", "SOAP::SOAPString", [0, 1]],
          ["packageTrackingNumberUps", "SOAP::SOAPString", [0, 1]],
          ["packagingUps", "NetSuite::SOAP::ItemFulfillmentPackageUpsPackagingUps", [0, 1]],
          ["insuredValueUps", "SOAP::SOAPDouble", [0, 1]],
          ["reference1Ups", "SOAP::SOAPString", [0, 1]],
          ["reference2Ups", "SOAP::SOAPString", [0, 1]],
          ["packageLengthUps", "SOAP::SOAPLong", [0, 1]],
          ["packageWidthUps", "SOAP::SOAPLong", [0, 1]],
          ["packageHeightUps", "SOAP::SOAPLong", [0, 1]],
          ["additionalHandlingUps", "SOAP::SOAPBoolean", [0, 1]],
          ["useCodUps", "SOAP::SOAPBoolean", [0, 1]],
          ["codAmountUps", "SOAP::SOAPDouble", [0, 1]],
          ["codMethodUps", "NetSuite::SOAP::ItemFulfillmentPackageUpsCodMethodUps", [0, 1]],
          ["deliveryConfUps", "NetSuite::SOAP::ItemFulfillmentPackageUpsDeliveryConfUps", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUpsList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsList"),
        :schema_element => [
          ["packageUps", "NetSuite::SOAP::ItemFulfillmentPackageUps[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedEx,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedEx"),
        :schema_element => [
          ["packageWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["packageTrackingNumberFedEx", "SOAP::SOAPString", [0, 1]],
          ["packagingFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExPackagingFedEx", [0, 1]],
          ["admPackageTypeFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExAdmPackageTypeFedEx", [0, 1]],
          ["isNonStandardContainerFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["insuredValueFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["useInsuredValueFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["reference1FedEx", "SOAP::SOAPString", [0, 1]],
          ["packageLengthFedEx", "SOAP::SOAPLong", [0, 1]],
          ["packageWidthFedEx", "SOAP::SOAPLong", [0, 1]],
          ["packageHeightFedEx", "SOAP::SOAPLong", [0, 1]],
          ["useCodFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["codAmountFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["codMethodFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExCodMethodFedEx", [0, 1]],
          ["codFreightTypeFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExCodFreightTypeFedEx", [0, 1]],
          ["deliveryConfFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExDeliveryConfFedEx", [0, 1]],
          ["signatureOptionsFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedExSignatureOptionsFedEx", [0, 1]],
          ["signatureReleaseFedEx", "SOAP::SOAPString", [0, 1]],
          ["authorizationNumberFedEx", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExList"),
        :schema_element => [
          ["packageFedEx", "NetSuite::SOAP::ItemFulfillmentPackageFedEx[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Invoice,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "Invoice"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
          ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onCreditHold", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["expCostDiscount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemCostDiscount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["timeDiscount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
          ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
          ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
          ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
          ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
          ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
          ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["expCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::InvoiceSalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::InvoiceItemList", [0, 1]],
          ["itemCostList", "NetSuite::SOAP::InvoiceItemCostList", [0, 1]],
          ["giftCertRedemptionList", "NetSuite::SOAP::GiftCertRedemptionList", [0, 1]],
          ["expCostList", "NetSuite::SOAP::InvoiceExpCostList", [0, 1]],
          ["timeList", "NetSuite::SOAP::InvoiceTimeList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceSalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceSalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::InvoiceSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
          ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["licenseCode", "SOAP::SOAPString", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::InvoiceItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceItemCost,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceItemCost"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["itemDisp", "SOAP::SOAPString", [0, 1]],
          ["desc", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["unitDisp", "SOAP::SOAPString", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["count", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceItemCostList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceItemCostList"),
        :schema_element => [
          ["itemCost", "NetSuite::SOAP::InvoiceItemCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceExpCost,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceExpCost"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["employeeDisp", "SOAP::SOAPString", [0, 1]],
          ["categoryDisp", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["taxableDisp", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceExpCostList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceExpCostList"),
        :schema_element => [
          ["expCost", "NetSuite::SOAP::InvoiceExpCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceTime,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceTime"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["employeeDisp", "SOAP::SOAPString", [0, 1]],
          ["itemDisp", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["quantity", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["unitDisp", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["desc", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvoiceTimeList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "InvoiceTimeList"),
        :schema_element => [
          ["time", "NetSuite::SOAP::InvoiceTime[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSale,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSale"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payPalStatus", "SOAP::SOAPString", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["payPalTranId", "SOAP::SOAPString", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CashSaleSalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::CashSaleItemList", [0, 1]],
          ["itemCostList", "NetSuite::SOAP::CashSaleItemCostList", [0, 1]],
          ["giftCertRedemptionList", "NetSuite::SOAP::GiftCertRedemptionList", [0, 1]],
          ["expCostList", "NetSuite::SOAP::CashSaleExpCostList", [0, 1]],
          ["timeList", "NetSuite::SOAP::CashSaleTimeList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleSalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleSalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::CashSaleSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantityFulfilled", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["licenseCode", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["currentPercent", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["amountOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::CashSaleItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleItemCost,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleItemCost"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["itemDisp", "SOAP::SOAPString", [0, 1]],
          ["desc", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["unitDisp", "SOAP::SOAPString", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["count", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleItemCostList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleItemCostList"),
        :schema_element => [
          ["itemCost", "NetSuite::SOAP::CashSaleItemCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleExpCost,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleExpCost"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["employeeDisp", "SOAP::SOAPString", [0, 1]],
          ["categoryDisp", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["taxableDisp", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleExpCostList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleExpCostList"),
        :schema_element => [
          ["expCost", "NetSuite::SOAP::CashSaleExpCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleTime,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleTime"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["billedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["employeeDisp", "SOAP::SOAPString", [0, 1]],
          ["itemDisp", "SOAP::SOAPString", [0, 1]],
          ["departmentDisp", "SOAP::SOAPString", [0, 1]],
          ["classDisp", "SOAP::SOAPString", [0, 1]],
          ["locationDisp", "SOAP::SOAPString", [0, 1]],
          ["quantity", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["unitDisp", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["desc", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSaleTimeList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSaleTimeList"),
        :schema_element => [
          ["time", "NetSuite::SOAP::CashSaleTime[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Estimate,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "Estimate"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["probability", "SOAP::SOAPDouble", [0, 1]],
          ["includeInForecast", "SOAP::SOAPBoolean", [0, 1]],
          ["forecastType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["itemList", "NetSuite::SOAP::EstimateItemList", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::EstimateSalesTeamList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EstimateItem,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "EstimateItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EstimateItemList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "EstimateItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::EstimateItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EstimateSalesTeam,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "EstimateSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EstimateSalesTeamList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "EstimateSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::EstimateSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertRedemption,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "GiftCertRedemption"),
        :schema_element => [
          ["authCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["authCodeApplied", "SOAP::SOAPDouble", [0, 1]],
          ["authCodeAmtRemaining", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertRedemptionList,
        :schema_type => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "GiftCertRedemptionList"),
        :schema_element => [
          ["giftCertRedemption", "NetSuite::SOAP::GiftCertRedemption[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LandedCost,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "LandedCost"),
        :schema_element => [
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["source", "NetSuite::SOAP::LandedCostSource", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LandedCostList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostList"),
        :schema_element => [
          ["landedCost", "NetSuite::SOAP::LandedCost[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorBill,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBill"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["userTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["landedCostMethod", "NetSuite::SOAP::LandedCostMethod", [0, 1]],
          ["expenseList", "NetSuite::SOAP::VendorBillExpenseList", [0, 1]],
          ["itemList", "NetSuite::SOAP::VendorBillItemList", [0, 1]],
          ["landedCostsList", "NetSuite::SOAP::LandedCostList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorBillExpense,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBillExpense"),
        :schema_element => [
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["amortizationSched", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorBillExpenseList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBillExpenseList"),
        :schema_element => [
          ["expense", "NetSuite::SOAP::VendorBillExpense[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorBillItem,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBillItem"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["landedCostCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["amortizationSched", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorBillItemList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBillItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::VendorBillItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrder,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrder"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipTo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["itemList", "NetSuite::SOAP::PurchaseOrderItemList", [0, 1]],
          ["expenseList", "NetSuite::SOAP::PurchaseOrderExpenseList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrderExpense,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpense"),
        :schema_element => [
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrderExpenseList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderExpenseList"),
        :schema_element => [
          ["expense", "NetSuite::SOAP::PurchaseOrderExpense[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrderItem,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderItem"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["landedCostCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrderItemList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrderItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::PurchaseOrderItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemReceipt,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceipt"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["landedCostMethod", "NetSuite::SOAP::LandedCostMethod", [0, 1]],
          ["itemList", "NetSuite::SOAP::ItemReceiptItemList", [0, 1]],
          ["expenseList", "NetSuite::SOAP::ItemReceiptExpenseList", [0, 1]],
          ["landedCostsList", "NetSuite::SOAP::LandedCostList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemReceiptItem,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceiptItem"),
        :schema_element => [
          ["itemReceive", "SOAP::SOAPBoolean", [0, 1]],
          ["jobName", "SOAP::SOAPString", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["itemName", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onhand", "SOAP::SOAPDouble", [0, 1]],
          ["quantityRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["unitsDisplay", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["restock", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemReceiptItemList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceiptItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::ItemReceiptItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemReceiptExpense,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceiptExpense"),
        :schema_element => [
          ["markReceived", "SOAP::SOAPBoolean", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["account", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemReceiptExpenseList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceiptExpenseList"),
        :schema_element => [
          ["expense", "NetSuite::SOAP::ItemReceiptExpense[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorPayment,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPayment"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["apAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["address", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["voidJournal", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["toAch", "SOAP::SOAPBoolean", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["printVoucher", "SOAP::SOAPBoolean", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["applyList", "NetSuite::SOAP::VendorPaymentApplyList", [0, 1]],
          ["creditList", "NetSuite::SOAP::VendorPaymentCreditList", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorPaymentApply,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPaymentApply"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["job", "SOAP::SOAPString", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["discDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discAmt", "SOAP::SOAPDouble", [0, 1]],
          ["disc", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorPaymentApplyList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPaymentApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::VendorPaymentApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorPaymentCredit,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPaymentCredit"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["appliedTo", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorPaymentCreditList,
        :schema_type => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorPaymentCreditList"),
        :schema_element => [
          ["credit", "NetSuite::SOAP::VendorPaymentCredit[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashRefund,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefund"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["refundCheck", "SOAP::SOAPBoolean", [0, 1]],
          ["toPrint2", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["payPalTranId", "SOAP::SOAPString", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["payPalStatus", "SOAP::SOAPString", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCert", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["itemList", "NetSuite::SOAP::CashRefundItemList", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CashRefundSalesTeamList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashRefundItem,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefundItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPString", [0, 1]],
          ["taxRate2", "SOAP::SOAPString", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashRefundItemList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefundItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::CashRefundItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashRefundSalesTeam,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashRefundSalesTeamList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefundSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::CashRefundSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerPayment,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPayment"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["arAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["pending", "SOAP::SOAPDouble", [0, 1]],
          ["payment", "SOAP::SOAPDouble", [0, 1]],
          ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["checkNum", "SOAP::SOAPString", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["applied", "SOAP::SOAPDouble", [0, 1]],
          ["unapplied", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["applyList", "NetSuite::SOAP::CustomerPaymentApplyList", [0, 1]],
          ["creditList", "NetSuite::SOAP::CustomerPaymentCreditList", [0, 1]],
          ["depositList", "NetSuite::SOAP::CustomerPaymentDepositList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentApply,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentApply"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["job", "SOAP::SOAPString", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["discDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discAmt", "SOAP::SOAPDouble", [0, 1]],
          ["disc", "SOAP::SOAPDouble", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentApplyList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::CustomerPaymentApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentCredit,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentCredit"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["appliedTo", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentCreditList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentCreditList"),
        :schema_element => [
          ["credit", "NetSuite::SOAP::CustomerPaymentCredit[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentDeposit,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentDeposit"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["remaining", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerPaymentDepositList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPaymentDepositList"),
        :schema_element => [
          ["deposit", "NetSuite::SOAP::CustomerPaymentDeposit[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorization,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorization"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["orderStatus", "NetSuite::SOAP::ReturnAuthorizationOrderStatus", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCert", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["itemList", "NetSuite::SOAP::ReturnAuthorizationItemList", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::ReturnAuthorizationSalesTeamList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationItem,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["quantityReceived", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBilled", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["isClosed", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipment", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationItemList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::ReturnAuthorizationItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationSalesTeam,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationSalesTeamList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::ReturnAuthorizationSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CreditMemo,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemo"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["onCreditHold", "SOAP::SOAPString", [0, 1]],
          ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["unapplied", "SOAP::SOAPDouble", [0, 1]],
          ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
          ["applied", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["giftCert", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CreditMemoSalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::CreditMemoItemList", [0, 1]],
          ["applyList", "NetSuite::SOAP::CreditMemoApplyList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CreditMemoSalesTeam,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeam"),
        :schema_element => [
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isPrimary", "SOAP::SOAPBoolean", [0, 1]],
          ["contribution", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CreditMemoSalesTeamList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoSalesTeamList"),
        :schema_element => [
          ["salesTeam", "NetSuite::SOAP::CreditMemoSalesTeam[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CreditMemoItem,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoItem"),
        :schema_element => [
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderLine", "SOAP::SOAPLong", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecTermInMonths", "SOAP::SOAPLong", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumbers", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferRevRec", "SOAP::SOAPBoolean", [0, 1]],
          ["giftCertFrom", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientName", "SOAP::SOAPString", [0, 1]],
          ["giftCertRecipientEmail", "SOAP::SOAPString", [0, 1]],
          ["giftCertMessage", "SOAP::SOAPString", [0, 1]],
          ["giftCertNumber", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAmount", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeAllocation", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CreditMemoItemList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::CreditMemoItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CreditMemoApply,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoApply"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["job", "SOAP::SOAPString", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CreditMemoApplyList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemoApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::CreditMemoApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerRefund,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefund"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["arAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["address", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["voidJournal", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["applyList", "NetSuite::SOAP::CustomerRefundApplyList", [0, 1]],
          ["depositList", "NetSuite::SOAP::CustomerRefundDepositList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerRefundApply,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefundApply"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerRefundApplyList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefundApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::CustomerRefundApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerRefundDeposit,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefundDeposit"),
        :schema_element => [
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["remaining", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerRefundDepositList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefundDepositList"),
        :schema_element => [
          ["customerRefundDeposit", "NetSuite::SOAP::CustomerRefundDeposit[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerDeposit,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerDeposit"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payment", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["checkNum", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DepositApplication,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "DepositApplication"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["arAcct", "SOAP::SOAPString", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deposit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["depDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["applied", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["unapplied", "SOAP::SOAPDouble", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["applyList", "NetSuite::SOAP::DepositApplicationApplyList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DepositApplicationApply,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "DepositApplicationApply"),
        :schema_element => [
          ["doc", "SOAP::SOAPLong", [0, 1]],
          ["apply", "SOAP::SOAPBoolean", [0, 1]],
          ["date", "SOAP::SOAPDateTime", [0, 1]],
          ["job", "SOAP::SOAPString", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["refNum", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["due", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DepositApplicationApplyList,
        :schema_type => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "DepositApplicationApplyList"),
        :schema_element => [
          ["apply", "NetSuite::SOAP::DepositApplicationApply[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LandedCost_,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "LandedCost"),
        :schema_element => [
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["source", "NetSuite::SOAP::LandedCostSource_", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LandedCostList_,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostList"),
        :schema_element => [
          ["landedCost", "NetSuite::SOAP::LandedCost_[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Check,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "Check"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["address", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["voidJournal", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["userTotal", "SOAP::SOAPDouble", [0, 1]],
          ["landedCostMethod", "NetSuite::SOAP::LandedCostMethod_", [0, 1]],
          ["expenseList", "NetSuite::SOAP::CheckExpenseList", [0, 1]],
          ["itemList", "NetSuite::SOAP::CheckItemList", [0, 1]],
          ["landedCostsList", "NetSuite::SOAP::LandedCostList_", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CheckExpense,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "CheckExpense"),
        :schema_element => [
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CheckExpenseList,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "CheckExpenseList"),
        :schema_element => [
          ["expense", "NetSuite::SOAP::CheckExpense[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CheckItem,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "CheckItem"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["line", "SOAP::SOAPLong", [0, 1]],
          ["quantity", "SOAP::SOAPDouble", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amount", "SOAP::SOAPDouble", [0, 1]],
          ["options", "NetSuite::SOAP::CustomFieldList", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["taxRate2", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CheckItemList,
        :schema_type => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "CheckItemList"),
        :schema_element => [
          ["item", "NetSuite::SOAP::CheckItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryAdjustment,
        :schema_type => XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustment"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["estimatedTotalValue", "SOAP::SOAPDouble", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["adjLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["inventoryList", "NetSuite::SOAP::InventoryAdjustmentInventoryList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryAdjustmentInventory,
        :schema_type => XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventory"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["units", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["currentValue", "SOAP::SOAPDouble", [0, 1]],
          ["adjustQtyBy", "SOAP::SOAPDouble", [0, 1]],
          ["binNumbers", "SOAP::SOAPString", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["newQuantity", "SOAP::SOAPDouble", [0, 1]],
          ["unitCost", "SOAP::SOAPDouble", [0, 1]],
          ["foreignCurrencyUnitCost", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryAdjustmentInventoryList,
        :schema_type => XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustmentInventoryList"),
        :schema_element => [
          ["inventory", "NetSuite::SOAP::InventoryAdjustmentInventory[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JournalEntry,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "JournalEntry"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
          ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
          ["parentExpenseAlloc", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reversalEntry", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approved", "SOAP::SOAPBoolean", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["lineList", "NetSuite::SOAP::JournalEntryLineList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JournalEntryLine,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "JournalEntryLine"),
        :schema_element => [
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debit", "SOAP::SOAPDouble", [0, 1]],
          ["credit", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["schedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["schedulenum", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Acct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JournalEntryLineList,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "JournalEntryLineList"),
        :schema_element => [
          ["line", "NetSuite::SOAP::JournalEntryLine[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InterCompanyJournalEntry,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntry"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
          ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
          ["parentExpenseAlloc", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reversalEntry", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["toSubsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approved", "SOAP::SOAPBoolean", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lineList", "NetSuite::SOAP::InterCompanyJournalEntryLineList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InterCompanyJournalEntryLine,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLine"),
        :schema_element => [
          ["lineSubsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debit", "SOAP::SOAPDouble", [0, 1]],
          ["credit", "SOAP::SOAPDouble", [0, 1]],
          ["taxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["taxRate1", "SOAP::SOAPDouble", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["grossAmt", "SOAP::SOAPDouble", [0, 1]],
          ["schedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationSched", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["scheduleNum", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amortizationResidual", "SOAP::SOAPString", [0, 1]],
          ["tax1Amt", "SOAP::SOAPDouble", [0, 1]],
          ["tax1Acct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InterCompanyJournalEntryLineList,
        :schema_type => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntryLineList"),
        :schema_element => [
          ["line", "NetSuite::SOAP::InterCompanyJournalEntryLine[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecord,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecord"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customRecordId", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["disclaimer", "SOAP::SOAPString", [0, 1]],
          ["created", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModified", "SOAP::SOAPDateTime", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
          ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
          ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
          ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["numberingInit", "SOAP::SOAPLong", [0, 1]],
          ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
          ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
          ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
          ["includeName", "SOAP::SOAPBoolean", [0, 1]],
          ["showId", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
          ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
          ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
          ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
          ["enablEmailMerge", "SOAP::SOAPBoolean", [0, 1]],
          ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
          ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
          ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
          ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
          ["recordName", "SOAP::SOAPString", [0, 1]],
          ["scriptId", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordSearch,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CustomRecordSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomList"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isMatrixOption", "SOAP::SOAPBoolean", [0, 1]],
          ["scriptId", "SOAP::SOAPString", [0, 1]],
          ["convertToCustomRecord", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["customValueList", "NetSuite::SOAP::CustomListCustomValueList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomListCustomValue,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomListCustomValue"),
        :schema_element => [
          ["value", "SOAP::SOAPString", [0, 1]],
          ["abbreviation", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["valueId", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomListCustomValueList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomListCustomValueList"),
        :schema_element => [
          ["customValue", "NetSuite::SOAP::CustomListCustomValue[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordType,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordType"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["recordName", "SOAP::SOAPString", [0, 1]],
          ["includeName", "SOAP::SOAPBoolean", [0, 1]],
          ["showId", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
          ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
          ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
          ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
          ["enableMailMerge", "SOAP::SOAPBoolean", [0, 1]],
          ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
          ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
          ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
          ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["disclaimer", "SOAP::SOAPString", [0, 1]],
          ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
          ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
          ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
          ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
          ["numberingInit", "SOAP::SOAPLong", [0, 1]],
          ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
          ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
          ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
          ["scriptId", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldList", "NetSuite::SOAP::CustomRecordTypeFieldList", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["tabsList", "NetSuite::SOAP::CustomRecordTypeTabsList", [0, 1]],
          ["formsList", "NetSuite::SOAP::CustomRecordTypeFormsList", [0, 1]],
          ["onlineFormsList", "NetSuite::SOAP::CustomRecordTypeOnlineFormsList", [0, 1]],
          ["permissionsList", "NetSuite::SOAP::CustomRecordTypePermissionsList", [0, 1]],
          ["linksList", "NetSuite::SOAP::CustomRecordTypeLinksList", [0, 1]],
          ["managersList", "NetSuite::SOAP::CustomRecordTypeManagersList", [0, 1]],
          ["childrenList", "NetSuite::SOAP::CustomRecordTypeChildrenList", [0, 1]],
          ["parentsList", "NetSuite::SOAP::CustomRecordTypeParentsList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeFieldList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeFieldList"),
        :schema_element => [
          ["customField", "NetSuite::SOAP::CustomRecordCustomField[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeTabs,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTabs"),
        :schema_element => [
          ["tabTitle", "SOAP::SOAPString", [0, 1]],
          ["tabParent", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeTabsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeTabsList"),
        :schema_element => [
          ["tabs", "NetSuite::SOAP::CustomRecordTypeTabs[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeForms,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeForms"),
        :schema_element => [
          ["formEdit", "SOAP::SOAPString", [0, 1]],
          ["formName", "SOAP::SOAPString", [0, 1]],
          ["formPref", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeFormsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeFormsList"),
        :schema_element => [
          ["forms", "NetSuite::SOAP::CustomRecordTypeForms[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeOnlineForms,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineForms"),
        :schema_element => [
          ["onlineFormName", "SOAP::SOAPString", [0, 1]],
          ["isOnline", "SOAP::SOAPString", [0, 1]],
          ["templateName", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeOnlineFormsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeOnlineFormsList"),
        :schema_element => [
          ["onlineForms", "NetSuite::SOAP::CustomRecordTypeOnlineForms[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypePermissions,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissions"),
        :schema_element => [
          ["permittedRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["permittedLevel", "NetSuite::SOAP::CustomRecordTypePermissionsPermittedLevel", [0, 1]],
          ["restriction", "NetSuite::SOAP::CustomRecordTypePermissionsRestriction", [0, 1]],
          ["defaultForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["restrictForm", "SOAP::SOAPBoolean", [0, 1]],
          ["searchForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["listView", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["listViewRestricted", "SOAP::SOAPBoolean", [0, 1]],
          ["dashboardView", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["restrictDashboardView", "SOAP::SOAPBoolean", [0, 1]],
          ["sublistView", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["restrictSublistView", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypePermissionsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsList"),
        :schema_element => [
          ["permissions", "NetSuite::SOAP::CustomRecordTypePermissions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeLinks,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeLinks"),
        :schema_element => [
          ["linkCenter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkSection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkLabel", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeLinksList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeLinksList"),
        :schema_element => [
          ["links", "NetSuite::SOAP::CustomRecordTypeLinks[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeManagers,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeManagers"),
        :schema_element => [
          ["managerEmp", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeManagersList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeManagersList"),
        :schema_element => [
          ["managers", "NetSuite::SOAP::CustomRecordTypeManagers[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeChildren,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeChildren"),
        :schema_element => [
          ["childDescr", "SOAP::SOAPString", [0, 1]],
          ["childTab", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeChildrenList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeChildrenList"),
        :schema_element => [
          ["children", "NetSuite::SOAP::CustomRecordTypeChildren[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeParents,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeParents"),
        :schema_element => [
          ["childDescr", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypeParentsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypeParentsList"),
        :schema_element => [
          ["parents", "NetSuite::SOAP::CustomRecordTypeParents[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "EntityCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["appliesToCustomer", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToProject", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToVendor", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToEmployee", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToOtherName", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToContact", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToPartner", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToWebSite", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
          ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::EntityCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "EntityCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "EntityCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::EntityCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FldFilterSelList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "FldFilterSelList"),
        :schema_element => [
          ["fldFilterSel", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CrmCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CrmCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["appliesToTask", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToPhoneCall", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToCase", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToCampaign", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesPerKeyword", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToSolution", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToIssue", "SOAP::SOAPBoolean", [0, 1]],
          ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::CrmCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CrmCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CrmCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CrmCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CrmCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::CrmCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "OtherCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["recType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["filterList", "NetSuite::SOAP::OtherCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "OtherCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "OtherCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::OtherCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemMatrix", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["appliesToInventory", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToNonInventory", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToService", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToOtherCharge", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToKit", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToItemAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["itemSubType", "NetSuite::SOAP::ItemCustomFieldItemSubType", [0, 1]],
          ["filterList", "NetSuite::SOAP::ItemCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::ItemCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionBodyCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["bodyPurchase", "SOAP::SOAPBoolean", [0, 1]],
          ["bodySale", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyOpportunity", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyJournal", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyStore", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyInventoryAdjustment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyAssemblyBuild", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPrintPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyCustomerPayment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyVendorPayment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyDeposit", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyBom", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPrintStatement", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::TransactionBodyCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionBodyCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionBodyCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::TransactionBodyCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionColumnCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["colExpense", "SOAP::SOAPBoolean", [0, 1]],
          ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
          ["colSale", "SOAP::SOAPBoolean", [0, 1]],
          ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
          ["colStore", "SOAP::SOAPBoolean", [0, 1]],
          ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
          ["colJournal", "SOAP::SOAPBoolean", [0, 1]],
          ["colExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
          ["colTime", "SOAP::SOAPBoolean", [0, 1]],
          ["colTimeGroup", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["colPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
          ["colPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
          ["colPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
          ["colReturnForm", "SOAP::SOAPBoolean", [0, 1]],
          ["colStoreWithGroups", "SOAP::SOAPBoolean", [0, 1]],
          ["colGroupOnInvoices", "SOAP::SOAPBoolean", [0, 1]],
          ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::TransactionColumnCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionColumnCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionColumnCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::TransactionColumnCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemOptionCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemOptionCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
          ["colSale", "SOAP::SOAPBoolean", [0, 1]],
          ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
          ["colStore", "SOAP::SOAPBoolean", [0, 1]],
          ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
          ["colAllItems", "SOAP::SOAPBoolean", [0, 1]],
          ["itemsList", "NetSuite::SOAP::ItemsList", [0, 1]],
          ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::ItemOptionCustomFieldFilterList", [0, 1]],
          ["colOptionLabel", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemsList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemsList"),
        :schema_element => [
          ["items", "NetSuite::SOAP::RecordRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemOptionCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemOptionCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemOptionCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::ItemOptionCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordCustomField,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordCustomField"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourcefilterby", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recType", "SOAP::SOAPString", [0, 1]],
          ["filterList", "NetSuite::SOAP::CustomRecordCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordCustomFieldFilter,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilter"),
        :schema_element => [
          ["fldFilter", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fldFilterChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["fldFilterCompareType", "NetSuite::SOAP::CustomizationFilterCompareType", [0, 1]],
          ["fldFilterVal", "SOAP::SOAPString", [0, 1]],
          ["fldFilterSelList", "NetSuite::SOAP::FldFilterSelList", [0, 1]],
          ["fldFilterNotNull", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordCustomFieldFilterList,
        :schema_type => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordCustomFieldFilterList"),
        :schema_element => [
          ["filter", "NetSuite::SOAP::CustomRecordCustomFieldFilter[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Employee,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "Employee"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["template", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["initials", "SOAP::SOAPString", [0, 1]],
          ["officePhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingClass", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payFrequency", "NetSuite::SOAP::EmployeePayFrequency", [0, 1]],
          ["lastPaidDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useTimeData", "SOAP::SOAPBoolean", [0, 1]],
          ["usePerquest", "SOAP::SOAPBoolean", [0, 1]],
          ["workplace", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["directDeposit", "SOAP::SOAPBoolean", [0, 1]],
          ["expenseLimit", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseOrderLimit", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseOrderApprovalLimit", "SOAP::SOAPDouble", [0, 1]],
          ["socialSecurityNumber", "SOAP::SOAPString", [0, 1]],
          ["supervisor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approver", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approvalLimit", "SOAP::SOAPDouble", [0, 1]],
          ["timeApprover", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["employeeType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isJobResource", "SOAP::SOAPBoolean", [0, 1]],
          ["laborCost", "SOAP::SOAPDouble", [0, 1]],
          ["birthDate", "SOAP::SOAPDateTime", [0, 1]],
          ["hireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["releaseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastReviewDate", "SOAP::SOAPDateTime", [0, 1]],
          ["nextReviewDate", "SOAP::SOAPDateTime", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["employeeStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["jobDescription", "SOAP::SOAPString", [0, 1]],
          ["purchaseOrderApprover", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["concurrentWebServicesUser", "SOAP::SOAPBoolean", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["hasOfflineAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["inheritIPRules", "SOAP::SOAPBoolean", [0, 1]],
          ["iPAddressRule", ["SOAP::SOAPString", XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "IPAddressRule")], [0, 1]],
          ["commissionPaymentPreference", "NetSuite::SOAP::EmployeeCommissionPaymentPreference", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::EmployeeSubscriptionsList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::EmployeeAddressbookList", [0, 1]],
          ["rolesList", "NetSuite::SOAP::EmployeeRolesList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeSubscriptions,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeSubscriptions"),
        :schema_element => [
          ["subscribed", "SOAP::SOAPString", [0, 1]],
          ["subscription", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeSubscriptionsList,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeSubscriptionsList"),
        :schema_element => [
          ["subscriptions", "NetSuite::SOAP::EmployeeSubscriptions[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeAddressbook,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeAddressbook"),
        :schema_element => [
          ["defaultShipping", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultBilling", "SOAP::SOAPBoolean", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["internalId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeAddressbookList,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeAddressbookList"),
        :schema_element => [
          ["addressbook", "NetSuite::SOAP::EmployeeAddressbook[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeRoles,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeRoles"),
        :schema_element => [
          ["selectedRole", "NetSuite::SOAP::RecordRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeRolesList,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeRolesList"),
        :schema_element => [
          ["roles", "NetSuite::SOAP::EmployeeRoles[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeSearch,
        :schema_type => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategory,
        :schema_type => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["website", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["parentCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["categoryListLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemListLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["relatedItemsListLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["presentationItemList", "NetSuite::SOAP::SiteCategoryPresentationItemList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategoryPresentationItem,
        :schema_type => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItem"),
        :schema_element => [
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemType", "NetSuite::SOAP::SiteCategoryPresentationItemItemType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["onlinePrice", "SOAP::SOAPDouble", [0, 1]],
          ["basePrice", "SOAP::SOAPDouble", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategoryPresentationItemList,
        :schema_type => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItemList"),
        :schema_element => [
          ["presentationItem", "NetSuite::SOAP::SiteCategoryPresentationItem[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategorySearch,
        :schema_type => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategorySearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SiteCategorySearchBasic", [0, 1]],
          ["shopperJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TimeBill,
        :schema_type => XSD::QName.new(NsEmployees_2008_1TransactionsWebservicesNetsuiteCom, "TimeBill"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["caseTaskEvent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["payrollItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["paidExternally", "SOAP::SOAPBoolean", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsEmployees_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["hours", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TimeBillSearch,
        :schema_type => XSD::QName.new(NsEmployees_2008_1TransactionsWebservicesNetsuiteCom, "TimeBillSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TimeBillSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Campaign,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "Campaign"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["campaignId", "SOAP::SOAPString", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["baseCost", "SOAP::SOAPDouble", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["expectedRevenue", "SOAP::SOAPDouble", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["local", "SOAP::SOAPBoolean", [0, 1]],
          ["totalRevenue", "SOAP::SOAPDouble", [0, 1]],
          ["roi", "SOAP::SOAPDouble", [0, 1]],
          ["profit", "SOAP::SOAPDouble", [0, 1]],
          ["costPerCustomer", "SOAP::SOAPDouble", [0, 1]],
          ["convCostPerCustomer", "SOAP::SOAPDouble", [0, 1]],
          ["conversions", "SOAP::SOAPLong", [0, 1]],
          ["leadsGenerated", "SOAP::SOAPLong", [0, 1]],
          ["uniqueVisitors", "SOAP::SOAPLong", [0, 1]],
          ["vertical", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["audience", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["offer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["promotionCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["family", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["searchEngine", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["keyword", "SOAP::SOAPString", [0, 1]],
          ["campaignEmailList", "NetSuite::SOAP::CampaignEmailList", [0, 1]],
          ["campaignDirectMailList", "NetSuite::SOAP::CampaignDirectMailList", [0, 1]],
          ["campaignEventList", "NetSuite::SOAP::CampaignEventList", [0, 1]],
          ["eventResponseList", "NetSuite::SOAP::CampaignEventResponseList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignEmail,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEmail"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["campaignGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["template", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["subscription", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["channel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["status", "NetSuite::SOAP::CampaignCampaignEmailStatus", [0, 1]],
          ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignEmailList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEmailList"),
        :schema_element => [
          ["campaignEmail", "NetSuite::SOAP::CampaignEmail[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignDirectMail,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignDirectMail"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["campaignGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["template", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["subscription", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["channel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["status", "NetSuite::SOAP::CampaignCampaignDirectMailStatus", [0, 1]],
          ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignDirectMailList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignDirectMailList"),
        :schema_element => [
          ["campaignDirectMail", "NetSuite::SOAP::CampaignDirectMail[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignEvent,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEvent"),
        :schema_element => [
          ["internalId", "SOAP::SOAPString", [0, 1]],
          ["campaignGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["subscription", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["channel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["status", "NetSuite::SOAP::CampaignCampaignEventStatus", [0, 1]],
          ["dateScheduled", "SOAP::SOAPDateTime", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignEventList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEventList"),
        :schema_element => [
          ["campaignEvent", "NetSuite::SOAP::CampaignEvent[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignEventResponse,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEventResponse"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]],
          ["type", "SOAP::SOAPString", [0, 1]],
          ["dateSent", "SOAP::SOAPDateTime", [0, 1]],
          ["sent", "SOAP::SOAPDouble", [0, 1]],
          ["opened", "SOAP::SOAPDouble", [0, 1]],
          ["openedRatio", "SOAP::SOAPDouble", [0, 1]],
          ["clickThru", "SOAP::SOAPDouble", [0, 1]],
          ["clickThruRatio", "SOAP::SOAPDouble", [0, 1]],
          ["responded", "SOAP::SOAPLong", [0, 1]],
          ["unsubscribed", "SOAP::SOAPLong", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignEventResponseList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignEventResponseList"),
        :schema_element => [
          ["eventResponse", "NetSuite::SOAP::CampaignEventResponse[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignSearch,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignSearch"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "SearchRecord"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["campaignRecipientJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignCategory,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCategory"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isexternal", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignAudience,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignAudience"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignFamily,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignFamily"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignSearchEngine,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignSearchEngine"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignChannel,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignChannel"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["eventType", "NetSuite::SOAP::CampaignChannelEventType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignOffer,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignOffer"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignResponse,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponse"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["campaignEvent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["campaignResponseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["channel", "SOAP::SOAPString", [0, 1]],
          ["response", "NetSuite::SOAP::CampaignResponseResponse", [0, 1]],
          ["note", "SOAP::SOAPString", [0, 1]],
          ["responsesList", "NetSuite::SOAP::CampaignResponseResponsesList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignResponseResponses,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponseResponses"),
        :schema_element => [
          ["response", "SOAP::SOAPString", [0, 1]],
          ["responseDate", "SOAP::SOAPString", [0, 1]],
          ["author", "SOAP::SOAPString", [0, 1]],
          ["note", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignResponseResponsesList,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponseResponsesList"),
        :schema_element => [
          ["responses", "NetSuite::SOAP::CampaignResponseResponses[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "replaceAll") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignVertical,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignVertical"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignSubscription,
        :schema_type => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignSubscription"),
        :schema_basetype => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "Record"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["unsubscribed", "SOAP::SOAPBoolean", [0, 1]],
          ["externalName", "SOAP::SOAPString", [0, 1]],
          ["externalDescription", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::RecordType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "RecordType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAllRecordType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "GetAllRecordType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "GetCustomizationType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "InitializeType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeRefType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "InitializeRefType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeletedRecordType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "DeletedRecordType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "GetSelectValueType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusType,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "AsyncStatusType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchStringFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchStringFieldOperator")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchLongFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchLongFieldOperator")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchTextNumberFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchTextNumberFieldOperator")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchDoubleFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDoubleFieldOperator")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchDateFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDateFieldOperator")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchEnumMultiSelectFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchEnumMultiSelectFieldOperator")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchMultiSelectFieldOperator,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchMultiSelectFieldOperator")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchDate,
        :schema_type => XSD::QName.new(NsTypesCore_2008_1PlatformWebservicesNetsuiteCom, "SearchDate")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::StatusDetailType,
        :schema_type => XSD::QName.new(NsTypesFaults_2008_1PlatformWebservicesNetsuiteCom, "StatusDetailType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::StatusDetailCodeType,
        :schema_type => XSD::QName.new(NsTypesFaults_2008_1PlatformWebservicesNetsuiteCom, "StatusDetailCodeType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FaultCodeType,
        :schema_type => XSD::QName.new(NsTypesFaults_2008_1PlatformWebservicesNetsuiteCom, "FaultCodeType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Country,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "Country")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Language,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "Language")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::State,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "State")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::StateAbbreviation,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "StateAbbreviation")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AvsMatchCode,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "AvsMatchCode")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CostingMethod,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "CostingMethod")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VsoeDeferral,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "VsoeDeferral")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VsoePermitDiscount,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "VsoePermitDiscount")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PostingPeriodDate,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "PostingPeriodDate")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PermissionLevel,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "PermissionLevel")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Source,
        :schema_type => XSD::QName.new(NsTypesCommon_2008_1PlatformWebservicesNetsuiteCom, "Source")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAccessLevel,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAccessLevel")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAttendeeAttendance,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeAttendance")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventAttendeeResponse,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventAttendeeResponse")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventFrequency,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventFrequency")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventDow,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventDow")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventDowim,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventDowim")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventReminderMinutes,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderMinutes")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventReminderType,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventReminderType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventStatus,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEventStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaskPriority,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskPriority")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaskReminderMinutes,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskReminderMinutes")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaskReminderType,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskReminderType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaskStatus,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "TaskStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCallPriority,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallPriority")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCallReminderMinutes,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderMinutes")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCallReminderType,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallReminderType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCallStatus,
        :schema_type => XSD::QName.new(NsTypesScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCallStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NoteDirection,
        :schema_type => XSD::QName.new(NsTypesCommunication_2008_1GeneralWebservicesNetsuiteCom, "NoteDirection")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MessageMessageType,
        :schema_type => XSD::QName.new(NsTypesCommunication_2008_1GeneralWebservicesNetsuiteCom, "MessageMessageType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MediaType,
        :schema_type => XSD::QName.new(NsTypesFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "MediaType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FileAttachFrom,
        :schema_type => XSD::QName.new(NsTypesFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileAttachFrom")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FileEncoding,
        :schema_type => XSD::QName.new(NsTypesFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "FileEncoding")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerStatusStage,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerStatusStage")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactType,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "ContactType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerStage,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerStage")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerCreditHoldOverride,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerCreditHoldOverride")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmailPreference,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EmailPreference")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityGroupType,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityGroupDailyTime,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupDailyTime")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityGroupDefView,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupDefView")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityGroupPeriodSize,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroupPeriodSize")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxFractionUnit,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "TaxFractionUnit")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxRounding,
        :schema_type => XSD::QName.new(NsTypesRelationships_2008_1ListsWebservicesNetsuiteCom, "TaxRounding")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseStatusStage,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseStatusStage")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseStage,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseStage")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SolutionStatus,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "SolutionStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::IssueEventStatus,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "IssueEventStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::IssueTrackCode,
        :schema_type => XSD::QName.new(NsTypesSupport_2008_1ListsWebservicesNetsuiteCom, "IssueTrackCode")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CurrencyLocale,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "CurrencyLocale")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AccountType,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "AccountType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemCostingMethod,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemCostingMethod")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemProductFeed,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemProductFeed")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemType,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemWeightUnit,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemWeightUnit")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemPreferenceCriterion,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemPreferenceCriterion")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemOverallQuantityPricingType,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemOverallQuantityPricingType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ScheduleBCode,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ScheduleBCode")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemSubType,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemSubType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CurrencyCurrencyPrecision,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "CurrencyCurrencyPrecision")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesTaxItemAvailable,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "SalesTaxItemAvailable")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemEbayAuctionDuration,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemEbayAuctionDuration")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemOutOfStockBehavior,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemOutOfStockBehavior")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemEbayRelistingOption,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ItemEbayRelistingOption")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ConsolidatedRate,
        :schema_type => XSD::QName.new(NsTypesAccounting_2008_1ListsWebservicesNetsuiteCom, "ConsolidatedRate")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesOrderItemCommitInventory,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemCommitInventory")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesOrderItemCreatePo,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderItemCreatePo")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesOrderOrderStatus,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrderOrderStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentExportTypeUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentExportTypeUps")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentLicenseExceptionUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentLicenseExceptionUps")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentMethodOfTransportUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentMethodOfTransportUps")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentThirdPartyTypeUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeUps")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUpsCodMethodUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsCodMethodUps")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUpsDeliveryConfUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsDeliveryConfUps")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageUpsPackagingUps,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageUpsPackagingUps")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentB13AFilingOptionFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentB13AFilingOptionFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentHomeDeliveryTypeFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentHomeDeliveryTypeFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentThirdPartyTypeFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentThirdPartyTypeFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExAdmPackageTypeFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExAdmPackageTypeFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExCodMethodFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodMethodFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExDeliveryConfFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExDeliveryConfFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExPackagingFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExPackagingFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExSignatureOptionsFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExSignatureOptionsFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentTermsOfSaleFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentTermsOfSaleFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentShipStatus,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentShipStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunityStatus,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "OpportunityStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionType,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "TransactionType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionStatus,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "TransactionStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillmentPackageFedExCodFreightTypeFedEx,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillmentPackageFedExCodFreightTypeFedEx")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionLinkType,
        :schema_type => XSD::QName.new(NsTypesSales_2008_1TransactionsWebservicesNetsuiteCom, "TransactionLinkType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LandedCostSource,
        :schema_type => XSD::QName.new(NsTypesPurchases_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostSource")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LandedCostMethod,
        :schema_type => XSD::QName.new(NsTypesPurchases_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostMethod")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorizationOrderStatus,
        :schema_type => XSD::QName.new(NsTypesCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorizationOrderStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LandedCostSource_,
        :schema_type => XSD::QName.new(NsTypesBank_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostSource")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LandedCostMethod_,
        :schema_type => XSD::QName.new(NsTypesBank_2008_1TransactionsWebservicesNetsuiteCom, "LandedCostMethod")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomizationFieldType,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomizationFieldType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomizationDynamicDefault,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomizationDynamicDefault")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomizationDisplayType,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomizationDisplayType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomizationFilterCompareType,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomizationFilterCompareType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypePermissionsPermittedLevel,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsPermittedLevel")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordTypePermissionsRestriction,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordTypePermissionsRestriction")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemCustomFieldItemSubType,
        :schema_type => XSD::QName.new(NsTypesCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemCustomFieldItemSubType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeePayFrequency,
        :schema_type => XSD::QName.new(NsTypesEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeePayFrequency")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeCommissionPaymentPreference,
        :schema_type => XSD::QName.new(NsTypesEmployees_2008_1ListsWebservicesNetsuiteCom, "EmployeeCommissionPaymentPreference")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategoryPresentationItemItemType,
        :schema_type => XSD::QName.new(NsTypesWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategoryPresentationItemItemType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignCampaignDirectMailStatus,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCampaignDirectMailStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignCampaignEmailStatus,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCampaignEmailStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignCampaignEventStatus,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCampaignEventStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignChannelEventType,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignChannelEventType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignResponseResponse,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponseResponse")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignCampaignEventType,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCampaignEventType")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignResponse_,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponse")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignStatus,
        :schema_type => XSD::QName.new(NsTypesMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignStatus")
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Status,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status"),
        :schema_element => [
          ["statusDetail", "NetSuite::SOAP::StatusDetail[]", [0, nil]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "isSuccess") => "SOAP::SOAPBoolean"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::WsRoleList,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "wsRoleList"),
        :schema_element => [
          ["wsRole", "NetSuite::SOAP::WsRole[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Record,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "record"),
        :schema_element => [
          ["nullFieldList", "NetSuite::SOAP::NullField", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchRecord,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchRecord"),
        :schema_element => []
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchResult,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["pageSize", "SOAP::SOAPInt", [0, 1]],
          ["totalPages", "SOAP::SOAPInt", [0, 1]],
          ["pageIndex", "SOAP::SOAPInt", [0, 1]],
          ["recordList", "NetSuite::SOAP::RecordList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResult,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult"),
        :schema_element => [
          ["jobId", "SOAP::SOAPString"],
          ["status", "NetSuite::SOAP::AsyncStatusType"],
          ["percentCompleted", "SOAP::SOAPDouble"],
          ["estRemainingDuration", "SOAP::SOAPDouble"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAllResult,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getAllResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["recordList", "NetSuite::SOAP::RecordList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationResult,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getCustomizationResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["recordList", "NetSuite::SOAP::RecordList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueResult,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["totalRecords", "SOAP::SOAPInt", [0, 1]],
          ["recordRefList", "NetSuite::SOAP::RecordRefList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::RecordList,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "recordList"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::RecordRefList,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "recordRefList"),
        :schema_element => [
          ["recordRef", "NetSuite::SOAP::RecordRef[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::BaseRef,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "baseRef"),
        :schema_element => [
          ["name", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetItemAvailabilityResult,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["itemAvailabilityList", "NetSuite::SOAP::ItemAvailabilityList", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeletedRecordList,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "deletedRecordList"),
        :schema_element => [
          ["deletedRecord", "NetSuite::SOAP::DeletedRecord[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetDeletedResult,
        :schema_name => XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getDeletedResult"),
        :schema_element => [
          ["status", "NetSuite::SOAP::Status"],
          ["deletedRecordList", "NetSuite::SOAP::DeletedRecordList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InsufficientPermissionFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "insufficientPermissionFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvalidAccountFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "invalidAccountFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvalidCredentialsFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "invalidCredentialsFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvalidSessionFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "invalidSessionFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExceededRequestLimitFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "exceededRequestLimitFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExceededUsageLimitFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "exceededUsageLimitFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExceededRecordCountFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "exceededRecordCountFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExceededRequestSizeFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "exceededRequestSizeFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InvalidVersionFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "invalidVersionFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "asyncFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UnexpectedErrorFault,
        :schema_name => XSD::QName.new(NsFaults_2008_1PlatformWebservicesNetsuiteCom, "unexpectedErrorFault"),
        :schema_element => [
          ["code", "NetSuite::SOAP::FaultCodeType"],
          ["message", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SessionInfo,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "sessionInfo"),
        :schema_element => [
          ["userId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ApplicationInfo,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "applicationInfo"),
        :schema_element => [
          ["applicationId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerInfo,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "partnerInfo"),
        :schema_element => [
          ["partnerId", "SOAP::SOAPString", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DocumentInfo,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "documentInfo"),
        :schema_element => [
          ["nsId", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Preferences,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "preferences"),
        :schema_element => [
          ["warningAsError", "SOAP::SOAPBoolean", [0, 1]],
          ["useConditionalDefaultsOnAdd", "SOAP::SOAPBoolean", [0, 1]],
          ["useConditionalDefaultsOnUpdate", "SOAP::SOAPBoolean", [0, 1]],
          ["disableMandatoryCustomFieldValidation", "SOAP::SOAPBoolean", [0, 1]],
          ["disableSystemNotesForCustomFields", "SOAP::SOAPBoolean", [0, 1]],
          ["ignoreReadOnlyFields", "SOAP::SOAPBoolean", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchPreferences,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "searchPreferences"),
        :schema_element => [
          ["bodyFieldsOnly", "SOAP::SOAPBoolean", [0, 1]],
          ["pageSize", "SOAP::SOAPInt", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SessionResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "sessionResponse"),
        :schema_element => [
          ["status", ["NetSuite::SOAP::Status", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status")]],
          ["wsRoleList", ["NetSuite::SOAP::WsRoleList", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "wsRoleList")], [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::WriteResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "writeResponse"),
        :schema_element => [
          ["status", ["NetSuite::SOAP::Status", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status")]],
          ["baseRef", "NetSuite::SOAP::BaseRef", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReadResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "readResponse"),
        :schema_element => [
          ["status", ["NetSuite::SOAP::Status", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "status")]],
          ["record", "NetSuite::SOAP::Record", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::WriteResponseList,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "writeResponseList"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReadResponseList,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "readResponseList"),
        :schema_element => [
          ["readResponse", "NetSuite::SOAP::ReadResponse[]", [0, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LoginResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "loginResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MapSsoResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "mapSsoResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ChangePasswordOrEmailResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "changePasswordOrEmailResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LogoutResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "logoutResponse"),
        :schema_element => [
          ["sessionResponse", "NetSuite::SOAP::SessionResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AddResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "addResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AddListResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "addListResponse"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UpdateResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "updateResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UpdateListResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "updateListResponse"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeleteResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "deleteResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeleteListResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "deleteListResponse"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "searchResponse"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchMoreResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "searchMoreResponse"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchNextResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "searchNextResponse"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getResponse"),
        :schema_element => [
          ["readResponse", "NetSuite::SOAP::ReadResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetListResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getListResponse"),
        :schema_element => [
          ["readResponseList", "NetSuite::SOAP::ReadResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAllResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getAllResponse"),
        :schema_element => [
          ["getAllResult", ["NetSuite::SOAP::GetAllResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getAllResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getCustomizationResponse"),
        :schema_element => [
          ["getCustomizationResult", ["NetSuite::SOAP::GetCustomizationResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getCustomizationResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "initializeResponse"),
        :schema_element => [
          ["readResponse", "NetSuite::SOAP::ReadResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeListResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "initializeListResponse"),
        :schema_element => [
          ["readResponseList", "NetSuite::SOAP::ReadResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueResponse"),
        :schema_element => [
          ["getSelectValueResult", ["NetSuite::SOAP::GetSelectValueResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getSelectValueResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetItemAvailabilityResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResponse"),
        :schema_element => [
          ["getItemAvailabilityResult", ["NetSuite::SOAP::GetItemAvailabilityResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getItemAvailabilityResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AttachResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "attachResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DetachResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "detachResponse"),
        :schema_element => [
          ["writeResponse", "NetSuite::SOAP::WriteResponse"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncAddListResponse"),
        :schema_element => [
          ["asyncStatusResult", ["NetSuite::SOAP::AsyncStatusResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncUpdateListResponse"),
        :schema_element => [
          ["asyncStatusResult", ["NetSuite::SOAP::AsyncStatusResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncDeleteListResponse"),
        :schema_element => [
          ["asyncStatusResult", ["NetSuite::SOAP::AsyncStatusResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncGetListResponse"),
        :schema_element => [
          ["asyncStatusResult", ["NetSuite::SOAP::AsyncStatusResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncInitializeListResponse"),
        :schema_element => [
          ["asyncStatusResult", ["NetSuite::SOAP::AsyncStatusResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncSearchResponse"),
        :schema_element => [
          ["asyncStatusResult", ["NetSuite::SOAP::AsyncStatusResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncStatusResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "checkAsyncStatusResponse"),
        :schema_element => [
          ["asyncStatusResult", ["NetSuite::SOAP::AsyncStatusResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "asyncStatusResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAsyncResultResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getAsyncResultResponse"),
        :schema_element => [
          ["asyncResult", "NetSuite::SOAP::AsyncResult"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncResult,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncResult"),
        :schema_element => []
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncAddListResult,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncAddListResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncUpdateListResult,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncUpdateListResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncDeleteListResult,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncDeleteListResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncGetListResult,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncGetListResult"),
        :schema_element => [
          ["readResponseList", "NetSuite::SOAP::ReadResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncInitializeListResult,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncInitializeListResult"),
        :schema_element => [
          ["writeResponseList", "NetSuite::SOAP::WriteResponseList"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncSearchResult,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncSearchResult"),
        :schema_element => [
          ["searchResult", ["NetSuite::SOAP::SearchResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "searchResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetDeletedResponse,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getDeletedResponse"),
        :schema_element => [
          ["getDeletedResult", ["NetSuite::SOAP::GetDeletedResult", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "getDeletedResult")]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LoginRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "login"),
        :schema_element => [
          ["passport", "NetSuite::SOAP::Passport"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MapSsoRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "mapSso"),
        :schema_element => [
          ["ssoCredentials", "NetSuite::SOAP::SsoCredentials"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ChangePasswordOrEmailRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "changePasswordOrEmail"),
        :schema_element => [
          ["changePasswordOrEmailCredentials", "NetSuite::SOAP::ChangePasswordOrEmailCredentials"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LogoutRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "logout"),
        :schema_element => []
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AddRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "add"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeleteRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "delete"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "search"),
        :schema_element => [
          ["searchRecord", "NetSuite::SOAP::SearchRecord"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchMoreRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "searchMore"),
        :schema_element => [
          ["pageIndex", "SOAP::SOAPInt"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SearchNextRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "searchNext"),
        :schema_element => []
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UpdateRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "update"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AddListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "addList"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DeleteListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "deleteList"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UpdateListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "updateList"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "get"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getList"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAllRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getAll"),
        :schema_element => [
          ["record", "NetSuite::SOAP::GetAllRecord"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetCustomizationRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getCustomization"),
        :schema_element => [
          ["customizationType", "NetSuite::SOAP::CustomizationType"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "initialize"),
        :schema_element => [
          ["initializeRecord", "NetSuite::SOAP::InitializeRecord"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InitializeListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "initializeList"),
        :schema_element => [
          ["initializeRecord", "NetSuite::SOAP::InitializeRecord[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetSelectValueRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getSelectValue"),
        :schema_element => [
          ["fieldName", "NetSuite::SOAP::GetSelectValueField"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetItemAvailabilityRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getItemAvailability"),
        :schema_element => [
          ["itemAvailabilityFilter", "NetSuite::SOAP::ItemAvailabilityFilter"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AttachRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "attach"),
        :schema_element => [
          ["attachReferece", "NetSuite::SOAP::AttachReference"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DetachRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "detach"),
        :schema_element => [
          ["attachReferece", "NetSuite::SOAP::AttachReference"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncAddListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncAddList"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncUpdateListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncUpdateList"),
        :schema_element => [
          ["record", "NetSuite::SOAP::Record[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncDeleteListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncDeleteList"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncGetListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncGetList"),
        :schema_element => [
          ["baseRef", "NetSuite::SOAP::BaseRef[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncInitializeListRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncInitializeList"),
        :schema_element => [
          ["initializeRecord", "NetSuite::SOAP::InitializeRecord[]", [1, nil]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AsyncSearchRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "asyncSearch"),
        :schema_element => [
          ["searchRecord", "NetSuite::SOAP::SearchRecord"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CheckAsyncStatusRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "checkAsyncStatus"),
        :schema_element => [
          ["jobId", "SOAP::SOAPString"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetAsyncResultRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getAsyncResult"),
        :schema_element => [
          ["jobId", "SOAP::SOAPString"],
          ["pageIndex", "SOAP::SOAPInt"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GetDeletedRequest,
        :schema_name => XSD::QName.new(NsMessages_2008_1PlatformWebservicesNetsuiteCom, "getDeleted"),
        :schema_element => [
          ["getDeletedFilter", "NetSuite::SOAP::GetDeletedFilter"]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEvent,
        :schema_name => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "CalendarEvent"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supportCase", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["period", "SOAP::SOAPLong", [0, 1]],
          ["frequency", "NetSuite::SOAP::CalendarEventFrequency", [0, 1]],
          ["recurrenceDowMaskList", "NetSuite::SOAP::RecurrenceDowMaskList", [0, 1]],
          ["recurrenceDow", "NetSuite::SOAP::CalendarEventDow", [0, 1]],
          ["recurrenceDowim", "NetSuite::SOAP::CalendarEventDowim", [0, 1]],
          ["seriesStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endByDate", "SOAP::SOAPDateTime", [0, 1]],
          ["noEndDate", "SOAP::SOAPBoolean", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["location", "SOAP::SOAPString", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["allDayEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["reminderType", "NetSuite::SOAP::CalendarEventReminderType", [0, 1]],
          ["reminderMinutes", "NetSuite::SOAP::CalendarEventReminderMinutes", [0, 1]],
          ["status", "NetSuite::SOAP::CalendarEventStatus", [0, 1]],
          ["accessLevel", "NetSuite::SOAP::CalendarEventAccessLevel", [0, 1]],
          ["organizer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["exclusionDateList", "NetSuite::SOAP::ExclusionDateList", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["attendeeList", "NetSuite::SOAP::CalendarEventAttendeeList", [0, 1]],
          ["resourceList", "NetSuite::SOAP::CalendarEventResourceList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CalendarEventSearch,
        :schema_name => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "calendarEventSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["attendeeJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["attendeeContactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["attendeeCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Task,
        :schema_name => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "Task"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supportCase", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["milestone", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["estimatedTime", "SOAP::SOAPDateTime", [0, 1]],
          ["estimatedTimeOverride", "SOAP::SOAPDateTime", [0, 1]],
          ["actualTime", "SOAP::SOAPDateTime", [0, 1]],
          ["timeRemaining", "SOAP::SOAPDateTime", [0, 1]],
          ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["priority", "NetSuite::SOAP::TaskPriority", [0, 1]],
          ["status", "NetSuite::SOAP::TaskStatus", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["reminderType", "NetSuite::SOAP::TaskReminderType", [0, 1]],
          ["reminderMinutes", "NetSuite::SOAP::TaskReminderMinutes", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contactList", "NetSuite::SOAP::TaskContactList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaskSearch,
        :schema_name => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "taskSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["companyCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["jobJoin", "NetSuite::SOAP::JobSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCall,
        :schema_name => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "PhoneCall"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supportCase", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["milestone", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["timedEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["completedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["status", "NetSuite::SOAP::PhoneCallStatus", [0, 1]],
          ["priority", "NetSuite::SOAP::PhoneCallPriority", [0, 1]],
          ["accessLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["reminderType", "NetSuite::SOAP::PhoneCallReminderType", [0, 1]],
          ["reminderMinutes", "NetSuite::SOAP::PhoneCallReminderMinutes", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["contactList", "NetSuite::SOAP::PhoneCallContactList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PhoneCallSearch,
        :schema_name => XSD::QName.new(NsScheduling_2008_1ActivitiesWebservicesNetsuiteCom, "phoneCallSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["companyCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Note,
        :schema_name => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "Note"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["noteType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["direction", "NetSuite::SOAP::NoteDirection", [0, 1]],
          ["noteDate", "SOAP::SOAPDateTime", [0, 1]],
          ["note", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["activity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["author", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["folder", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["media", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["record", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["topic", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NoteSearch,
        :schema_name => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "noteSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["authorJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["campaignJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["entityJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["issueJoin", "NetSuite::SOAP::IssueSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["solutionJoin", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Message,
        :schema_name => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "Message"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["author", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recipient", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cc", "SOAP::SOAPString", [0, 1]],
          ["bcc", "SOAP::SOAPString", [0, 1]],
          ["messageDate", "SOAP::SOAPDateTime", [0, 1]],
          ["recordName", "SOAP::SOAPString", [0, 1]],
          ["recordTypeName", "SOAP::SOAPString", [0, 1]],
          ["subject", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["emailed", "SOAP::SOAPBoolean", [0, 1]],
          ["activity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["compressAttachments", "SOAP::SOAPBoolean", [0, 1]],
          ["incoming", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["transaction", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mediaItemList", "NetSuite::SOAP::MessageMediaItemList", [0, 1]],
          ["dateTime", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MessageSearch,
        :schema_name => XSD::QName.new(NsCommunication_2008_1GeneralWebservicesNetsuiteCom, "messageSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["attachmentsJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["authorJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["campaignJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["entityJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["recipientJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FileSearch,
        :schema_name => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "fileSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["shopperJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::FolderSearch,
        :schema_name => XSD::QName.new(NsFilecabinet_2008_1DocumentsWebservicesNetsuiteCom, "folderSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::FolderSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Contact,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Contact"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["categoryList", "NetSuite::SOAP::CategoryList", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["officePhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["supervisor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supervisorPhone", "SOAP::SOAPString", [0, 1]],
          ["assistant", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assistantPhone", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::ContactAddressbookList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactSearch,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "contactSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["customerPrimaryJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["partnerPrimaryJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]],
          ["vendorPrimaryJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Customer,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Customer"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
          ["altPhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["language", "NetSuite::SOAP::Language", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["territory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["taxExempt", "SOAP::SOAPBoolean", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
          ["creditHoldOverride", "NetSuite::SOAP::CustomerCreditHoldOverride", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["overdueBalance", "SOAP::SOAPDouble", [0, 1]],
          ["daysOverdue", "SOAP::SOAPLong", [0, 1]],
          ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
          ["priceLevel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["prefCCProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["depositBalance", "SOAP::SOAPDouble", [0, 1]],
          ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
          ["taxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["resaleNumber", "SOAP::SOAPString", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["reminderDays", "SOAP::SOAPLong", [0, 1]],
          ["shippingItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["thirdPartyAcct", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyZipcode", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["accessRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["accessHelp", "SOAP::SOAPString", [0, 1]],
          ["campaignCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["webLead", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["referrer", "SOAP::SOAPString", [0, 1]],
          ["keywords", "SOAP::SOAPString", [0, 1]],
          ["clickStream", "SOAP::SOAPString", [0, 1]],
          ["lastPageVisited", "SOAP::SOAPString", [0, 1]],
          ["visits", "SOAP::SOAPLong", [0, 1]],
          ["firstVisit", "SOAP::SOAPDateTime", [0, 1]],
          ["lastVisit", "SOAP::SOAPDateTime", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stage", "NetSuite::SOAP::CustomerStage", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CustomerSalesTeamList", [0, 1]],
          ["downloadList", "NetSuite::SOAP::CustomerDownloadList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::CustomerAddressbookList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["contactList", "NetSuite::SOAP::ContactRoleList", [0, 1]],
          ["creditCardsList", "NetSuite::SOAP::CustomerCreditCardsList", [0, 1]],
          ["groupPricingList", "NetSuite::SOAP::CustomerGroupPricingList", [0, 1]],
          ["itemPricingList", "NetSuite::SOAP::CustomerItemPricingList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerSearch,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "customerSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["hostedPageJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["leadSourceJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["parentCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["salesRepJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["subCustomerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["webSiteCategoryJoin", "NetSuite::SOAP::SiteCategorySearchBasic", [0, 1]],
          ["webSiteItemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerStatus,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "CustomerStatus"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["stage", "NetSuite::SOAP::CustomerStatusStage", [0, 1]],
          ["probability", "SOAP::SOAPDouble", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["includeInLeadReports", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Partner,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Partner"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["partnerCode", "SOAP::SOAPString", [0, 1]],
          ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["referringUrl", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["roleList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["categoryList", "NetSuite::SOAP::CategoryList", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
          ["taxIdNum", "SOAP::SOAPString", [0, 1]],
          ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["bcn", "SOAP::SOAPString", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxFractionUnit", "NetSuite::SOAP::TaxFractionUnit", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["taxRounding", "NetSuite::SOAP::TaxRounding", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["accessRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["subPartnerLogin", "SOAP::SOAPBoolean", [0, 1]],
          ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["contactList", "NetSuite::SOAP::ContactRoleList", [0, 1]],
          ["promoCodeList", "NetSuite::SOAP::PartnerPromoCodeList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::PartnerAddressbookList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerSearch,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "partnerSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Vendor,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Vendor"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["isPerson", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["printOnCheckAs", "SOAP::SOAPString", [0, 1]],
          ["altPhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["altEmail", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["legalName", "SOAP::SOAPString", [0, 1]],
          ["vatRegNumber", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["bcn", "SOAP::SOAPString", [0, 1]],
          ["unbilledOrders", "SOAP::SOAPDouble", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["is1099Eligible", "SOAP::SOAPBoolean", [0, 1]],
          ["isJobResourceVend", "SOAP::SOAPBoolean", [0, 1]],
          ["laborCost", "SOAP::SOAPDouble", [0, 1]],
          ["taxIdNum", "SOAP::SOAPString", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["isAccountant", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["contactList", "NetSuite::SOAP::ContactRoleList", [0, 1]],
          ["pricingScheduleList", "NetSuite::SOAP::VendorPricingScheduleList", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::SubscriptionsList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::VendorAddressbookList", [0, 1]],
          ["rolesList", "NetSuite::SOAP::VendorRolesList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorSearch,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "vendorSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::VendorSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityGroup,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "EntityGroup"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["groupName", "SOAP::SOAPString", [0, 1]],
          ["groupType", "NetSuite::SOAP::EntityGroupType", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["groupOwner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSavedSearch", "SOAP::SOAPBoolean", [0, 1]],
          ["parentGroupType", "NetSuite::SOAP::EntityGroupType", [0, 1]],
          ["savedSearch", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSalesTeam", "SOAP::SOAPBoolean", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["isPrivate", "SOAP::SOAPBoolean", [0, 1]],
          ["restrictionGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isProductTeam", "SOAP::SOAPBoolean", [0, 1]],
          ["isFunctionalTeam", "SOAP::SOAPBoolean", [0, 1]],
          ["issueRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["calendarName", "SOAP::SOAPString", [0, 1]],
          ["calendarStartTime", "NetSuite::SOAP::EntityGroupDailyTime", [0, 1]],
          ["calendarEndTime", "NetSuite::SOAP::EntityGroupDailyTime", [0, 1]],
          ["calendarDefaultView", "NetSuite::SOAP::EntityGroupDefView", [0, 1]],
          ["calendarPeriod", "NetSuite::SOAP::EntityGroupPeriodSize", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityGroupSearch,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "entityGroupSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::EntityGroupSearchBasic", [0, 1]],
          ["groupMemberJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Job,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "Job"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["companyName", "SOAP::SOAPString", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["language", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["altPhone", "SOAP::SOAPString", [0, 1]],
          ["projectedEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["jobType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["percentComplete", "SOAP::SOAPDouble", [0, 1]],
          ["estimatedCost", "SOAP::SOAPDouble", [0, 1]],
          ["estimatedRevenue", "SOAP::SOAPDouble", [0, 1]],
          ["estimatedTime", "SOAP::SOAPDateTime", [0, 1]],
          ["estimatedTimeOverride", "SOAP::SOAPDateTime", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["emailPreference", "NetSuite::SOAP::EmailPreference", [0, 1]],
          ["percentTimeComplete", "SOAP::SOAPDouble", [0, 1]],
          ["actualTime", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["openingBalanceDate", "SOAP::SOAPDateTime", [0, 1]],
          ["openingBalanceAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["timeRemaining", "SOAP::SOAPDateTime", [0, 1]],
          ["estimatedLaborCost", "SOAP::SOAPDouble", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["estimateRevRecTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["limitTimeToAssignees", "SOAP::SOAPBoolean", [0, 1]],
          ["allowTime", "SOAP::SOAPBoolean", [0, 1]],
          ["allowExpenses", "SOAP::SOAPBoolean", [0, 1]],
          ["jobResourcesList", "NetSuite::SOAP::JobResourcesList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::JobAddressbookList", [0, 1]],
          ["milestonesList", "NetSuite::SOAP::JobMilestonesList", [0, 1]],
          ["creditCardsList", "NetSuite::SOAP::JobCreditCardsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobSearch,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "jobSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::JobSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobType,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobType"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JobStatus,
        :schema_name => XSD::QName.new(NsRelationships_2008_1ListsWebservicesNetsuiteCom, "JobStatus"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCase,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCase"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["escalationMessage", "SOAP::SOAPString", [0, 1]],
          ["lastReopenedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["incomingMessage", "SOAP::SOAPString", [0, 1]],
          ["insertsolution", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["outgoingMessage", "SOAP::SOAPString", [0, 1]],
          ["searchsolution", "SOAP::SOAPString", [0, 1]],
          ["emailForm", "SOAP::SOAPBoolean", [0, 1]],
          ["newsolutionfrommsg", "SOAP::SOAPString", [0, 1]],
          ["internalOnly", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["caseNumber", "SOAP::SOAPString", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastMessageDate", "SOAP::SOAPDateTime", [0, 1]],
          ["company", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contact", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["product", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_module", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["serialNumber", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["inboundEmail", "SOAP::SOAPString", [0, 1]],
          ["issue", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["priority", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["origin", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["helpDesk", "SOAP::SOAPBoolean", [0, 1]],
          ["emailEmployeesList", "NetSuite::SOAP::EmailEmployeesList", [0, 1]],
          ["escalateToList", "NetSuite::SOAP::SupportCaseEscalateToList", [0, 1]],
          ["solutionsList", "NetSuite::SOAP::SupportCaseSolutionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseSearch,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "supportCaseSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["contactJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["issueJoin", "NetSuite::SOAP::IssueSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseStatus,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseStatus"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stage", "NetSuite::SOAP::SupportCaseStatusStage", [0, 1]],
          ["caseOnHold", "SOAP::SOAPBoolean", [0, 1]],
          ["autoCloseCase", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseType,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseType"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseOrigin,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseOrigin"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCaseIssue,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCaseIssue"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SupportCasePriority,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "SupportCasePriority"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Solution,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Solution"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["solutionCode", "SOAP::SOAPString", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["status", "NetSuite::SOAP::SolutionStatus", [0, 1]],
          ["displayOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["longDescription", "SOAP::SOAPString", [0, 1]],
          ["topicsList", "NetSuite::SOAP::SolutionTopicsList", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["solutionsList", "NetSuite::SOAP::SolutionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SolutionSearch,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "solutionSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["relatedSolutionJoin", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]],
          ["topicJoin", "NetSuite::SOAP::TopicSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Topic,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Topic"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["parentTopic", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["longDescription", "SOAP::SOAPString", [0, 1]],
          ["solutionList", "NetSuite::SOAP::TopicSolutionList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TopicSearch,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "topicSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TopicSearchBasic", [0, 1]],
          ["solutionJoin", "NetSuite::SOAP::SolutionSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Issue,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "Issue"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueNumber", "SOAP::SOAPString", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["issueType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["product", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_module", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "module")], [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["productTeam", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["source", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reportedBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reproduce", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["duplicateOf", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["severity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["priority", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isShowStopper", "SOAP::SOAPBoolean", [0, 1]],
          ["assigned", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reviewer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isReviewed", "SOAP::SOAPBoolean", [0, 1]],
          ["issueStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["issueTagsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["issueAbstract", "SOAP::SOAPString", [0, 1]],
          ["newDetails", "SOAP::SOAPString", [0, 1]],
          ["isOwner", "SOAP::SOAPBoolean", [0, 1]],
          ["trackCode", "NetSuite::SOAP::IssueTrackCode", [0, 1]],
          ["emailAssignee", "SOAP::SOAPBoolean", [0, 1]],
          ["emailEmployeesList", "NetSuite::SOAP::EmailEmployeesList", [0, 1]],
          ["emailCellsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["externalAbstract", "SOAP::SOAPString", [0, 1]],
          ["externalDetails", "SOAP::SOAPString", [0, 1]],
          ["brokenInVersionList", "NetSuite::SOAP::IssueVersionList", [0, 1]],
          ["targetVersionList", "NetSuite::SOAP::IssueVersionList", [0, 1]],
          ["fixedInVersionList", "NetSuite::SOAP::IssueVersionList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::IssueSearch,
        :schema_name => XSD::QName.new(NsSupport_2008_1ListsWebservicesNetsuiteCom, "issueSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::IssueSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactCategory,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ContactCategory"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["private", "SOAP::SOAPBoolean", [0, 1]],
          ["sync", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerCategory,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "CustomerCategory"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesRole,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SalesRole"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PriceLevel,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PriceLevel"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["discountpct", "SOAP::SOAPDouble", [0, 1]],
          ["updateExistingPrices", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::WinLossReason,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "WinLossReason"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Term,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Term"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["dateDriven", "SOAP::SOAPBoolean", [0, 1]],
          ["daysUntilNetDue", "SOAP::SOAPLong", [0, 1]],
          ["discountPercent", "SOAP::SOAPDouble", [0, 1]],
          ["daysUntilExpiry", "SOAP::SOAPLong", [0, 1]],
          ["dayOfMonthNetDue", "SOAP::SOAPLong", [0, 1]],
          ["dueNextMonthIfWithinDays", "SOAP::SOAPLong", [0, 1]],
          ["discountPercentDateDriven", "SOAP::SOAPDouble", [0, 1]],
          ["dayDiscountExpires", "SOAP::SOAPLong", [0, 1]],
          ["preferred", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NoteType,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NoteType"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PaymentMethod,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PaymentMethod"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["creditCard", "SOAP::SOAPBoolean", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["isDebitCard", "SOAP::SOAPBoolean", [0, 1]],
          ["merchantAccountsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["payPalEmailAddress", "SOAP::SOAPString", [0, 1]],
          ["expressCheckoutArrangement", "SOAP::SOAPString", [0, 1]],
          ["useExpressCheckout", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LeadSource,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LeadSource"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "InventoryItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reorderPointUnits", "SOAP::SOAPString", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelUnits", "SOAP::SOAPString", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["safetyStockLevelUnits", "SOAP::SOAPString", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["costingMethod", "NetSuite::SOAP::ItemCostingMethod", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommittedUnits", "SOAP::SOAPString", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["quantityAvailableUnits", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHandUnits", "SOAP::SOAPString", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::InventoryItemLocationsList", [0, 1]],
          ["quantityOnOrderUnits", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DescriptionItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "DescriptionItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DiscountItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "DiscountItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::MarkupItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "MarkupItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["nonPosting", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["isPreTax", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PaymentItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PaymentItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SubtotalItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SubtotalItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NonInventoryPurchaseItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NonInventoryPurchaseItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NonInventorySaleItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NonInventorySaleItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::NonInventoryResaleItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "NonInventoryResaleItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCostUnits", "SOAP::SOAPString", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherChargeResaleItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "OtherChargeResaleItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherChargePurchaseItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "OtherChargePurchaseItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ServiceResaleItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ServiceResaleItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["createjob", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["billingRatesMatrix", "NetSuite::SOAP::BillingRatesMatrix", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ServicePurchaseItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ServicePurchaseItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["expenseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amortizationTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["residual", "SOAP::SOAPString", [0, 1]],
          ["amortizationPeriod", "SOAP::SOAPLong", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ServiceSaleItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ServiceSaleItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["createjob", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["billingRatesMatrix", "NetSuite::SOAP::BillingRatesMatrix", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherChargeSaleItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "OtherChargeSaleItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitsType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["minimumQuantityUnits", "SOAP::SOAPString", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Currency,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Currency"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["symbol", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["isBaseCurrency", "SOAP::SOAPBoolean", [0, 1]],
          ["locale", "NetSuite::SOAP::CurrencyLocale", [0, 1]],
          ["formatSample", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["inclInFxRateUpdates", "SOAP::SOAPBoolean", [0, 1]],
          ["currencyPrecision", "NetSuite::SOAP::CurrencyCurrencyPrecision", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ExpenseCategory,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ExpenseCategory"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["expenseAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Account,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Account"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["acctType", "NetSuite::SOAP::AccountType", [0, 1]],
          ["acctNumber", "SOAP::SOAPString", [0, 1]],
          ["acctName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPString", [0, 1]],
          ["generalRate", "NetSuite::SOAP::ConsolidatedRate", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cashflowRate", "NetSuite::SOAP::ConsolidatedRate", [0, 1]],
          ["billableExpensesAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferralAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["curDocNum", "SOAP::SOAPLong", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["inventory", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["category1099misc", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeStatement", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balanceSheet", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cashFlow", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["openingBalance", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AccountSearch,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "accountSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::AccountSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Department,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Department"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DepartmentSearch,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "departmentSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::DepartmentSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Classification,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Classification"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ClassificationSearch,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "classificationSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::ClassificationSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Location,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Location"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["tranPrefix", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["addrPhone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["logo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["makeInventoryAvailable", "SOAP::SOAPBoolean", [0, 1]],
          ["makeInventoryAvailableStore", "SOAP::SOAPBoolean", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LocationSearch,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "locationSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::LocationSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::UnitsType,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "UnitsType"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["uomList", "NetSuite::SOAP::UnitsTypeUomList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemSearch,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "itemSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["inventoryLocationJoin", "NetSuite::SOAP::LocationSearchBasic", [0, 1]],
          ["preferredLocationJoin", "NetSuite::SOAP::LocationSearchBasic", [0, 1]],
          ["preferredVendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]],
          ["shopperJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ContactRole,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "ContactRole"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Bin,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Bin"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["binNumber", "SOAP::SOAPString", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::BinSearch,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "binSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::BinSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesTaxItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SalesTaxItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPString", [0, 1]],
          ["taxType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxAgency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["purchaseAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["saleAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["effectiveFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["validUntil", "SOAP::SOAPDateTime", [0, 1]],
          ["eccode", "SOAP::SOAPBoolean", [0, 1]],
          ["reverseCharge", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["excludeFromTaxReports", "SOAP::SOAPBoolean", [0, 1]],
          ["available", "NetSuite::SOAP::SalesTaxItemAvailable", [0, 1]],
          ["export", "SOAP::SOAPBoolean", [0, 1]],
          ["taxAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["county", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxGroup,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxGroup"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["taxitem1", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitprice1", "SOAP::SOAPString", [0, 1]],
          ["taxitem2", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["unitprice2", "SOAP::SOAPString", [0, 1]],
          ["piggyback", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["taxType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["county", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["isDefault", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItemList", "NetSuite::SOAP::TaxGroupTaxItemList", [0, 1]],
          ["mess", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TaxType,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "TaxType"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["nexusesTaxList", "NetSuite::SOAP::TaxTypeNexusesTaxList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SerializedInventoryItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "SerializedInventoryItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
          ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::SerializedInventoryItemNumbersList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::SerializedInventoryItemLocationsList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LotNumberedInventoryItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "LotNumberedInventoryItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["vendorName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["purchaseDescription", "SOAP::SOAPString", [0, 1]],
          ["copyDescription", "SOAP::SOAPBoolean", [0, 1]],
          ["currency", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vendor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["isDropShipItem", "SOAP::SOAPBoolean", [0, 1]],
          ["isSpecialOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturerAddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::ScheduleBCode", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["costUnits", "SOAP::SOAPString", [0, 1]],
          ["reorderMultiple", "SOAP::SOAPLong", [0, 1]],
          ["quantityReorderUnits", "SOAP::SOAPString", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["autoLeadTime", "SOAP::SOAPBoolean", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["weightUnits", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["onHandValueMli", "SOAP::SOAPDouble", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemVendorList", "NetSuite::SOAP::ItemVendorList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::LotNumberedInventoryItemNumbersList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::LotNumberedInventoryItemLocationsList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificateItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["salesDescription", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["liabilityAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["daysBeforeExpiration", "SOAP::SOAPLong", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["authCodesList", "NetSuite::SOAP::GiftCertificateItemAuthCodesList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Subsidiary,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "Subsidiary"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["logo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranPrefix", "SOAP::SOAPString", [0, 1]],
          ["attention", "SOAP::SOAPString", [0, 1]],
          ["addressee", "SOAP::SOAPString", [0, 1]],
          ["addrPhone", "SOAP::SOAPString", [0, 1]],
          ["addr1", "SOAP::SOAPString", [0, 1]],
          ["addr2", "SOAP::SOAPString", [0, 1]],
          ["city", "SOAP::SOAPString", [0, 1]],
          ["state", "SOAP::SOAPString", [0, 1]],
          ["zip", "SOAP::SOAPString", [0, 1]],
          ["country", "NetSuite::SOAP::Country", [0, 1]],
          ["addrText", "SOAP::SOAPString", [0, 1]],
          ["override", "SOAP::SOAPBoolean", [0, 1]],
          ["shipAddr", "SOAP::SOAPString", [0, 1]],
          ["returnAddr", "SOAP::SOAPString", [0, 1]],
          ["returnAddress1", "SOAP::SOAPString", [0, 1]],
          ["returnAddress2", "SOAP::SOAPString", [0, 1]],
          ["returnCity", "SOAP::SOAPString", [0, 1]],
          ["returnState", "SOAP::SOAPString", [0, 1]],
          ["returnCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["returnZip", "SOAP::SOAPString", [0, 1]],
          ["legalName", "SOAP::SOAPString", [0, 1]],
          ["isElimination", "SOAP::SOAPBoolean", [0, 1]],
          ["allowPayroll", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["edition", "SOAP::SOAPString", [0, 1]],
          ["federalIdNumber", "SOAP::SOAPString", [0, 1]],
          ["addrLanguage", "SOAP::SOAPString", [0, 1]],
          ["nonConsol", "SOAP::SOAPString", [0, 1]],
          ["consol", "SOAP::SOAPString", [0, 1]],
          ["shipAddress1", "SOAP::SOAPString", [0, 1]],
          ["shipAddress2", "SOAP::SOAPString", [0, 1]],
          ["shipCity", "SOAP::SOAPString", [0, 1]],
          ["shipState", "SOAP::SOAPString", [0, 1]],
          ["shipCountry", "NetSuite::SOAP::Country", [0, 1]],
          ["shipZip", "SOAP::SOAPString", [0, 1]],
          ["state1TaxNumber", "SOAP::SOAPString", [0, 1]],
          ["ssnOrTin", "SOAP::SOAPString", [0, 1]],
          ["incomeStatement", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balanceSheet", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["cashFlow", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["consolidatedIncomeStatement", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["consolidatedBalanceSheet", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["consolidatedCashFlow", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["nexusList", "NetSuite::SOAP::SubsidiaryNexusList", [0, 1]],
          ["checkLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["classTranslationList", "NetSuite::SOAP::ClassTranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SubsidiarySearch,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "subsidiarySearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SubsidiarySearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertificate,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "GiftCertificate"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["giftCertCode", "SOAP::SOAPString", [0, 1]],
          ["sender", "SOAP::SOAPString", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["originalAmount", "SOAP::SOAPDouble", [0, 1]],
          ["amountRemaining", "SOAP::SOAPDouble", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::GiftCertificateSearch,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "giftCertificateSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::GiftCertificateSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PartnerCategory,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "PartnerCategory"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorCategory,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "VendorCategory"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["isTaxAgency", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::KitItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "kitItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isFulfillable", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::AssemblyItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "assemblyItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["costingMethod", "NetSuite::SOAP::ItemCostingMethod", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::InventoryItemLocationsList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SerializedAssemblyItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "serializedAssemblyItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::SerializedInventoryItemLocationsList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::SerializedInventoryItemNumbersList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::LotNumberedAssemblyItem,
        :schema_name => XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "lotNumberedAssemblyItem"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["upcCode", "SOAP::SOAPString", [0, 1]],
          ["displayName", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["printItems", "SOAP::SOAPBoolean", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["offerSupport", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["availableToPartners", "SOAP::SOAPBoolean", [0, 1]],
          ["subsidiaryList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["includeChildren", "SOAP::SOAPBoolean", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsAccounting_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["cogsAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["incomeAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["assetAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["weight", "SOAP::SOAPDouble", [0, 1]],
          ["weightUnit", "NetSuite::SOAP::ItemWeightUnit", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["costingMethodDisplay", "SOAP::SOAPString", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["trackLandedCost", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deferredRevenueAccount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["stockDescription", "SOAP::SOAPString", [0, 1]],
          ["producer", "SOAP::SOAPBoolean", [0, 1]],
          ["manufacturer", "SOAP::SOAPString", [0, 1]],
          ["mpn", "SOAP::SOAPString", [0, 1]],
          ["multManufactureAddr", "SOAP::SOAPBoolean", [0, 1]],
          ["manufactureraddr1", "SOAP::SOAPString", [0, 1]],
          ["manufacturerCity", "SOAP::SOAPString", [0, 1]],
          ["manufacturerState", "SOAP::SOAPString", [0, 1]],
          ["manufacturerZip", "SOAP::SOAPString", [0, 1]],
          ["countryOfManufacture", "NetSuite::SOAP::Country", [0, 1]],
          ["manufacturerTaxId", "SOAP::SOAPString", [0, 1]],
          ["scheduleBNumber", "SOAP::SOAPString", [0, 1]],
          ["scheduleBQuantity", "SOAP::SOAPLong", [0, 1]],
          ["scheduleBCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["manufacturerTariff", "SOAP::SOAPString", [0, 1]],
          ["preferenceCriterion", "NetSuite::SOAP::ItemPreferenceCriterion", [0, 1]],
          ["issueProduct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["minimumQuantity", "SOAP::SOAPLong", [0, 1]],
          ["enforceMinQtyInternally", "SOAP::SOAPBoolean", [0, 1]],
          ["softDescriptor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSpecialWorkOrderItem", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityPricingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["buildEntireAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["quantityOnHand", "SOAP::SOAPDouble", [0, 1]],
          ["useMarginalRates", "SOAP::SOAPBoolean", [0, 1]],
          ["overallQuantityPricingType", "NetSuite::SOAP::ItemOverallQuantityPricingType", [0, 1]],
          ["pricingGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vsoePrice", "SOAP::SOAPDouble", [0, 1]],
          ["vsoeDeferral", "NetSuite::SOAP::VsoeDeferral", [0, 1]],
          ["vsoePermitDiscount", "NetSuite::SOAP::VsoePermitDiscount", [0, 1]],
          ["vsoeDelivered", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["totalValue", "SOAP::SOAPDouble", [0, 1]],
          ["useBins", "SOAP::SOAPBoolean", [0, 1]],
          ["averageCost", "SOAP::SOAPDouble", [0, 1]],
          ["lastPurchasePrice", "SOAP::SOAPDouble", [0, 1]],
          ["leadTime", "SOAP::SOAPLong", [0, 1]],
          ["safetyStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["safetyStockLevelDays", "SOAP::SOAPLong", [0, 1]],
          ["seasonalDemand", "SOAP::SOAPBoolean", [0, 1]],
          ["serialNumbers", "SOAP::SOAPString", [0, 1]],
          ["reorderPoint", "SOAP::SOAPDouble", [0, 1]],
          ["preferredStockLevel", "SOAP::SOAPDouble", [0, 1]],
          ["expirationDate", "SOAP::SOAPDateTime", [0, 1]],
          ["demandModifier", "SOAP::SOAPDouble", [0, 1]],
          ["autoReorderPoint", "SOAP::SOAPBoolean", [0, 1]],
          ["autoPreferredStockLevel", "SOAP::SOAPBoolean", [0, 1]],
          ["preferredStockLevelDays", "SOAP::SOAPDouble", [0, 1]],
          ["shipIndividually", "SOAP::SOAPBoolean", [0, 1]],
          ["shipPackage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["quantityCommitted", "SOAP::SOAPDouble", [0, 1]],
          ["quantityAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["quantityBackOrdered", "SOAP::SOAPDouble", [0, 1]],
          ["quantityOnOrder", "SOAP::SOAPDouble", [0, 1]],
          ["storeDisplayName", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeItemTemplate", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["isDonationItem", "SOAP::SOAPBoolean", [0, 1]],
          ["showDefaultDonationAmount", "SOAP::SOAPBoolean", [0, 1]],
          ["maxDonationAmount", "SOAP::SOAPDouble", [0, 1]],
          ["dontShowPrice", "SOAP::SOAPBoolean", [0, 1]],
          ["noPriceMessage", "SOAP::SOAPString", [0, 1]],
          ["outOfStockMessage", "SOAP::SOAPString", [0, 1]],
          ["shoppingDotComCategory", "SOAP::SOAPString", [0, 1]],
          ["outOfStockBehavior", "NetSuite::SOAP::ItemOutOfStockBehavior", [0, 1]],
          ["shopzillaCategoryId", "SOAP::SOAPLong", [0, 1]],
          ["nexTagCategory", "SOAP::SOAPString", [0, 1]],
          ["productFeedList", "NetSuite::SOAP::ProductFeedList", [0, 1]],
          ["relatedItemsDescription", "SOAP::SOAPString", [0, 1]],
          ["onSpecial", "SOAP::SOAPBoolean", [0, 1]],
          ["specialsDescription", "SOAP::SOAPString", [0, 1]],
          ["isFeatured", "SOAP::SOAPBoolean", [0, 1]],
          ["featuredDescription", "SOAP::SOAPString", [0, 1]],
          ["itemOptionsList", "NetSuite::SOAP::ItemOptionsList", [0, 1]],
          ["itemNumberOptionsList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["pricingMatrix", "NetSuite::SOAP::PricingMatrix", [0, 1]],
          ["memberList", "NetSuite::SOAP::ItemMemberList", [0, 1]],
          ["locationsList", "NetSuite::SOAP::LotNumberedInventoryItemLocationsList", [0, 1]],
          ["siteCategoryList", "NetSuite::SOAP::SiteCategoryList", [0, 1]],
          ["binNumberList", "NetSuite::SOAP::InventoryItemBinNumberList", [0, 1]],
          ["numbersList", "NetSuite::SOAP::LotNumberedInventoryItemNumbersList", [0, 1]],
          ["translationList", "NetSuite::SOAP::TranslationList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Opportunity,
        :schema_name => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "Opportunity"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["probability", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["daysOpen", "SOAP::SOAPLong", [0, 1]],
          ["forecastType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["projectedTotal", "SOAP::SOAPDouble", [0, 1]],
          ["rangeLow", "SOAP::SOAPDouble", [0, 1]],
          ["rangeHigh", "SOAP::SOAPDouble", [0, 1]],
          ["projAltSalesAmt", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesRangeLow", "SOAP::SOAPDouble", [0, 1]],
          ["altSalesRangeHigh", "SOAP::SOAPDouble", [0, 1]],
          ["weightedTotal", "SOAP::SOAPDouble", [0, 1]],
          ["actionItem", "SOAP::SOAPString", [0, 1]],
          ["winLossReason", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["closeDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::OpportunitySalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::OpportunityItemList", [0, 1]],
          ["competitorsList", "NetSuite::SOAP::OpportunityCompetitorsList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OpportunitySearch,
        :schema_name => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "opportunitySearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["decisionMakerJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["leadSourceJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["partnerJoin", "NetSuite::SOAP::PartnerSearchBasic", [0, 1]],
          ["salesRepJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SalesOrder,
        :schema_name => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "SalesOrder"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["orderStatus", "NetSuite::SOAP::SalesOrderOrderStatus", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["actualShipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["shipComplete", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["payPalStatus", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payPalTranId", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["getAuth", "SOAP::SOAPBoolean", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::SalesOrderSalesTeamList", [0, 1]],
          ["giftCertRedemptionList", "NetSuite::SOAP::GiftCertRedemptionList", [0, 1]],
          ["itemList", "NetSuite::SOAP::SalesOrderItemList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionSearch,
        :schema_name => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "transactionSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["accountJoin", "NetSuite::SOAP::AccountSearchBasic", [0, 1]],
          ["appliedToTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["applyingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["billingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["classJoin", "NetSuite::SOAP::ClassificationSearchBasic", [0, 1]],
          ["contactPrimaryJoin", "NetSuite::SOAP::ContactSearchBasic", [0, 1]],
          ["createdFromJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["departmentJoin", "NetSuite::SOAP::DepartmentSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["fulfillingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["jobJoin", "NetSuite::SOAP::JobSearchBasic", [0, 1]],
          ["leadSourceJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["locationJoin", "NetSuite::SOAP::LocationSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["opportunityJoin", "NetSuite::SOAP::OpportunitySearchBasic", [0, 1]],
          ["payingTransactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["purchaseOrderJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["salesRepJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["subsidiaryJoin", "NetSuite::SOAP::SubsidiarySearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]],
          ["vendorJoin", "NetSuite::SOAP::VendorSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemFulfillment,
        :schema_name => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "ItemFulfillment"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["shipStatus", "NetSuite::SOAP::ItemFulfillmentShipStatus", [0, 1]],
          ["saturdayDeliveryUps", "SOAP::SOAPBoolean", [0, 1]],
          ["sendShipNotifyEmailUps", "SOAP::SOAPBoolean", [0, 1]],
          ["sendBackupEmailUps", "SOAP::SOAPBoolean", [0, 1]],
          ["shipNotifyEmailAddressUps", "SOAP::SOAPString", [0, 1]],
          ["shipNotifyEmailAddress2Ups", "SOAP::SOAPString", [0, 1]],
          ["backupEmailAddressUps", "SOAP::SOAPString", [0, 1]],
          ["shipNotifyEmailMessageUps", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyAcctUps", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyZipcodeUps", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyCountryUps", "NetSuite::SOAP::Country", [0, 1]],
          ["thirdPartyTypeUps", "NetSuite::SOAP::ItemFulfillmentThirdPartyTypeUps", [0, 1]],
          ["partiesToTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
          ["exportTypeUps", "NetSuite::SOAP::ItemFulfillmentExportTypeUps", [0, 1]],
          ["methodOfTransportUps", "NetSuite::SOAP::ItemFulfillmentMethodOfTransportUps", [0, 1]],
          ["carrierIdUps", "SOAP::SOAPString", [0, 1]],
          ["entryNumberUps", "SOAP::SOAPString", [0, 1]],
          ["inbondCodeUps", "SOAP::SOAPString", [0, 1]],
          ["isRoutedExportTransactionUps", "SOAP::SOAPBoolean", [0, 1]],
          ["licenseNumberUps", "SOAP::SOAPString", [0, 1]],
          ["licenseDateUps", "SOAP::SOAPDateTime", [0, 1]],
          ["licenseExceptionUps", "NetSuite::SOAP::ItemFulfillmentLicenseExceptionUps", [0, 1]],
          ["eccNumberUps", "SOAP::SOAPString", [0, 1]],
          ["recipientTaxIdUps", "SOAP::SOAPString", [0, 1]],
          ["blanketStartDateUps", "SOAP::SOAPDateTime", [0, 1]],
          ["blanketEndDateUps", "SOAP::SOAPDateTime", [0, 1]],
          ["shipmentWeightUps", "SOAP::SOAPDouble", [0, 1]],
          ["saturdayDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["saturdayPickupFedex", "SOAP::SOAPBoolean", [0, 1]],
          ["sendShipNotifyEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["sendBackupEmailFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["signatureHomeDeliveryFedEx", "SOAP::SOAPBoolean", [0, 1]],
          ["shipNotifyEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
          ["backupEmailAddressFedEx", "SOAP::SOAPString", [0, 1]],
          ["shipDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
          ["homeDeliveryTypeFedEx", "NetSuite::SOAP::ItemFulfillmentHomeDeliveryTypeFedEx", [0, 1]],
          ["homeDeliveryDateFedEx", "SOAP::SOAPDateTime", [0, 1]],
          ["bookingConfirmationNumFedEx", "SOAP::SOAPString", [0, 1]],
          ["intlExemptionNumFedEx", "SOAP::SOAPString", [0, 1]],
          ["b13aFilingOptionFedEx", "NetSuite::SOAP::ItemFulfillmentB13AFilingOptionFedEx", [0, 1]],
          ["b13aStatementDataFedEx", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyAcctFedEx", "SOAP::SOAPString", [0, 1]],
          ["thirdPartyCountryFedEx", "NetSuite::SOAP::Country", [0, 1]],
          ["thirdPartyTypeFedEx", "NetSuite::SOAP::ItemFulfillmentThirdPartyTypeFedEx", [0, 1]],
          ["shipmentWeightFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["termsOfSaleFedEx", "NetSuite::SOAP::ItemFulfillmentTermsOfSaleFedEx", [0, 1]],
          ["termsFreightChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["termsInsuranceChargeFedEx", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["generateIntegratedShipperLabel", "SOAP::SOAPBoolean", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["packageList", "NetSuite::SOAP::ItemFulfillmentPackageList", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["packageUpsList", "NetSuite::SOAP::ItemFulfillmentPackageUpsList", [0, 1]],
          ["packageFedExList", "NetSuite::SOAP::ItemFulfillmentPackageFedExList", [0, 1]],
          ["itemList", "NetSuite::SOAP::ItemFulfillmentItemList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Invoice,
        :schema_name => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "Invoice"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
          ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["onCreditHold", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["expCostDiscount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemCostDiscount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["timeDiscount", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expCostDiscRate", "SOAP::SOAPString", [0, 1]],
          ["itemCostDiscRate", "SOAP::SOAPString", [0, 1]],
          ["timeDiscRate", "SOAP::SOAPString", [0, 1]],
          ["expCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
          ["itemCostDiscAmount", "SOAP::SOAPDouble", [0, 1]],
          ["timeDiscAmount", "SOAP::SOAPDouble", [0, 1]],
          ["expCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["itemCostDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["timeDiscTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["expCostDiscPrint", "SOAP::SOAPBoolean", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::InvoiceSalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::InvoiceItemList", [0, 1]],
          ["itemCostList", "NetSuite::SOAP::InvoiceItemCostList", [0, 1]],
          ["giftCertRedemptionList", "NetSuite::SOAP::GiftCertRedemptionList", [0, 1]],
          ["expCostList", "NetSuite::SOAP::InvoiceExpCostList", [0, 1]],
          ["timeList", "NetSuite::SOAP::InvoiceTimeList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashSale,
        :schema_name => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "CashSale"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payPalStatus", "SOAP::SOAPString", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["payPalTranId", "SOAP::SOAPString", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["paypalAuthId", "SOAP::SOAPString", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["paypalProcess", "SOAP::SOAPBoolean", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CashSaleSalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::CashSaleItemList", [0, 1]],
          ["itemCostList", "NetSuite::SOAP::CashSaleItemCostList", [0, 1]],
          ["giftCertRedemptionList", "NetSuite::SOAP::GiftCertRedemptionList", [0, 1]],
          ["expCostList", "NetSuite::SOAP::CashSaleExpCostList", [0, 1]],
          ["timeList", "NetSuite::SOAP::CashSaleTimeList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Estimate,
        :schema_name => XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "Estimate"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["probability", "SOAP::SOAPDouble", [0, 1]],
          ["includeInForecast", "SOAP::SOAPBoolean", [0, 1]],
          ["forecastType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["opportunity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsSales_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["expectedCloseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["itemList", "NetSuite::SOAP::EstimateItemList", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::EstimateSalesTeamList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorBill,
        :schema_name => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "VendorBill"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["discountDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["userTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountAmount", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["creditLimit", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["landedCostMethod", "NetSuite::SOAP::LandedCostMethod", [0, 1]],
          ["expenseList", "NetSuite::SOAP::VendorBillExpenseList", [0, 1]],
          ["itemList", "NetSuite::SOAP::VendorBillItemList", [0, 1]],
          ["landedCostsList", "NetSuite::SOAP::LandedCostList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::PurchaseOrder,
        :schema_name => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "PurchaseOrder"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["terms", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dueDate", "SOAP::SOAPDateTime", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipTo", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["transactionShipAddress", "NetSuite::SOAP::ShipAddress", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["fob", "SOAP::SOAPString", [0, 1]],
          ["shipDate", "SOAP::SOAPDateTime", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["trackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["linkedTrackingNumbers", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["itemList", "NetSuite::SOAP::PurchaseOrderItemList", [0, 1]],
          ["expenseList", "NetSuite::SOAP::PurchaseOrderExpenseList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemReceipt,
        :schema_name => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "ItemReceipt"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["landedCostMethod", "NetSuite::SOAP::LandedCostMethod", [0, 1]],
          ["itemList", "NetSuite::SOAP::ItemReceiptItemList", [0, 1]],
          ["expenseList", "NetSuite::SOAP::ItemReceiptExpenseList", [0, 1]],
          ["landedCostsList", "NetSuite::SOAP::LandedCostList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::VendorPayment,
        :schema_name => XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "vendorPayment"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["apAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["address", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["voidJournal", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["toAch", "SOAP::SOAPBoolean", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["printVoucher", "SOAP::SOAPBoolean", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsPurchases_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["applyList", "NetSuite::SOAP::VendorPaymentApplyList", [0, 1]],
          ["creditList", "NetSuite::SOAP::VendorPaymentCreditList", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CashRefund,
        :schema_name => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CashRefund"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["refundCheck", "SOAP::SOAPBoolean", [0, 1]],
          ["toPrint2", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["payPalTranId", "SOAP::SOAPString", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["payPalStatus", "SOAP::SOAPString", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCert", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["payPalProcess", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["itemList", "NetSuite::SOAP::CashRefundItemList", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CashRefundSalesTeamList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerPayment,
        :schema_name => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerPayment"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["arAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["pending", "SOAP::SOAPDouble", [0, 1]],
          ["payment", "SOAP::SOAPDouble", [0, 1]],
          ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["checkNum", "SOAP::SOAPString", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["applied", "SOAP::SOAPDouble", [0, 1]],
          ["unapplied", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["applyList", "NetSuite::SOAP::CustomerPaymentApplyList", [0, 1]],
          ["creditList", "NetSuite::SOAP::CustomerPaymentCreditList", [0, 1]],
          ["depositList", "NetSuite::SOAP::CustomerPaymentDepositList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ReturnAuthorization,
        :schema_name => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "ReturnAuthorization"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecSchedule", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["revRecStartDate", "SOAP::SOAPDateTime", [0, 1]],
          ["revRecEndDate", "SOAP::SOAPDateTime", [0, 1]],
          ["excludeCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shipAddress", "SOAP::SOAPString", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["altSalesTotal", "SOAP::SOAPDouble", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["orderStatus", "NetSuite::SOAP::ReturnAuthorizationOrderStatus", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCert", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["itemList", "NetSuite::SOAP::ReturnAuthorizationItemList", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::ReturnAuthorizationSalesTeamList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CreditMemo,
        :schema_name => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CreditMemo"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["vatRegNum", "SOAP::SOAPString", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["job", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["salesRep", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["partner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["contribPct", "SOAP::SOAPString", [0, 1]],
          ["otherRefNum", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["onCreditHold", "SOAP::SOAPString", [0, 1]],
          ["amountPaid", "SOAP::SOAPDouble", [0, 1]],
          ["salesEffectiveDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["promoCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["amountRemaining", "SOAP::SOAPDouble", [0, 1]],
          ["discountItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["source", "SOAP::SOAPString", [0, 1]],
          ["discountRate", "SOAP::SOAPString", [0, 1]],
          ["isTaxable", "SOAP::SOAPBoolean", [0, 1]],
          ["taxItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxRate", "SOAP::SOAPDouble", [0, 1]],
          ["unapplied", "SOAP::SOAPDouble", [0, 1]],
          ["autoApply", "SOAP::SOAPBoolean", [0, 1]],
          ["applied", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["toBeEmailed", "SOAP::SOAPBoolean", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["toBeFaxed", "SOAP::SOAPBoolean", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["messageSel", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["transactionBillAddress", "NetSuite::SOAP::BillAddress", [0, 1]],
          ["billAddressList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billAddress", "SOAP::SOAPString", [0, 1]],
          ["shipMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["shippingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["handlingTaxCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["shippingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingTax1Rate", "SOAP::SOAPDouble", [0, 1]],
          ["handlingTax2Rate", "SOAP::SOAPString", [0, 1]],
          ["handlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["subTotal", "SOAP::SOAPDouble", [0, 1]],
          ["discountTotal", "SOAP::SOAPDouble", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["altShippingCost", "SOAP::SOAPDouble", [0, 1]],
          ["altHandlingCost", "SOAP::SOAPDouble", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["salesGroup", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["syncSalesTeams", "SOAP::SOAPBoolean", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["giftCert", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giftCertTotal", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertApplied", "SOAP::SOAPDouble", [0, 1]],
          ["giftCertAvailable", "SOAP::SOAPDouble", [0, 1]],
          ["tranIsVsoeBundle", "SOAP::SOAPBoolean", [0, 1]],
          ["vsoeAutoCalc", "SOAP::SOAPBoolean", [0, 1]],
          ["salesTeamList", "NetSuite::SOAP::CreditMemoSalesTeamList", [0, 1]],
          ["itemList", "NetSuite::SOAP::CreditMemoItemList", [0, 1]],
          ["applyList", "NetSuite::SOAP::CreditMemoApplyList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerRefund,
        :schema_name => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerRefund"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["arAcct", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["address", "SOAP::SOAPString", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["voidJournal", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["applyList", "NetSuite::SOAP::CustomerRefundApplyList", [0, 1]],
          ["depositList", "NetSuite::SOAP::CustomerRefundDepositList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomerDeposit,
        :schema_name => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "CustomerDeposit"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payment", "SOAP::SOAPDouble", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["paymentMethod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["currencyName", "SOAP::SOAPString", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["checkNum", "SOAP::SOAPString", [0, 1]],
          ["creditCardProcessor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["creditCard", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccSecurityCode", "SOAP::SOAPString", [0, 1]],
          ["ccNumber", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["ccExpireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["debitCardIssueNo", "SOAP::SOAPString", [0, 1]],
          ["validFrom", "SOAP::SOAPDateTime", [0, 1]],
          ["ccName", "SOAP::SOAPString", [0, 1]],
          ["ccStreet", "SOAP::SOAPString", [0, 1]],
          ["ccZipCode", "SOAP::SOAPString", [0, 1]],
          ["chargeIt", "SOAP::SOAPBoolean", [0, 1]],
          ["ccApproved", "SOAP::SOAPBoolean", [0, 1]],
          ["pnRefNum", "SOAP::SOAPString", [0, 1]],
          ["authCode", "SOAP::SOAPString", [0, 1]],
          ["ccAvsStreetMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["softDescriptor", "SOAP::SOAPString", [0, 1]],
          ["ccAvsZipMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["ccSecurityCodeMatch", "NetSuite::SOAP::AvsMatchCode", [0, 1]],
          ["threeDStatusCode", "SOAP::SOAPString", [0, 1]],
          ["ignoreAvs", "SOAP::SOAPBoolean", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["undepFunds", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::DepositApplication,
        :schema_name => XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "DepositApplication"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["arAcct", "SOAP::SOAPString", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["deposit", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["depDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["total", "SOAP::SOAPDouble", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["applied", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsCustomers_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["unapplied", "SOAP::SOAPDouble", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["applyList", "NetSuite::SOAP::DepositApplicationApplyList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Check,
        :schema_name => XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "Check"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["balance", "SOAP::SOAPDouble", [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["address", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["voidJournal", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["toBePrinted", "SOAP::SOAPBoolean", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["taxTotal", "SOAP::SOAPDouble", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsBank_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["tax2Total", "SOAP::SOAPDouble", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["userTotal", "SOAP::SOAPDouble", [0, 1]],
          ["landedCostMethod", "NetSuite::SOAP::LandedCostMethod_", [0, 1]],
          ["expenseList", "NetSuite::SOAP::CheckExpenseList", [0, 1]],
          ["itemList", "NetSuite::SOAP::CheckItemList", [0, 1]],
          ["landedCostsList", "NetSuite::SOAP::LandedCostList_", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InventoryAdjustment,
        :schema_name => XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "InventoryAdjustment"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["account", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["estimatedTotalValue", "SOAP::SOAPDouble", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsInventory_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["adjLocation", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["inventoryList", "NetSuite::SOAP::InventoryAdjustmentInventoryList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::JournalEntry,
        :schema_name => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "JournalEntry"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
          ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
          ["parentExpenseAlloc", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reversalEntry", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approved", "SOAP::SOAPBoolean", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["lineList", "NetSuite::SOAP::JournalEntryLineList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::InterCompanyJournalEntry,
        :schema_name => XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "InterCompanyJournalEntry"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["postingPeriod", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["exchangeRate", "SOAP::SOAPDouble", [0, 1]],
          ["tranId", "SOAP::SOAPString", [0, 1]],
          ["reversalDate", "SOAP::SOAPDateTime", [0, 1]],
          ["reversalDefer", "SOAP::SOAPBoolean", [0, 1]],
          ["parentExpenseAlloc", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["reversalEntry", "SOAP::SOAPString", [0, 1]],
          ["createdFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsGeneral_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["toSubsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approved", "SOAP::SOAPBoolean", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lineList", "NetSuite::SOAP::InterCompanyJournalEntryLineList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecord,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecord"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customRecordId", "SOAP::SOAPString", [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["disclaimer", "SOAP::SOAPString", [0, 1]],
          ["created", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModified", "SOAP::SOAPDateTime", [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
          ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
          ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
          ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["numberingInit", "SOAP::SOAPLong", [0, 1]],
          ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
          ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
          ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
          ["includeName", "SOAP::SOAPBoolean", [0, 1]],
          ["showId", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
          ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
          ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
          ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
          ["enablEmailMerge", "SOAP::SOAPBoolean", [0, 1]],
          ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
          ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
          ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
          ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
          ["recordName", "SOAP::SOAPString", [0, 1]],
          ["scriptId", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordSearch,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "customRecordSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CustomRecordSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomList,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomList"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isMatrixOption", "SOAP::SOAPBoolean", [0, 1]],
          ["scriptId", "SOAP::SOAPString", [0, 1]],
          ["convertToCustomRecord", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["customValueList", "NetSuite::SOAP::CustomListCustomValueList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordType,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordType"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["recordName", "SOAP::SOAPString", [0, 1]],
          ["includeName", "SOAP::SOAPBoolean", [0, 1]],
          ["showId", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDate", "SOAP::SOAPBoolean", [0, 1]],
          ["showCreationDateOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModified", "SOAP::SOAPBoolean", [0, 1]],
          ["showLastModifiedOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwner", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerOnList", "SOAP::SOAPBoolean", [0, 1]],
          ["showOwnerAllowChange", "SOAP::SOAPBoolean", [0, 1]],
          ["usePermissions", "SOAP::SOAPBoolean", [0, 1]],
          ["allowAttachments", "SOAP::SOAPBoolean", [0, 1]],
          ["showNotes", "SOAP::SOAPBoolean", [0, 1]],
          ["enableMailMerge", "SOAP::SOAPBoolean", [0, 1]],
          ["isOrdered", "SOAP::SOAPBoolean", [0, 1]],
          ["allowInlineEditing", "SOAP::SOAPBoolean", [0, 1]],
          ["isAvailableOffline", "SOAP::SOAPBoolean", [0, 1]],
          ["allowQuickSearch", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["disclaimer", "SOAP::SOAPString", [0, 1]],
          ["enableNumbering", "SOAP::SOAPBoolean", [0, 1]],
          ["numberingPrefix", "SOAP::SOAPString", [0, 1]],
          ["numberingSuffix", "SOAP::SOAPString", [0, 1]],
          ["numberingMinDigits", "SOAP::SOAPLong", [0, 1]],
          ["numberingInit", "SOAP::SOAPLong", [0, 1]],
          ["numberingCurrentNumber", "SOAP::SOAPLong", [0, 1]],
          ["allowNumberingOverride", "SOAP::SOAPBoolean", [0, 1]],
          ["isNumberingUpdateable", "SOAP::SOAPBoolean", [0, 1]],
          ["scriptId", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldList", "NetSuite::SOAP::CustomRecordTypeFieldList", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["tabsList", "NetSuite::SOAP::CustomRecordTypeTabsList", [0, 1]],
          ["formsList", "NetSuite::SOAP::CustomRecordTypeFormsList", [0, 1]],
          ["onlineFormsList", "NetSuite::SOAP::CustomRecordTypeOnlineFormsList", [0, 1]],
          ["permissionsList", "NetSuite::SOAP::CustomRecordTypePermissionsList", [0, 1]],
          ["linksList", "NetSuite::SOAP::CustomRecordTypeLinksList", [0, 1]],
          ["managersList", "NetSuite::SOAP::CustomRecordTypeManagersList", [0, 1]],
          ["childrenList", "NetSuite::SOAP::CustomRecordTypeChildrenList", [0, 1]],
          ["parentsList", "NetSuite::SOAP::CustomRecordTypeParentsList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EntityCustomField,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "EntityCustomField"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["appliesToCustomer", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToProject", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToVendor", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToEmployee", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToOtherName", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToContact", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToPartner", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToWebSite", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
          ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::EntityCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CrmCustomField,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CrmCustomField"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["appliesToTask", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToPhoneCall", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToEvent", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToCase", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToCampaign", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesPerKeyword", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToSolution", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToIssue", "SOAP::SOAPBoolean", [0, 1]],
          ["availableExternally", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::CrmCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::OtherCustomField,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "OtherCustomField"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["recType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["filterList", "NetSuite::SOAP::OtherCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemCustomField,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemCustomField"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemMatrix", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["appliesToInventory", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToNonInventory", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToService", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToOtherCharge", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToGroup", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToKit", "SOAP::SOAPBoolean", [0, 1]],
          ["appliesToItemAssembly", "SOAP::SOAPBoolean", [0, 1]],
          ["itemSubType", "NetSuite::SOAP::ItemCustomFieldItemSubType", [0, 1]],
          ["filterList", "NetSuite::SOAP::ItemCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionBodyCustomField,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionBodyCustomField"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["bodyPurchase", "SOAP::SOAPBoolean", [0, 1]],
          ["bodySale", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyOpportunity", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyJournal", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyStore", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyInventoryAdjustment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyAssemblyBuild", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPrintPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyCustomerPayment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyVendorPayment", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyDeposit", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyBom", "SOAP::SOAPBoolean", [0, 1]],
          ["bodyPrintStatement", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::TransactionBodyCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TransactionColumnCustomField,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "TransactionColumnCustomField"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["colExpense", "SOAP::SOAPBoolean", [0, 1]],
          ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
          ["colSale", "SOAP::SOAPBoolean", [0, 1]],
          ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
          ["colStore", "SOAP::SOAPBoolean", [0, 1]],
          ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
          ["colJournal", "SOAP::SOAPBoolean", [0, 1]],
          ["colExpenseReport", "SOAP::SOAPBoolean", [0, 1]],
          ["colTime", "SOAP::SOAPBoolean", [0, 1]],
          ["colTimeGroup", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemReceipt", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemReceiptOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemFulfillment", "SOAP::SOAPBoolean", [0, 1]],
          ["colItemFulfillmentOrder", "SOAP::SOAPBoolean", [0, 1]],
          ["colPrintFlag", "SOAP::SOAPBoolean", [0, 1]],
          ["colPickingTicket", "SOAP::SOAPBoolean", [0, 1]],
          ["colPackingSlip", "SOAP::SOAPBoolean", [0, 1]],
          ["colReturnForm", "SOAP::SOAPBoolean", [0, 1]],
          ["colStoreWithGroups", "SOAP::SOAPBoolean", [0, 1]],
          ["colGroupOnInvoices", "SOAP::SOAPBoolean", [0, 1]],
          ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::TransactionColumnCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::ItemOptionCustomField,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "ItemOptionCustomField"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFilterBy", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["colPurchase", "SOAP::SOAPBoolean", [0, 1]],
          ["colSale", "SOAP::SOAPBoolean", [0, 1]],
          ["colOpportunity", "SOAP::SOAPBoolean", [0, 1]],
          ["colStore", "SOAP::SOAPBoolean", [0, 1]],
          ["colStoreHidden", "SOAP::SOAPBoolean", [0, 1]],
          ["colAllItems", "SOAP::SOAPBoolean", [0, 1]],
          ["itemsList", "NetSuite::SOAP::ItemsList", [0, 1]],
          ["colKitItem", "SOAP::SOAPBoolean", [0, 1]],
          ["filterList", "NetSuite::SOAP::ItemOptionCustomFieldFilterList", [0, 1]],
          ["colOptionLabel", "SOAP::SOAPString", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CustomRecordCustomField,
        :schema_name => XSD::QName.new(NsCustomization_2008_1SetupWebservicesNetsuiteCom, "CustomRecordCustomField"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["label", "SOAP::SOAPString", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["fieldType", "NetSuite::SOAP::CustomizationFieldType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["selectRecordType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeValue", "SOAP::SOAPBoolean", [0, 1]],
          ["showInList", "SOAP::SOAPBoolean", [0, 1]],
          ["isParent", "SOAP::SOAPBoolean", [0, 1]],
          ["insertBefore", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["displayType", "NetSuite::SOAP::CustomizationDisplayType", [0, 1]],
          ["displayWidth", "SOAP::SOAPLong", [0, 1]],
          ["displayHeight", "SOAP::SOAPLong", [0, 1]],
          ["help", "SOAP::SOAPString", [0, 1]],
          ["parentSubtab", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["linkText", "SOAP::SOAPString", [0, 1]],
          ["isMandatory", "SOAP::SOAPBoolean", [0, 1]],
          ["checkSpelling", "SOAP::SOAPBoolean", [0, 1]],
          ["maxLength", "SOAP::SOAPLong", [0, 1]],
          ["minValue", "SOAP::SOAPDouble", [0, 1]],
          ["maxValue", "SOAP::SOAPDouble", [0, 1]],
          ["defaultChecked", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultValue", "SOAP::SOAPString", [0, 1]],
          ["isFormula", "SOAP::SOAPBoolean", [0, 1]],
          ["defaultSelection", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["dynamicDefault", "NetSuite::SOAP::CustomizationDynamicDefault", [0, 1]],
          ["sourceList", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourceFrom", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["sourcefilterby", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["recType", "SOAP::SOAPString", [0, 1]],
          ["filterList", "NetSuite::SOAP::CustomRecordCustomFieldFilterList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Employee,
        :schema_name => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "Employee"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["template", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["entityId", "SOAP::SOAPString", [0, 1]],
          ["salutation", "SOAP::SOAPString", [0, 1]],
          ["firstName", "SOAP::SOAPString", [0, 1]],
          ["middleName", "SOAP::SOAPString", [0, 1]],
          ["lastName", "SOAP::SOAPString", [0, 1]],
          ["altName", "SOAP::SOAPString", [0, 1]],
          ["phone", "SOAP::SOAPString", [0, 1]],
          ["fax", "SOAP::SOAPString", [0, 1]],
          ["email", "SOAP::SOAPString", [0, 1]],
          ["defaultAddress", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["phoneticName", "SOAP::SOAPString", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["dateCreated", "SOAP::SOAPDateTime", [0, 1]],
          ["initials", "SOAP::SOAPString", [0, 1]],
          ["officePhone", "SOAP::SOAPString", [0, 1]],
          ["homePhone", "SOAP::SOAPString", [0, 1]],
          ["mobilePhone", "SOAP::SOAPString", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["billingClass", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["accountNumber", "SOAP::SOAPString", [0, 1]],
          ["comments", "SOAP::SOAPString", [0, 1]],
          ["unsubscribe", "SOAP::SOAPBoolean", [0, 1]],
          ["image", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["payFrequency", "NetSuite::SOAP::EmployeePayFrequency", [0, 1]],
          ["lastPaidDate", "SOAP::SOAPDateTime", [0, 1]],
          ["currency", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["useTimeData", "SOAP::SOAPBoolean", [0, 1]],
          ["usePerquest", "SOAP::SOAPBoolean", [0, 1]],
          ["workplace", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["directDeposit", "SOAP::SOAPBoolean", [0, 1]],
          ["expenseLimit", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseOrderLimit", "SOAP::SOAPDouble", [0, 1]],
          ["purchaseOrderApprovalLimit", "SOAP::SOAPDouble", [0, 1]],
          ["socialSecurityNumber", "SOAP::SOAPString", [0, 1]],
          ["supervisor", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approver", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["approvalLimit", "SOAP::SOAPDouble", [0, 1]],
          ["timeApprover", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["employeeType", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSalesRep", "SOAP::SOAPBoolean", [0, 1]],
          ["salesRole", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isSupportRep", "SOAP::SOAPBoolean", [0, 1]],
          ["isJobResource", "SOAP::SOAPBoolean", [0, 1]],
          ["laborCost", "SOAP::SOAPDouble", [0, 1]],
          ["birthDate", "SOAP::SOAPDateTime", [0, 1]],
          ["hireDate", "SOAP::SOAPDateTime", [0, 1]],
          ["releaseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastReviewDate", "SOAP::SOAPDateTime", [0, 1]],
          ["nextReviewDate", "SOAP::SOAPDateTime", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["employeeStatus", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["jobDescription", "SOAP::SOAPString", [0, 1]],
          ["purchaseOrderApprover", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["giveAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["concurrentWebServicesUser", "SOAP::SOAPBoolean", [0, 1]],
          ["sendEmail", "SOAP::SOAPBoolean", [0, 1]],
          ["hasOfflineAccess", "SOAP::SOAPBoolean", [0, 1]],
          ["password", "SOAP::SOAPString", [0, 1]],
          ["password2", "SOAP::SOAPString", [0, 1]],
          ["requirePwdChange", "SOAP::SOAPBoolean", [0, 1]],
          ["inheritIPRules", "SOAP::SOAPBoolean", [0, 1]],
          ["iPAddressRule", ["SOAP::SOAPString", XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "IPAddressRule")], [0, 1]],
          ["commissionPaymentPreference", "NetSuite::SOAP::EmployeeCommissionPaymentPreference", [0, 1]],
          ["billPay", "SOAP::SOAPBoolean", [0, 1]],
          ["eligibleForCommission", "SOAP::SOAPBoolean", [0, 1]],
          ["subscriptionsList", "NetSuite::SOAP::EmployeeSubscriptionsList", [0, 1]],
          ["addressbookList", "NetSuite::SOAP::EmployeeAddressbookList", [0, 1]],
          ["rolesList", "NetSuite::SOAP::EmployeeRolesList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::EmployeeSearch,
        :schema_name => XSD::QName.new(NsEmployees_2008_1ListsWebservicesNetsuiteCom, "employeeSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["campaignResponseJoin", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesFromJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["messagesToJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategory,
        :schema_name => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "SiteCategory"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["website", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemId", "SOAP::SOAPString", [0, 1]],
          ["parentCategory", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["categoryListLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemListLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["relatedItemsListLayout", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isOnline", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["storeDetailedDescription", "SOAP::SOAPString", [0, 1]],
          ["storeDisplayThumbnail", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["storeDisplayImage", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["pageTitle", "SOAP::SOAPString", [0, 1]],
          ["metaTagHtml", "SOAP::SOAPString", [0, 1]],
          ["urlComponent", "SOAP::SOAPString", [0, 1]],
          ["searchKeywords", "SOAP::SOAPString", [0, 1]],
          ["presentationItemList", "NetSuite::SOAP::SiteCategoryPresentationItemList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::SiteCategorySearch,
        :schema_name => XSD::QName.new(NsWebsite_2008_1ListsWebservicesNetsuiteCom, "siteCategorySearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::SiteCategorySearchBasic", [0, 1]],
          ["shopperJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TimeBill,
        :schema_name => XSD::QName.new(NsEmployees_2008_1TransactionsWebservicesNetsuiteCom, "TimeBill"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["employee", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["tranDate", "SOAP::SOAPDateTime", [0, 1]],
          ["customer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["caseTaskEvent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["isBillable", "SOAP::SOAPBoolean", [0, 1]],
          ["payrollItem", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["paidExternally", "SOAP::SOAPBoolean", [0, 1]],
          ["item", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["department", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["v_class", ["NetSuite::SOAP::RecordRef", XSD::QName.new(NsEmployees_2008_1TransactionsWebservicesNetsuiteCom, "class")], [0, 1]],
          ["location", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["hours", "SOAP::SOAPString", [0, 1]],
          ["price", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["rate", "SOAP::SOAPDouble", [0, 1]],
          ["overrideRate", "SOAP::SOAPBoolean", [0, 1]],
          ["memo", "SOAP::SOAPString", [0, 1]],
          ["subsidiary", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["supervisorApproval", "SOAP::SOAPBoolean", [0, 1]],
          ["createdDate", "SOAP::SOAPDateTime", [0, 1]],
          ["lastModifiedDate", "SOAP::SOAPDateTime", [0, 1]],
          ["status", "SOAP::SOAPString", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::TimeBillSearch,
        :schema_name => XSD::QName.new(NsEmployees_2008_1TransactionsWebservicesNetsuiteCom, "timeBillSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::TimeBillSearchBasic", [0, 1]],
          ["callJoin", "NetSuite::SOAP::PhoneCallSearchBasic", [0, 1]],
          ["caseJoin", "NetSuite::SOAP::SupportCaseSearchBasic", [0, 1]],
          ["customerJoin", "NetSuite::SOAP::CustomerSearchBasic", [0, 1]],
          ["employeeJoin", "NetSuite::SOAP::EmployeeSearchBasic", [0, 1]],
          ["eventJoin", "NetSuite::SOAP::CalendarEventSearchBasic", [0, 1]],
          ["itemJoin", "NetSuite::SOAP::ItemSearchBasic", [0, 1]],
          ["taskJoin", "NetSuite::SOAP::TaskSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::Campaign,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "Campaign"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["customForm", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["campaignId", "SOAP::SOAPString", [0, 1]],
          ["title", "SOAP::SOAPString", [0, 1]],
          ["category", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["owner", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["startDate", "SOAP::SOAPDateTime", [0, 1]],
          ["endDate", "SOAP::SOAPDateTime", [0, 1]],
          ["url", "SOAP::SOAPString", [0, 1]],
          ["baseCost", "SOAP::SOAPDouble", [0, 1]],
          ["cost", "SOAP::SOAPDouble", [0, 1]],
          ["expectedRevenue", "SOAP::SOAPDouble", [0, 1]],
          ["message", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]],
          ["local", "SOAP::SOAPBoolean", [0, 1]],
          ["totalRevenue", "SOAP::SOAPDouble", [0, 1]],
          ["roi", "SOAP::SOAPDouble", [0, 1]],
          ["profit", "SOAP::SOAPDouble", [0, 1]],
          ["costPerCustomer", "SOAP::SOAPDouble", [0, 1]],
          ["convCostPerCustomer", "SOAP::SOAPDouble", [0, 1]],
          ["conversions", "SOAP::SOAPLong", [0, 1]],
          ["leadsGenerated", "SOAP::SOAPLong", [0, 1]],
          ["uniqueVisitors", "SOAP::SOAPLong", [0, 1]],
          ["vertical", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["audience", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["offer", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["promotionCode", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["itemList", "NetSuite::SOAP::RecordRefList", [0, 1]],
          ["family", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["searchEngine", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["keyword", "SOAP::SOAPString", [0, 1]],
          ["campaignEmailList", "NetSuite::SOAP::CampaignEmailList", [0, 1]],
          ["campaignDirectMailList", "NetSuite::SOAP::CampaignDirectMailList", [0, 1]],
          ["campaignEventList", "NetSuite::SOAP::CampaignEventList", [0, 1]],
          ["eventResponseList", "NetSuite::SOAP::CampaignEventResponseList", [0, 1]],
          ["customFieldList", "NetSuite::SOAP::CustomFieldList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignSearch,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "campaignSearch"),
        :schema_element => [
          ["basic", "NetSuite::SOAP::CampaignSearchBasic", [0, 1]],
          ["campaignRecipientJoin", "NetSuite::SOAP::EntitySearchBasic", [0, 1]],
          ["fileJoin", "NetSuite::SOAP::FileSearchBasic", [0, 1]],
          ["messagesJoin", "NetSuite::SOAP::MessageSearchBasic", [0, 1]],
          ["transactionJoin", "NetSuite::SOAP::TransactionSearchBasic", [0, 1]],
          ["userNotesJoin", "NetSuite::SOAP::NoteSearchBasic", [0, 1]]
        ]
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignCategory,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignCategory"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["parent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isexternal", "SOAP::SOAPBoolean", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignAudience,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignAudience"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignFamily,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignFamily"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignSearchEngine,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignSearchEngine"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignChannel,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignChannel"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["eventType", "NetSuite::SOAP::CampaignChannelEventType", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignOffer,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignOffer"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignResponse,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignResponse"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["entity", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["leadSource", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["campaignEvent", "NetSuite::SOAP::RecordRef", [0, 1]],
          ["campaignResponseDate", "SOAP::SOAPDateTime", [0, 1]],
          ["channel", "SOAP::SOAPString", [0, 1]],
          ["response", "NetSuite::SOAP::CampaignResponseResponse", [0, 1]],
          ["note", "SOAP::SOAPString", [0, 1]],
          ["responsesList", "NetSuite::SOAP::CampaignResponseResponsesList", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignVertical,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignVertical"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )

      LiteralRegistry.register(
        :class => NetSuite::SOAP::CampaignSubscription,
        :schema_name => XSD::QName.new(NsMarketing_2008_1ListsWebservicesNetsuiteCom, "CampaignSubscription"),
        :schema_element => [
          ["nullFieldList", ["NetSuite::SOAP::NullField", XSD::QName.new(NsCore_2008_1PlatformWebservicesNetsuiteCom, "nullFieldList")], [0, 1]],
          ["name", "SOAP::SOAPString", [0, 1]],
          ["description", "SOAP::SOAPString", [0, 1]],
          ["unsubscribed", "SOAP::SOAPBoolean", [0, 1]],
          ["externalName", "SOAP::SOAPString", [0, 1]],
          ["externalDescription", "SOAP::SOAPString", [0, 1]],
          ["isInactive", "SOAP::SOAPBoolean", [0, 1]]
        ],
        :schema_attribute => {
          XSD::QName.new(nil, "internalId") => "SOAP::SOAPString",
          XSD::QName.new(nil, "externalId") => "SOAP::SOAPString"
        }
      )
    end
  end
end
